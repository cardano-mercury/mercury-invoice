openapi: 3.0.3
info:
  title: 'Cardano Mercury: Invoice'
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8100'
paths:
  /api/v1/customers:
    get:
      summary: 'List Customers'
      operationId: listCustomers
      description: ''
      parameters:
        -
          in: query
          name: search
          description: 'Search for customers by name or tax number'
          example: 'John Doe'
          required: false
          schema:
            type: string
            description: 'Search for customers by name or tax number'
            example: 'John Doe'
        -
          in: query
          name: per_page
          description: 'Number of results per page (Min 25, Max 100)'
          example: 25
          required: false
          schema:
            type: integer
            description: 'Number of results per page (Min 25, Max 100)'
            example: 25
        -
          in: query
          name: page
          description: 'Page number'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page number'
            example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      customer_id: 1
                      name: 'Dr. Gerry Wehner V'
                      tax_number: 01JAC5R5YTVARWZZDNJVN55BP2
                      tax_rate: 17.5
                      created_at: '2024-10-17 02:43:45'
                      updated_at: '2024-10-17 02:43:45'
                    -
                      customer_id: 1
                      name: 'Dominic Schimmel'
                      tax_number: 01JAC5R5YV0RXVMW3J0ZXKYHV3
                      tax_rate: 17.5
                      created_at: '2024-10-17 02:43:45'
                      updated_at: '2024-10-17 02:43:45'
                  links:
                    first: '/?page=1'
                    last: null
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: 1
                    path: /
                    per_page: 25
                    to: 2
                properties:
                  data:
                    type: array
                    example:
                      -
                        customer_id: 1
                        name: 'Dr. Gerry Wehner V'
                        tax_number: 01JAC5R5YTVARWZZDNJVN55BP2
                        tax_rate: 17.5
                        created_at: '2024-10-17 02:43:45'
                        updated_at: '2024-10-17 02:43:45'
                      -
                        customer_id: 1
                        name: 'Dominic Schimmel'
                        tax_number: 01JAC5R5YV0RXVMW3J0ZXKYHV3
                        tax_rate: 17.5
                        created_at: '2024-10-17 02:43:45'
                        updated_at: '2024-10-17 02:43:45'
                    items:
                      type: object
                      properties:
                        customer_id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: 'Dr. Gerry Wehner V'
                        tax_number:
                          type: string
                          example: 01JAC5R5YTVARWZZDNJVN55BP2
                        tax_rate:
                          type: number
                          example: 17.5
                        created_at:
                          type: string
                          example: '2024-10-17 02:43:45'
                        updated_at:
                          type: string
                          example: '2024-10-17 02:43:45'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: '/?page=1'
                      last:
                        type: string
                        example: null
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      path:
                        type: string
                        example: /
                      per_page:
                        type: integer
                        example: 25
                      to:
                        type: integer
                        example: 2
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - Customers
    post:
      summary: 'Create Customer'
      operationId: createCustomer
      description: ''
      parameters: []
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    customer_id: 1
                    name: "Ms. Sonia O'Kon IV"
                    tax_number: 01JAC5R5Z4STSKGN49EYXG9SSW
                    tax_rate: 17.5
                    created_at: '2024-10-17 02:43:45'
                    updated_at: '2024-10-17 02:43:45'
                properties:
                  data:
                    type: object
                    properties:
                      customer_id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: "Ms. Sonia O'Kon IV"
                      tax_number:
                        type: string
                        example: 01JAC5R5Z4STSKGN49EYXG9SSW
                      tax_rate:
                        type: number
                        example: 17.5
                      created_at:
                        type: string
                        example: '2024-10-17 02:43:45'
                      updated_at:
                        type: string
                        example: '2024-10-17 02:43:45'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - Customers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'John Doe'
                tax_number:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: ABCD-1234
                tax_rate:
                  type: number
                  description: 'Must be between 0 and 100.'
                  example: 12.5
              required:
                - name
  '/api/v1/customers/{id}':
    get:
      summary: 'Get Customer'
      operationId: getCustomer
      description: ''
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    customer_id: 1
                    name: 'Krista Rohan'
                    tax_number: 01JAC5R5Z9J1Z2QD9GQ23D50HW
                    tax_rate: 17.5
                    created_at: '2024-10-17 02:43:45'
                    updated_at: '2024-10-17 02:43:45'
                properties:
                  data:
                    type: object
                    properties:
                      customer_id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'Krista Rohan'
                      tax_number:
                        type: string
                        example: 01JAC5R5Z9J1Z2QD9GQ23D50HW
                      tax_rate:
                        type: number
                        example: 17.5
                      created_at:
                        type: string
                        example: '2024-10-17 02:43:45'
                      updated_at:
                        type: string
                        example: '2024-10-17 02:43:45'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - Customers
    put:
      summary: 'Update Customer'
      operationId: updateCustomer
      description: ''
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    customer_id: 1
                    name: 'Josefa Kihn'
                    tax_number: 01JAC5R5ZESD9E8JM73KQ9Z45D
                    tax_rate: 17.5
                    created_at: '2024-10-17 02:43:45'
                    updated_at: '2024-10-17 02:43:45'
                properties:
                  data:
                    type: object
                    properties:
                      customer_id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'Josefa Kihn'
                      tax_number:
                        type: string
                        example: 01JAC5R5ZESD9E8JM73KQ9Z45D
                      tax_rate:
                        type: number
                        example: 17.5
                      created_at:
                        type: string
                        example: '2024-10-17 02:43:45'
                      updated_at:
                        type: string
                        example: '2024-10-17 02:43:45'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - Customers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'John Doe'
                tax_number:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: ABCD-1234
                tax_rate:
                  type: number
                  description: 'Must be between 0 and 100.'
                  example: 12.5
              required:
                - name
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the customer.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/customers/{customer_id}/emails':
    get:
      summary: 'List Customer Emails'
      operationId: listCustomerEmails
      description: ''
      parameters:
        -
          in: query
          name: search
          description: 'Search for customer emails by name or address'
          example: john.doe@example.com
          required: false
          schema:
            type: string
            description: 'Search for customer emails by name or address'
            example: john.doe@example.com
        -
          in: query
          name: per_page
          description: 'Number of results per page (Min 25, Max 100)'
          example: 25
          required: false
          schema:
            type: integer
            description: 'Number of results per page (Min 25, Max 100)'
            example: 25
        -
          in: query
          name: page
          description: 'Page number'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page number'
            example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      customer_email_id: 1
                      name: 'Agnes Kirlin'
                      address: jtowne@example.org
                      is_default: true
                      created_at: '2024-10-17 02:43:45'
                      updated_at: '2024-10-17 02:43:45'
                    -
                      customer_email_id: 1
                      name: 'Mikel Harber'
                      address: jonathon25@example.org
                      is_default: true
                      created_at: '2024-10-17 02:43:45'
                      updated_at: '2024-10-17 02:43:45'
                  links:
                    first: '/?page=1'
                    last: null
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: 1
                    path: /
                    per_page: 25
                    to: 2
                properties:
                  data:
                    type: array
                    example:
                      -
                        customer_email_id: 1
                        name: 'Agnes Kirlin'
                        address: jtowne@example.org
                        is_default: true
                        created_at: '2024-10-17 02:43:45'
                        updated_at: '2024-10-17 02:43:45'
                      -
                        customer_email_id: 1
                        name: 'Mikel Harber'
                        address: jonathon25@example.org
                        is_default: true
                        created_at: '2024-10-17 02:43:45'
                        updated_at: '2024-10-17 02:43:45'
                    items:
                      type: object
                      properties:
                        customer_email_id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: 'Agnes Kirlin'
                        address:
                          type: string
                          example: jtowne@example.org
                        is_default:
                          type: boolean
                          example: true
                        created_at:
                          type: string
                          example: '2024-10-17 02:43:45'
                        updated_at:
                          type: string
                          example: '2024-10-17 02:43:45'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: '/?page=1'
                      last:
                        type: string
                        example: null
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      path:
                        type: string
                        example: /
                      per_page:
                        type: integer
                        example: 25
                      to:
                        type: integer
                        example: 2
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Emails'
    post:
      summary: 'Create Customer Email'
      operationId: createCustomerEmail
      description: ''
      parameters: []
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    customer_email_id: 1
                    name: 'Abdiel Boehm'
                    address: krystal55@example.net
                    is_default: true
                    created_at: '2024-10-17 02:43:45'
                    updated_at: '2024-10-17 02:43:45'
                properties:
                  data:
                    type: object
                    properties:
                      customer_email_id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'Abdiel Boehm'
                      address:
                        type: string
                        example: krystal55@example.net
                      is_default:
                        type: boolean
                        example: true
                      created_at:
                        type: string
                        example: '2024-10-17 02:43:45'
                      updated_at:
                        type: string
                        example: '2024-10-17 02:43:45'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Emails'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'John Doe'
                address:
                  type: string
                  description: 'Must be a valid email address. Must be at least 3 characters. Must not be greater than 256 characters.'
                  example: john.doe@example.com
                is_default:
                  type: boolean
                  description: ''
                  example: false
              required:
                - name
                - address
    parameters:
      -
        in: path
        name: customer_id
        description: 'The ID of the customer.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/customers/{customer_id}/emails/{id}':
    get:
      summary: 'Get Customer Email'
      operationId: getCustomerEmail
      description: ''
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    customer_email_id: 1
                    name: 'Missouri Johnson'
                    address: meaghan32@example.com
                    is_default: true
                    created_at: '2024-10-17 02:43:45'
                    updated_at: '2024-10-17 02:43:45'
                properties:
                  data:
                    type: object
                    properties:
                      customer_email_id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'Missouri Johnson'
                      address:
                        type: string
                        example: meaghan32@example.com
                      is_default:
                        type: boolean
                        example: true
                      created_at:
                        type: string
                        example: '2024-10-17 02:43:45'
                      updated_at:
                        type: string
                        example: '2024-10-17 02:43:45'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Emails'
    put:
      summary: 'Update Customer Email'
      operationId: updateCustomerEmail
      description: ''
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    customer_email_id: 1
                    name: 'Miss Emmalee Turner V'
                    address: carter72@example.net
                    is_default: true
                    created_at: '2024-10-17 02:43:45'
                    updated_at: '2024-10-17 02:43:45'
                properties:
                  data:
                    type: object
                    properties:
                      customer_email_id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'Miss Emmalee Turner V'
                      address:
                        type: string
                        example: carter72@example.net
                      is_default:
                        type: boolean
                        example: true
                      created_at:
                        type: string
                        example: '2024-10-17 02:43:45'
                      updated_at:
                        type: string
                        example: '2024-10-17 02:43:45'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Emails'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'John Doe'
                address:
                  type: string
                  description: 'Must be a valid email address. Must be at least 3 characters. Must not be greater than 256 characters.'
                  example: john.doe@example.com
                is_default:
                  type: boolean
                  description: ''
                  example: true
              required:
                - name
                - address
    parameters:
      -
        in: path
        name: customer_id
        description: 'The ID of the customer.'
        example: 1
        required: true
        schema:
          type: integer
      -
        in: path
        name: id
        description: 'The ID of the email.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/customers/{customer_id}/phones':
    get:
      summary: 'List Customer Phones'
      operationId: listCustomerPhones
      description: ''
      parameters:
        -
          in: query
          name: type
          description: ''
          example: Home
          required: false
          schema:
            type: string
            description: ''
            example: Home
            enum:
              - Home
              - Office
              - Mobile
        -
          in: query
          name: search
          description: 'Search for customer phones by name or number'
          example: '0123456789'
          required: false
          schema:
            type: string
            description: 'Search for customer phones by name or number'
            example: '0123456789'
        -
          in: query
          name: per_page
          description: 'Number of results per page (Min 25, Max 100)'
          example: 25
          required: false
          schema:
            type: integer
            description: 'Number of results per page (Min 25, Max 100)'
            example: 25
        -
          in: query
          name: page
          description: 'Page number'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page number'
            example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      customer_phone_id: 1
                      type: Mobile
                      name: 'Ms. Kariane Koss III'
                      number: 1-928-420-1819
                      is_default: true
                      created_at: '2024-10-17 02:43:45'
                      updated_at: '2024-10-17 02:43:45'
                    -
                      customer_phone_id: 1
                      type: Office
                      name: 'Guido Toy'
                      number: 270.886.2722
                      is_default: true
                      created_at: '2024-10-17 02:43:45'
                      updated_at: '2024-10-17 02:43:45'
                  links:
                    first: '/?page=1'
                    last: null
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: 1
                    path: /
                    per_page: 25
                    to: 2
                properties:
                  data:
                    type: array
                    example:
                      -
                        customer_phone_id: 1
                        type: Mobile
                        name: 'Ms. Kariane Koss III'
                        number: 1-928-420-1819
                        is_default: true
                        created_at: '2024-10-17 02:43:45'
                        updated_at: '2024-10-17 02:43:45'
                      -
                        customer_phone_id: 1
                        type: Office
                        name: 'Guido Toy'
                        number: 270.886.2722
                        is_default: true
                        created_at: '2024-10-17 02:43:45'
                        updated_at: '2024-10-17 02:43:45'
                    items:
                      type: object
                      properties:
                        customer_phone_id:
                          type: integer
                          example: 1
                        type:
                          type: string
                          example: Mobile
                        name:
                          type: string
                          example: 'Ms. Kariane Koss III'
                        number:
                          type: string
                          example: 1-928-420-1819
                        is_default:
                          type: boolean
                          example: true
                        created_at:
                          type: string
                          example: '2024-10-17 02:43:45'
                        updated_at:
                          type: string
                          example: '2024-10-17 02:43:45'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: '/?page=1'
                      last:
                        type: string
                        example: null
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      path:
                        type: string
                        example: /
                      per_page:
                        type: integer
                        example: 25
                      to:
                        type: integer
                        example: 2
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Phones'
    post:
      summary: 'Create Customer Phone'
      operationId: createCustomerPhone
      description: ''
      parameters: []
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    customer_phone_id: 1
                    type: Mobile
                    name: 'Dr. Grady Kuhn'
                    number: 1-564-797-8267
                    is_default: true
                    created_at: '2024-10-17 02:43:45'
                    updated_at: '2024-10-17 02:43:45'
                properties:
                  data:
                    type: object
                    properties:
                      customer_phone_id:
                        type: integer
                        example: 1
                      type:
                        type: string
                        example: Mobile
                      name:
                        type: string
                        example: 'Dr. Grady Kuhn'
                      number:
                        type: string
                        example: 1-564-797-8267
                      is_default:
                        type: boolean
                        example: true
                      created_at:
                        type: string
                        example: '2024-10-17 02:43:45'
                      updated_at:
                        type: string
                        example: '2024-10-17 02:43:45'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Phones'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: ''
                  example: Home
                  enum:
                    - Home
                    - Office
                    - Mobile
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'John Doe'
                number:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 32 characters.'
                  example: +1-956-745-2290
                is_default:
                  type: boolean
                  description: ''
                  example: true
              required:
                - type
                - name
                - number
    parameters:
      -
        in: path
        name: customer_id
        description: 'The ID of the customer.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/customers/{customer_id}/phones/{id}':
    get:
      summary: 'Get Customer Phone'
      operationId: getCustomerPhone
      description: ''
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    customer_phone_id: 1
                    type: Office
                    name: 'Miss Lura Dooley'
                    number: 858.744.1185
                    is_default: true
                    created_at: '2024-10-17 02:43:45'
                    updated_at: '2024-10-17 02:43:45'
                properties:
                  data:
                    type: object
                    properties:
                      customer_phone_id:
                        type: integer
                        example: 1
                      type:
                        type: string
                        example: Office
                      name:
                        type: string
                        example: 'Miss Lura Dooley'
                      number:
                        type: string
                        example: 858.744.1185
                      is_default:
                        type: boolean
                        example: true
                      created_at:
                        type: string
                        example: '2024-10-17 02:43:45'
                      updated_at:
                        type: string
                        example: '2024-10-17 02:43:45'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Phones'
    put:
      summary: 'Update Customer Phone'
      operationId: updateCustomerPhone
      description: ''
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    customer_phone_id: 1
                    type: Mobile
                    name: 'Allene Bogisich MD'
                    number: '+1 (914) 754-0483'
                    is_default: true
                    created_at: '2024-10-17 02:43:45'
                    updated_at: '2024-10-17 02:43:45'
                properties:
                  data:
                    type: object
                    properties:
                      customer_phone_id:
                        type: integer
                        example: 1
                      type:
                        type: string
                        example: Mobile
                      name:
                        type: string
                        example: 'Allene Bogisich MD'
                      number:
                        type: string
                        example: '+1 (914) 754-0483'
                      is_default:
                        type: boolean
                        example: true
                      created_at:
                        type: string
                        example: '2024-10-17 02:43:45'
                      updated_at:
                        type: string
                        example: '2024-10-17 02:43:45'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Phones'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: ''
                  example: Home
                  enum:
                    - Home
                    - Office
                    - Mobile
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'John Doe'
                number:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 32 characters.'
                  example: +1-956-745-2290
                is_default:
                  type: boolean
                  description: ''
                  example: true
              required:
                - type
                - name
                - number
    parameters:
      -
        in: path
        name: customer_id
        description: 'The ID of the customer.'
        example: 1
        required: true
        schema:
          type: integer
      -
        in: path
        name: id
        description: 'The ID of the phone.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/customers/{customer_id}/addresses':
    get:
      summary: 'List Customer Addresses'
      operationId: listCustomerAddresses
      description: ''
      parameters:
        -
          in: query
          name: type
          description: ''
          example: Shipping
          required: false
          schema:
            type: string
            description: ''
            example: Shipping
            enum:
              - Billing
              - Shipping
        -
          in: query
          name: search
          description: 'Search for customer addresses by name or any address fields'
          example: '25 Brookfield Road'
          required: false
          schema:
            type: string
            description: 'Search for customer addresses by name or any address fields'
            example: '25 Brookfield Road'
        -
          in: query
          name: per_page
          description: 'Number of results per page (Min 25, Max 100)'
          example: 25
          required: false
          schema:
            type: integer
            description: 'Number of results per page (Min 25, Max 100)'
            example: 25
        -
          in: query
          name: page
          description: 'Page number'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page number'
            example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      customer_address_id: 1
                      type: Billing
                      name: Johnson-King
                      line1: '40305 Dimitri Circles Suite 660'
                      line2: null
                      city: Treutelmouth
                      state: Arkansas
                      postal_code: '57786'
                      country: 'United States'
                      is_default: true
                      created_at: '2024-10-17 02:43:45'
                      updated_at: '2024-10-17 02:43:45'
                    -
                      customer_address_id: 1
                      type: Billing
                      name: 'King Group'
                      line1: '9161 Adalberto Pine'
                      line2: null
                      city: Abbottfort
                      state: Mississippi
                      postal_code: 89740-6753
                      country: 'United States'
                      is_default: true
                      created_at: '2024-10-17 02:43:45'
                      updated_at: '2024-10-17 02:43:45'
                  links:
                    first: '/?page=1'
                    last: null
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: 1
                    path: /
                    per_page: 25
                    to: 2
                properties:
                  data:
                    type: array
                    example:
                      -
                        customer_address_id: 1
                        type: Billing
                        name: Johnson-King
                        line1: '40305 Dimitri Circles Suite 660'
                        line2: null
                        city: Treutelmouth
                        state: Arkansas
                        postal_code: '57786'
                        country: 'United States'
                        is_default: true
                        created_at: '2024-10-17 02:43:45'
                        updated_at: '2024-10-17 02:43:45'
                      -
                        customer_address_id: 1
                        type: Billing
                        name: 'King Group'
                        line1: '9161 Adalberto Pine'
                        line2: null
                        city: Abbottfort
                        state: Mississippi
                        postal_code: 89740-6753
                        country: 'United States'
                        is_default: true
                        created_at: '2024-10-17 02:43:45'
                        updated_at: '2024-10-17 02:43:45'
                    items:
                      type: object
                      properties:
                        customer_address_id:
                          type: integer
                          example: 1
                        type:
                          type: string
                          example: Billing
                        name:
                          type: string
                          example: Johnson-King
                        line1:
                          type: string
                          example: '40305 Dimitri Circles Suite 660'
                        line2:
                          type: string
                          example: null
                        city:
                          type: string
                          example: Treutelmouth
                        state:
                          type: string
                          example: Arkansas
                        postal_code:
                          type: string
                          example: '57786'
                        country:
                          type: string
                          example: 'United States'
                        is_default:
                          type: boolean
                          example: true
                        created_at:
                          type: string
                          example: '2024-10-17 02:43:45'
                        updated_at:
                          type: string
                          example: '2024-10-17 02:43:45'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: '/?page=1'
                      last:
                        type: string
                        example: null
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      path:
                        type: string
                        example: /
                      per_page:
                        type: integer
                        example: 25
                      to:
                        type: integer
                        example: 2
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Addresses'
    post:
      summary: 'Create Customer Address'
      operationId: createCustomerAddress
      description: ''
      parameters: []
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    customer_address_id: 1
                    type: Shipping
                    name: 'Torp PLC'
                    line1: '20141 Purdy Route'
                    line2: null
                    city: 'New Ignacio'
                    state: 'Rhode Island'
                    postal_code: '61913'
                    country: 'United States'
                    is_default: true
                    created_at: '2024-10-17 02:43:45'
                    updated_at: '2024-10-17 02:43:45'
                properties:
                  data:
                    type: object
                    properties:
                      customer_address_id:
                        type: integer
                        example: 1
                      type:
                        type: string
                        example: Shipping
                      name:
                        type: string
                        example: 'Torp PLC'
                      line1:
                        type: string
                        example: '20141 Purdy Route'
                      line2:
                        type: string
                        example: null
                      city:
                        type: string
                        example: 'New Ignacio'
                      state:
                        type: string
                        example: 'Rhode Island'
                      postal_code:
                        type: string
                        example: '61913'
                      country:
                        type: string
                        example: 'United States'
                      is_default:
                        type: boolean
                        example: true
                      created_at:
                        type: string
                        example: '2024-10-17 02:43:45'
                      updated_at:
                        type: string
                        example: '2024-10-17 02:43:45'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Addresses'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: ''
                  example: Billing
                  enum:
                    - Billing
                    - Shipping
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'John Doe'
                line1:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: '2592 Jada Key'
                line2:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'Apartment 504'
                city:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'South Josh'
                state:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: Kentucky
                postal_code:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 62249-8453
                country:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'United States'
                is_default:
                  type: boolean
                  description: ''
                  example: false
              required:
                - type
                - name
                - line1
                - city
                - postal_code
                - country
    parameters:
      -
        in: path
        name: customer_id
        description: 'The ID of the customer.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/customers/{customer_id}/addresses/{id}':
    get:
      summary: 'Get Customer Address'
      operationId: getCustomerAddress
      description: ''
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    customer_address_id: 1
                    type: Billing
                    name: Fisher-Roberts
                    line1: '5403 Casper Haven Suite 635'
                    line2: null
                    city: 'West Joshland'
                    state: Colorado
                    postal_code: '21625'
                    country: 'United States'
                    is_default: true
                    created_at: '2024-10-17 02:43:45'
                    updated_at: '2024-10-17 02:43:45'
                properties:
                  data:
                    type: object
                    properties:
                      customer_address_id:
                        type: integer
                        example: 1
                      type:
                        type: string
                        example: Billing
                      name:
                        type: string
                        example: Fisher-Roberts
                      line1:
                        type: string
                        example: '5403 Casper Haven Suite 635'
                      line2:
                        type: string
                        example: null
                      city:
                        type: string
                        example: 'West Joshland'
                      state:
                        type: string
                        example: Colorado
                      postal_code:
                        type: string
                        example: '21625'
                      country:
                        type: string
                        example: 'United States'
                      is_default:
                        type: boolean
                        example: true
                      created_at:
                        type: string
                        example: '2024-10-17 02:43:45'
                      updated_at:
                        type: string
                        example: '2024-10-17 02:43:45'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Addresses'
    put:
      summary: 'Update Customer Address'
      operationId: updateCustomerAddress
      description: ''
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    customer_address_id: 1
                    type: Billing
                    name: Marvin-Klein
                    line1: '6647 Kassulke Village Suite 574'
                    line2: null
                    city: 'West Libbie'
                    state: Wisconsin
                    postal_code: '69037'
                    country: 'United States'
                    is_default: true
                    created_at: '2024-10-17 02:43:45'
                    updated_at: '2024-10-17 02:43:45'
                properties:
                  data:
                    type: object
                    properties:
                      customer_address_id:
                        type: integer
                        example: 1
                      type:
                        type: string
                        example: Billing
                      name:
                        type: string
                        example: Marvin-Klein
                      line1:
                        type: string
                        example: '6647 Kassulke Village Suite 574'
                      line2:
                        type: string
                        example: null
                      city:
                        type: string
                        example: 'West Libbie'
                      state:
                        type: string
                        example: Wisconsin
                      postal_code:
                        type: string
                        example: '69037'
                      country:
                        type: string
                        example: 'United States'
                      is_default:
                        type: boolean
                        example: true
                      created_at:
                        type: string
                        example: '2024-10-17 02:43:45'
                      updated_at:
                        type: string
                        example: '2024-10-17 02:43:45'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Addresses'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: ''
                  example: Shipping
                  enum:
                    - Billing
                    - Shipping
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'John Doe'
                line1:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: '2592 Jada Key'
                line2:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'Apartment 504'
                city:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'South Josh'
                state:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: Kentucky
                postal_code:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 62249-8453
                country:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'United States'
                is_default:
                  type: boolean
                  description: ''
                  example: false
              required:
                - type
                - name
                - line1
                - city
                - postal_code
                - country
    parameters:
      -
        in: path
        name: customer_id
        description: 'The ID of the customer.'
        example: 1
        required: true
        schema:
          type: integer
      -
        in: path
        name: id
        description: 'The ID of the address.'
        example: 1
        required: true
        schema:
          type: integer
tags:
  -
    name: Customers
    description: 'Customer Management API'
  -
    name: 'Customer Emails'
    description: 'Customer Email Management API'
  -
    name: 'Customer Phones'
    description: 'Customer Phone Management API'
  -
    name: 'Customer Addresses'
    description: 'Customer Address Management API'
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: 'You can generate your token by logging in and clicking your name, and then <a href="/user/api-tokens"><b>API Tokens</b></a>.'
security:
  -
    default: []
