openapi: 3.0.3
info:
  title: 'Cardano Mercury: Invoice'
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8100'
paths:
  /api/v1/customers:
    get:
      summary: 'List Customers'
      operationId: listCustomers
      description: ''
      parameters:
        -
          in: query
          name: search
          description: 'Search for customers by name or tax number'
          example: 'John Doe'
          required: false
          schema:
            type: string
            description: 'Search for customers by name or tax number'
            example: 'John Doe'
        -
          in: query
          name: per_page
          description: 'Number of results per page (Min 25, Max 100)'
          example: 25
          required: false
          schema:
            type: integer
            description: 'Number of results per page (Min 25, Max 100)'
            example: 25
        -
          in: query
          name: page
          description: 'Page number'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page number'
            example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      name: 'Carissa Kilback DDS'
                      tax_number: 01JAQ4TTFN8Y9128HJ2SFETG3T
                      tax_rate: 17.5
                      categories:
                        -
                          id: 1
                          name: Magnam
                          created_at: '2024-10-21 08:59:21'
                          updated_at: '2024-10-21 08:59:21'
                      defaultEmail:
                        id: 1
                        name: 'Mrs. Zaria Herzog MD'
                        address: ibrahim60@example.com
                        is_default: true
                        created_at: '2024-10-21 08:59:21'
                        updated_at: '2024-10-21 08:59:21'
                      defaultPhone:
                        id: 1
                        type: Mobile
                        name: 'Prof. Maxwell Kuhn'
                        number: 1-916-829-6737
                        is_default: true
                        created_at: '2024-10-21 08:59:21'
                        updated_at: '2024-10-21 08:59:21'
                      defaultAddress:
                        id: 1
                        type: Shipping
                        name: 'Moore Ltd'
                        line1: '94899 Verda Oval'
                        line2: null
                        city: 'North Wilfrid'
                        state: Kansas
                        postal_code: 43403-8904
                        country: 'United States'
                        is_default: true
                        created_at: '2024-10-21 08:59:21'
                        updated_at: '2024-10-21 08:59:21'
                      created_at: '2024-10-21 08:59:21'
                      updated_at: '2024-10-21 08:59:21'
                    -
                      id: 1
                      name: 'Marge Connelly'
                      tax_number: 01JAQ4TTFPR5W6JVS6QB8Q98SY
                      tax_rate: 17.5
                      categories:
                        -
                          id: 1
                          name: Officia
                          created_at: '2024-10-21 08:59:21'
                          updated_at: '2024-10-21 08:59:21'
                      defaultEmail:
                        id: 1
                        name: 'Yvette Little'
                        address: pcummerata@example.com
                        is_default: true
                        created_at: '2024-10-21 08:59:21'
                        updated_at: '2024-10-21 08:59:21'
                      defaultPhone:
                        id: 1
                        type: Mobile
                        name: 'Erick Schaefer IV'
                        number: 213.655.3029
                        is_default: true
                        created_at: '2024-10-21 08:59:21'
                        updated_at: '2024-10-21 08:59:21'
                      defaultAddress:
                        id: 1
                        type: Shipping
                        name: 'Heller, Luettgen and Connelly'
                        line1: '199 Roderick Rapid'
                        line2: null
                        city: Josefinahaven
                        state: Florida
                        postal_code: 19237-2659
                        country: 'United States'
                        is_default: true
                        created_at: '2024-10-21 08:59:21'
                        updated_at: '2024-10-21 08:59:21'
                      created_at: '2024-10-21 08:59:21'
                      updated_at: '2024-10-21 08:59:21'
                  links:
                    first: '/?page=1'
                    last: null
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: 1
                    path: /
                    per_page: 25
                    to: 2
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        name: 'Carissa Kilback DDS'
                        tax_number: 01JAQ4TTFN8Y9128HJ2SFETG3T
                        tax_rate: 17.5
                        categories:
                          -
                            id: 1
                            name: Magnam
                            created_at: '2024-10-21 08:59:21'
                            updated_at: '2024-10-21 08:59:21'
                        defaultEmail:
                          id: 1
                          name: 'Mrs. Zaria Herzog MD'
                          address: ibrahim60@example.com
                          is_default: true
                          created_at: '2024-10-21 08:59:21'
                          updated_at: '2024-10-21 08:59:21'
                        defaultPhone:
                          id: 1
                          type: Mobile
                          name: 'Prof. Maxwell Kuhn'
                          number: 1-916-829-6737
                          is_default: true
                          created_at: '2024-10-21 08:59:21'
                          updated_at: '2024-10-21 08:59:21'
                        defaultAddress:
                          id: 1
                          type: Shipping
                          name: 'Moore Ltd'
                          line1: '94899 Verda Oval'
                          line2: null
                          city: 'North Wilfrid'
                          state: Kansas
                          postal_code: 43403-8904
                          country: 'United States'
                          is_default: true
                          created_at: '2024-10-21 08:59:21'
                          updated_at: '2024-10-21 08:59:21'
                        created_at: '2024-10-21 08:59:21'
                        updated_at: '2024-10-21 08:59:21'
                      -
                        id: 1
                        name: 'Marge Connelly'
                        tax_number: 01JAQ4TTFPR5W6JVS6QB8Q98SY
                        tax_rate: 17.5
                        categories:
                          -
                            id: 1
                            name: Officia
                            created_at: '2024-10-21 08:59:21'
                            updated_at: '2024-10-21 08:59:21'
                        defaultEmail:
                          id: 1
                          name: 'Yvette Little'
                          address: pcummerata@example.com
                          is_default: true
                          created_at: '2024-10-21 08:59:21'
                          updated_at: '2024-10-21 08:59:21'
                        defaultPhone:
                          id: 1
                          type: Mobile
                          name: 'Erick Schaefer IV'
                          number: 213.655.3029
                          is_default: true
                          created_at: '2024-10-21 08:59:21'
                          updated_at: '2024-10-21 08:59:21'
                        defaultAddress:
                          id: 1
                          type: Shipping
                          name: 'Heller, Luettgen and Connelly'
                          line1: '199 Roderick Rapid'
                          line2: null
                          city: Josefinahaven
                          state: Florida
                          postal_code: 19237-2659
                          country: 'United States'
                          is_default: true
                          created_at: '2024-10-21 08:59:21'
                          updated_at: '2024-10-21 08:59:21'
                        created_at: '2024-10-21 08:59:21'
                        updated_at: '2024-10-21 08:59:21'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: 'Carissa Kilback DDS'
                        tax_number:
                          type: string
                          example: 01JAQ4TTFN8Y9128HJ2SFETG3T
                        tax_rate:
                          type: number
                          example: 17.5
                        categories:
                          type: array
                          example:
                            -
                              id: 1
                              name: Magnam
                              created_at: '2024-10-21 08:59:21'
                              updated_at: '2024-10-21 08:59:21'
                          items:
                            type: object
                            properties:
                              id:
                                type: integer
                                example: 1
                              name:
                                type: string
                                example: Magnam
                              created_at:
                                type: string
                                example: '2024-10-21 08:59:21'
                              updated_at:
                                type: string
                                example: '2024-10-21 08:59:21'
                        defaultEmail:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 1
                            name:
                              type: string
                              example: 'Mrs. Zaria Herzog MD'
                            address:
                              type: string
                              example: ibrahim60@example.com
                            is_default:
                              type: boolean
                              example: true
                            created_at:
                              type: string
                              example: '2024-10-21 08:59:21'
                            updated_at:
                              type: string
                              example: '2024-10-21 08:59:21'
                        defaultPhone:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 1
                            type:
                              type: string
                              example: Mobile
                            name:
                              type: string
                              example: 'Prof. Maxwell Kuhn'
                            number:
                              type: string
                              example: 1-916-829-6737
                            is_default:
                              type: boolean
                              example: true
                            created_at:
                              type: string
                              example: '2024-10-21 08:59:21'
                            updated_at:
                              type: string
                              example: '2024-10-21 08:59:21'
                        defaultAddress:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 1
                            type:
                              type: string
                              example: Shipping
                            name:
                              type: string
                              example: 'Moore Ltd'
                            line1:
                              type: string
                              example: '94899 Verda Oval'
                            line2:
                              type: string
                              example: null
                            city:
                              type: string
                              example: 'North Wilfrid'
                            state:
                              type: string
                              example: Kansas
                            postal_code:
                              type: string
                              example: 43403-8904
                            country:
                              type: string
                              example: 'United States'
                            is_default:
                              type: boolean
                              example: true
                            created_at:
                              type: string
                              example: '2024-10-21 08:59:21'
                            updated_at:
                              type: string
                              example: '2024-10-21 08:59:21'
                        created_at:
                          type: string
                          example: '2024-10-21 08:59:21'
                        updated_at:
                          type: string
                          example: '2024-10-21 08:59:21'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: '/?page=1'
                      last:
                        type: string
                        example: null
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      path:
                        type: string
                        example: /
                      per_page:
                        type: integer
                        example: 25
                      to:
                        type: integer
                        example: 2
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - Customers
    post:
      summary: 'Create Customer'
      operationId: createCustomer
      description: ''
      parameters: []
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: 'Amya Price'
                    tax_number: 01JAQ4TTFYPNNEPN0KG61Y8G44
                    tax_rate: 17.5
                    categories: []
                    defaultEmail: null
                    defaultPhone: null
                    defaultAddress: null
                    created_at: '2024-10-21 08:59:21'
                    updated_at: '2024-10-21 08:59:21'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'Amya Price'
                      tax_number:
                        type: string
                        example: 01JAQ4TTFYPNNEPN0KG61Y8G44
                      tax_rate:
                        type: number
                        example: 17.5
                      categories:
                        type: array
                        example: []
                      defaultEmail:
                        type: string
                        example: null
                      defaultPhone:
                        type: string
                        example: null
                      defaultAddress:
                        type: string
                        example: null
                      created_at:
                        type: string
                        example: '2024-10-21 08:59:21'
                      updated_at:
                        type: string
                        example: '2024-10-21 08:59:21'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - Customers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'John Doe'
                tax_number:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: ABCD-1234
                tax_rate:
                  type: number
                  description: 'Must be between 0 and 100.'
                  example: 12.5
              required:
                - name
  '/api/v1/customers/{id}':
    get:
      summary: 'Get Customer'
      operationId: getCustomer
      description: ''
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: 'Jeff Howell'
                    tax_number: 01JAQ4TTG4HVCPEA1DS3AB6JCR
                    tax_rate: 17.5
                    categories:
                      -
                        id: 1
                        name: Quam
                        created_at: '2024-10-21 08:59:21'
                        updated_at: '2024-10-21 08:59:21'
                    defaultEmail:
                      id: 1
                      name: 'Micheal Collins'
                      address: ohoeger@example.org
                      is_default: true
                      created_at: '2024-10-21 08:59:21'
                      updated_at: '2024-10-21 08:59:21'
                    defaultPhone:
                      id: 1
                      type: Home
                      name: 'Reed Hilpert V'
                      number: '(623) 590-8657'
                      is_default: true
                      created_at: '2024-10-21 08:59:21'
                      updated_at: '2024-10-21 08:59:21'
                    defaultAddress:
                      id: 1
                      type: Billing
                      name: 'Kohler, Becker and Bins'
                      line1: '51066 Reynolds Bridge'
                      line2: null
                      city: 'Lake Gussie'
                      state: Mississippi
                      postal_code: 59254-0281
                      country: 'United States'
                      is_default: true
                      created_at: '2024-10-21 08:59:21'
                      updated_at: '2024-10-21 08:59:21'
                    created_at: '2024-10-21 08:59:21'
                    updated_at: '2024-10-21 08:59:21'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'Jeff Howell'
                      tax_number:
                        type: string
                        example: 01JAQ4TTG4HVCPEA1DS3AB6JCR
                      tax_rate:
                        type: number
                        example: 17.5
                      categories:
                        type: array
                        example:
                          -
                            id: 1
                            name: Quam
                            created_at: '2024-10-21 08:59:21'
                            updated_at: '2024-10-21 08:59:21'
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 1
                            name:
                              type: string
                              example: Quam
                            created_at:
                              type: string
                              example: '2024-10-21 08:59:21'
                            updated_at:
                              type: string
                              example: '2024-10-21 08:59:21'
                      defaultEmail:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                          name:
                            type: string
                            example: 'Micheal Collins'
                          address:
                            type: string
                            example: ohoeger@example.org
                          is_default:
                            type: boolean
                            example: true
                          created_at:
                            type: string
                            example: '2024-10-21 08:59:21'
                          updated_at:
                            type: string
                            example: '2024-10-21 08:59:21'
                      defaultPhone:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                          type:
                            type: string
                            example: Home
                          name:
                            type: string
                            example: 'Reed Hilpert V'
                          number:
                            type: string
                            example: '(623) 590-8657'
                          is_default:
                            type: boolean
                            example: true
                          created_at:
                            type: string
                            example: '2024-10-21 08:59:21'
                          updated_at:
                            type: string
                            example: '2024-10-21 08:59:21'
                      defaultAddress:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                          type:
                            type: string
                            example: Billing
                          name:
                            type: string
                            example: 'Kohler, Becker and Bins'
                          line1:
                            type: string
                            example: '51066 Reynolds Bridge'
                          line2:
                            type: string
                            example: null
                          city:
                            type: string
                            example: 'Lake Gussie'
                          state:
                            type: string
                            example: Mississippi
                          postal_code:
                            type: string
                            example: 59254-0281
                          country:
                            type: string
                            example: 'United States'
                          is_default:
                            type: boolean
                            example: true
                          created_at:
                            type: string
                            example: '2024-10-21 08:59:21'
                          updated_at:
                            type: string
                            example: '2024-10-21 08:59:21'
                      created_at:
                        type: string
                        example: '2024-10-21 08:59:21'
                      updated_at:
                        type: string
                        example: '2024-10-21 08:59:21'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - Customers
    put:
      summary: 'Update Customer'
      operationId: updateCustomer
      description: ''
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: 'Daren Gutmann'
                    tax_number: 01JAQ4TTG7A7C11SQ5S8XDFPZT
                    tax_rate: 17.5
                    categories:
                      -
                        id: 1
                        name: Inventore
                        created_at: '2024-10-21 08:59:21'
                        updated_at: '2024-10-21 08:59:21'
                    defaultEmail:
                      id: 1
                      name: 'Marcelina Murphy'
                      address: etha66@example.org
                      is_default: true
                      created_at: '2024-10-21 08:59:21'
                      updated_at: '2024-10-21 08:59:21'
                    defaultPhone:
                      id: 1
                      type: Home
                      name: 'Edward Rogahn'
                      number: 1-341-814-4285
                      is_default: true
                      created_at: '2024-10-21 08:59:21'
                      updated_at: '2024-10-21 08:59:21'
                    defaultAddress:
                      id: 1
                      type: Billing
                      name: 'Jenkins Ltd'
                      line1: '84169 Jacynthe Causeway Apt. 825'
                      line2: null
                      city: 'Port Tatyanachester'
                      state: Oklahoma
                      postal_code: '05588'
                      country: 'United States'
                      is_default: true
                      created_at: '2024-10-21 08:59:21'
                      updated_at: '2024-10-21 08:59:21'
                    created_at: '2024-10-21 08:59:21'
                    updated_at: '2024-10-21 08:59:21'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'Daren Gutmann'
                      tax_number:
                        type: string
                        example: 01JAQ4TTG7A7C11SQ5S8XDFPZT
                      tax_rate:
                        type: number
                        example: 17.5
                      categories:
                        type: array
                        example:
                          -
                            id: 1
                            name: Inventore
                            created_at: '2024-10-21 08:59:21'
                            updated_at: '2024-10-21 08:59:21'
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 1
                            name:
                              type: string
                              example: Inventore
                            created_at:
                              type: string
                              example: '2024-10-21 08:59:21'
                            updated_at:
                              type: string
                              example: '2024-10-21 08:59:21'
                      defaultEmail:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                          name:
                            type: string
                            example: 'Marcelina Murphy'
                          address:
                            type: string
                            example: etha66@example.org
                          is_default:
                            type: boolean
                            example: true
                          created_at:
                            type: string
                            example: '2024-10-21 08:59:21'
                          updated_at:
                            type: string
                            example: '2024-10-21 08:59:21'
                      defaultPhone:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                          type:
                            type: string
                            example: Home
                          name:
                            type: string
                            example: 'Edward Rogahn'
                          number:
                            type: string
                            example: 1-341-814-4285
                          is_default:
                            type: boolean
                            example: true
                          created_at:
                            type: string
                            example: '2024-10-21 08:59:21'
                          updated_at:
                            type: string
                            example: '2024-10-21 08:59:21'
                      defaultAddress:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                          type:
                            type: string
                            example: Billing
                          name:
                            type: string
                            example: 'Jenkins Ltd'
                          line1:
                            type: string
                            example: '84169 Jacynthe Causeway Apt. 825'
                          line2:
                            type: string
                            example: null
                          city:
                            type: string
                            example: 'Port Tatyanachester'
                          state:
                            type: string
                            example: Oklahoma
                          postal_code:
                            type: string
                            example: '05588'
                          country:
                            type: string
                            example: 'United States'
                          is_default:
                            type: boolean
                            example: true
                          created_at:
                            type: string
                            example: '2024-10-21 08:59:21'
                          updated_at:
                            type: string
                            example: '2024-10-21 08:59:21'
                      created_at:
                        type: string
                        example: '2024-10-21 08:59:21'
                      updated_at:
                        type: string
                        example: '2024-10-21 08:59:21'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - Customers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'John Doe'
                tax_number:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: ABCD-1234
                tax_rate:
                  type: number
                  description: 'Must be between 0 and 100.'
                  example: 12.5
              required:
                - name
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the customer.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/customers/{customer_id}/emails':
    get:
      summary: 'List Customer Emails'
      operationId: listCustomerEmails
      description: ''
      parameters:
        -
          in: query
          name: search
          description: 'Search for customer emails by name or address'
          example: john.doe@example.com
          required: false
          schema:
            type: string
            description: 'Search for customer emails by name or address'
            example: john.doe@example.com
        -
          in: query
          name: per_page
          description: 'Number of results per page (Min 25, Max 100)'
          example: 25
          required: false
          schema:
            type: integer
            description: 'Number of results per page (Min 25, Max 100)'
            example: 25
        -
          in: query
          name: page
          description: 'Page number'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page number'
            example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      name: 'Mikel Labadie'
                      address: ziemann.tressa@example.net
                      is_default: true
                      created_at: '2024-10-21 08:59:21'
                      updated_at: '2024-10-21 08:59:21'
                    -
                      id: 1
                      name: 'Zoie Dickinson'
                      address: dwisoky@example.net
                      is_default: true
                      created_at: '2024-10-21 08:59:21'
                      updated_at: '2024-10-21 08:59:21'
                  links:
                    first: '/?page=1'
                    last: null
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: 1
                    path: /
                    per_page: 25
                    to: 2
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        name: 'Mikel Labadie'
                        address: ziemann.tressa@example.net
                        is_default: true
                        created_at: '2024-10-21 08:59:21'
                        updated_at: '2024-10-21 08:59:21'
                      -
                        id: 1
                        name: 'Zoie Dickinson'
                        address: dwisoky@example.net
                        is_default: true
                        created_at: '2024-10-21 08:59:21'
                        updated_at: '2024-10-21 08:59:21'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: 'Mikel Labadie'
                        address:
                          type: string
                          example: ziemann.tressa@example.net
                        is_default:
                          type: boolean
                          example: true
                        created_at:
                          type: string
                          example: '2024-10-21 08:59:21'
                        updated_at:
                          type: string
                          example: '2024-10-21 08:59:21'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: '/?page=1'
                      last:
                        type: string
                        example: null
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      path:
                        type: string
                        example: /
                      per_page:
                        type: integer
                        example: 25
                      to:
                        type: integer
                        example: 2
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Emails'
    post:
      summary: 'Create Customer Email'
      operationId: createCustomerEmail
      description: ''
      parameters: []
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: 'Imani Douglas'
                    address: bert.rowe@example.net
                    is_default: true
                    created_at: '2024-10-21 08:59:21'
                    updated_at: '2024-10-21 08:59:21'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'Imani Douglas'
                      address:
                        type: string
                        example: bert.rowe@example.net
                      is_default:
                        type: boolean
                        example: true
                      created_at:
                        type: string
                        example: '2024-10-21 08:59:21'
                      updated_at:
                        type: string
                        example: '2024-10-21 08:59:21'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Emails'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'John Doe'
                address:
                  type: string
                  description: 'Must be a valid email address. Must be at least 3 characters. Must not be greater than 256 characters.'
                  example: john.doe@example.com
                is_default:
                  type: boolean
                  description: ''
                  example: false
              required:
                - name
                - address
    parameters:
      -
        in: path
        name: customer_id
        description: 'The ID of the customer.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/customers/{customer_id}/emails/{id}':
    get:
      summary: 'Get Customer Email'
      operationId: getCustomerEmail
      description: ''
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: 'Lilian Schroeder'
                    address: hweber@example.org
                    is_default: true
                    created_at: '2024-10-21 08:59:21'
                    updated_at: '2024-10-21 08:59:21'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'Lilian Schroeder'
                      address:
                        type: string
                        example: hweber@example.org
                      is_default:
                        type: boolean
                        example: true
                      created_at:
                        type: string
                        example: '2024-10-21 08:59:21'
                      updated_at:
                        type: string
                        example: '2024-10-21 08:59:21'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Emails'
    put:
      summary: 'Update Customer Email'
      operationId: updateCustomerEmail
      description: ''
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: 'Mr. Valentin Powlowski'
                    address: weston.stiedemann@example.com
                    is_default: true
                    created_at: '2024-10-21 08:59:22'
                    updated_at: '2024-10-21 08:59:22'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'Mr. Valentin Powlowski'
                      address:
                        type: string
                        example: weston.stiedemann@example.com
                      is_default:
                        type: boolean
                        example: true
                      created_at:
                        type: string
                        example: '2024-10-21 08:59:22'
                      updated_at:
                        type: string
                        example: '2024-10-21 08:59:22'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Emails'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'John Doe'
                address:
                  type: string
                  description: 'Must be a valid email address. Must be at least 3 characters. Must not be greater than 256 characters.'
                  example: john.doe@example.com
                is_default:
                  type: boolean
                  description: ''
                  example: false
              required:
                - name
                - address
    parameters:
      -
        in: path
        name: customer_id
        description: 'The ID of the customer.'
        example: 1
        required: true
        schema:
          type: integer
      -
        in: path
        name: id
        description: 'The ID of the email.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/customers/{customer_id}/phones':
    get:
      summary: 'List Customer Phones'
      operationId: listCustomerPhones
      description: ''
      parameters:
        -
          in: query
          name: type
          description: ''
          example: Mobile
          required: false
          schema:
            type: string
            description: ''
            example: Mobile
            enum:
              - Home
              - Office
              - Mobile
        -
          in: query
          name: search
          description: 'Search for customer phones by name or number'
          example: '0123456789'
          required: false
          schema:
            type: string
            description: 'Search for customer phones by name or number'
            example: '0123456789'
        -
          in: query
          name: per_page
          description: 'Number of results per page (Min 25, Max 100)'
          example: 25
          required: false
          schema:
            type: integer
            description: 'Number of results per page (Min 25, Max 100)'
            example: 25
        -
          in: query
          name: page
          description: 'Page number'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page number'
            example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      type: Mobile
                      name: 'Antwan Hirthe'
                      number: 1-208-402-8295
                      is_default: true
                      created_at: '2024-10-21 08:59:22'
                      updated_at: '2024-10-21 08:59:22'
                    -
                      id: 1
                      type: Home
                      name: "Ms. Izabella D'Amore DVM"
                      number: +1-813-409-0604
                      is_default: true
                      created_at: '2024-10-21 08:59:22'
                      updated_at: '2024-10-21 08:59:22'
                  links:
                    first: '/?page=1'
                    last: null
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: 1
                    path: /
                    per_page: 25
                    to: 2
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        type: Mobile
                        name: 'Antwan Hirthe'
                        number: 1-208-402-8295
                        is_default: true
                        created_at: '2024-10-21 08:59:22'
                        updated_at: '2024-10-21 08:59:22'
                      -
                        id: 1
                        type: Home
                        name: "Ms. Izabella D'Amore DVM"
                        number: +1-813-409-0604
                        is_default: true
                        created_at: '2024-10-21 08:59:22'
                        updated_at: '2024-10-21 08:59:22'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        type:
                          type: string
                          example: Mobile
                        name:
                          type: string
                          example: 'Antwan Hirthe'
                        number:
                          type: string
                          example: 1-208-402-8295
                        is_default:
                          type: boolean
                          example: true
                        created_at:
                          type: string
                          example: '2024-10-21 08:59:22'
                        updated_at:
                          type: string
                          example: '2024-10-21 08:59:22'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: '/?page=1'
                      last:
                        type: string
                        example: null
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      path:
                        type: string
                        example: /
                      per_page:
                        type: integer
                        example: 25
                      to:
                        type: integer
                        example: 2
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Phones'
    post:
      summary: 'Create Customer Phone'
      operationId: createCustomerPhone
      description: ''
      parameters: []
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    type: Office
                    name: 'Estevan Rowe'
                    number: 1-848-981-7621
                    is_default: true
                    created_at: '2024-10-21 08:59:22'
                    updated_at: '2024-10-21 08:59:22'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      type:
                        type: string
                        example: Office
                      name:
                        type: string
                        example: 'Estevan Rowe'
                      number:
                        type: string
                        example: 1-848-981-7621
                      is_default:
                        type: boolean
                        example: true
                      created_at:
                        type: string
                        example: '2024-10-21 08:59:22'
                      updated_at:
                        type: string
                        example: '2024-10-21 08:59:22'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Phones'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: ''
                  example: Office
                  enum:
                    - Home
                    - Office
                    - Mobile
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'John Doe'
                number:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 32 characters.'
                  example: +1-956-745-2290
                is_default:
                  type: boolean
                  description: ''
                  example: false
              required:
                - type
                - name
                - number
    parameters:
      -
        in: path
        name: customer_id
        description: 'The ID of the customer.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/customers/{customer_id}/phones/{id}':
    get:
      summary: 'Get Customer Phone'
      operationId: getCustomerPhone
      description: ''
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    type: Home
                    name: 'Genoveva Langworth III'
                    number: 1-660-604-4124
                    is_default: true
                    created_at: '2024-10-21 08:59:22'
                    updated_at: '2024-10-21 08:59:22'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      type:
                        type: string
                        example: Home
                      name:
                        type: string
                        example: 'Genoveva Langworth III'
                      number:
                        type: string
                        example: 1-660-604-4124
                      is_default:
                        type: boolean
                        example: true
                      created_at:
                        type: string
                        example: '2024-10-21 08:59:22'
                      updated_at:
                        type: string
                        example: '2024-10-21 08:59:22'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Phones'
    put:
      summary: 'Update Customer Phone'
      operationId: updateCustomerPhone
      description: ''
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    type: Office
                    name: 'Prof. Raheem Hirthe'
                    number: '+1 (520) 639-7265'
                    is_default: true
                    created_at: '2024-10-21 08:59:22'
                    updated_at: '2024-10-21 08:59:22'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      type:
                        type: string
                        example: Office
                      name:
                        type: string
                        example: 'Prof. Raheem Hirthe'
                      number:
                        type: string
                        example: '+1 (520) 639-7265'
                      is_default:
                        type: boolean
                        example: true
                      created_at:
                        type: string
                        example: '2024-10-21 08:59:22'
                      updated_at:
                        type: string
                        example: '2024-10-21 08:59:22'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Phones'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: ''
                  example: Home
                  enum:
                    - Home
                    - Office
                    - Mobile
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'John Doe'
                number:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 32 characters.'
                  example: +1-956-745-2290
                is_default:
                  type: boolean
                  description: ''
                  example: false
              required:
                - type
                - name
                - number
    parameters:
      -
        in: path
        name: customer_id
        description: 'The ID of the customer.'
        example: 1
        required: true
        schema:
          type: integer
      -
        in: path
        name: id
        description: 'The ID of the phone.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/customers/{customer_id}/addresses':
    get:
      summary: 'List Customer Addresses'
      operationId: listCustomerAddresses
      description: ''
      parameters:
        -
          in: query
          name: type
          description: ''
          example: Shipping
          required: false
          schema:
            type: string
            description: ''
            example: Shipping
            enum:
              - Billing
              - Shipping
        -
          in: query
          name: search
          description: 'Search for customer addresses by name or any address fields'
          example: '25 Brookfield Road'
          required: false
          schema:
            type: string
            description: 'Search for customer addresses by name or any address fields'
            example: '25 Brookfield Road'
        -
          in: query
          name: per_page
          description: 'Number of results per page (Min 25, Max 100)'
          example: 25
          required: false
          schema:
            type: integer
            description: 'Number of results per page (Min 25, Max 100)'
            example: 25
        -
          in: query
          name: page
          description: 'Page number'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page number'
            example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      type: Shipping
                      name: 'Durgan Ltd'
                      line1: '330 Rhett Stravenue'
                      line2: null
                      city: 'New Ashton'
                      state: 'North Carolina'
                      postal_code: '42652'
                      country: 'United States'
                      is_default: true
                      created_at: '2024-10-21 08:59:22'
                      updated_at: '2024-10-21 08:59:22'
                    -
                      id: 1
                      type: Shipping
                      name: Lind-Wyman
                      line1: '56773 Carissa Parks'
                      line2: null
                      city: Michaelaside
                      state: 'New Hampshire'
                      postal_code: '24803'
                      country: 'United States'
                      is_default: true
                      created_at: '2024-10-21 08:59:22'
                      updated_at: '2024-10-21 08:59:22'
                  links:
                    first: '/?page=1'
                    last: null
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: 1
                    path: /
                    per_page: 25
                    to: 2
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        type: Shipping
                        name: 'Durgan Ltd'
                        line1: '330 Rhett Stravenue'
                        line2: null
                        city: 'New Ashton'
                        state: 'North Carolina'
                        postal_code: '42652'
                        country: 'United States'
                        is_default: true
                        created_at: '2024-10-21 08:59:22'
                        updated_at: '2024-10-21 08:59:22'
                      -
                        id: 1
                        type: Shipping
                        name: Lind-Wyman
                        line1: '56773 Carissa Parks'
                        line2: null
                        city: Michaelaside
                        state: 'New Hampshire'
                        postal_code: '24803'
                        country: 'United States'
                        is_default: true
                        created_at: '2024-10-21 08:59:22'
                        updated_at: '2024-10-21 08:59:22'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        type:
                          type: string
                          example: Shipping
                        name:
                          type: string
                          example: 'Durgan Ltd'
                        line1:
                          type: string
                          example: '330 Rhett Stravenue'
                        line2:
                          type: string
                          example: null
                        city:
                          type: string
                          example: 'New Ashton'
                        state:
                          type: string
                          example: 'North Carolina'
                        postal_code:
                          type: string
                          example: '42652'
                        country:
                          type: string
                          example: 'United States'
                        is_default:
                          type: boolean
                          example: true
                        created_at:
                          type: string
                          example: '2024-10-21 08:59:22'
                        updated_at:
                          type: string
                          example: '2024-10-21 08:59:22'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: '/?page=1'
                      last:
                        type: string
                        example: null
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      path:
                        type: string
                        example: /
                      per_page:
                        type: integer
                        example: 25
                      to:
                        type: integer
                        example: 2
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Addresses'
    post:
      summary: 'Create Customer Address'
      operationId: createCustomerAddress
      description: ''
      parameters: []
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    type: Shipping
                    name: 'Dooley Inc'
                    line1: '57030 Kian Mountain'
                    line2: null
                    city: Franeckiside
                    state: Hawaii
                    postal_code: 19909-9535
                    country: 'United States'
                    is_default: true
                    created_at: '2024-10-21 08:59:22'
                    updated_at: '2024-10-21 08:59:22'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      type:
                        type: string
                        example: Shipping
                      name:
                        type: string
                        example: 'Dooley Inc'
                      line1:
                        type: string
                        example: '57030 Kian Mountain'
                      line2:
                        type: string
                        example: null
                      city:
                        type: string
                        example: Franeckiside
                      state:
                        type: string
                        example: Hawaii
                      postal_code:
                        type: string
                        example: 19909-9535
                      country:
                        type: string
                        example: 'United States'
                      is_default:
                        type: boolean
                        example: true
                      created_at:
                        type: string
                        example: '2024-10-21 08:59:22'
                      updated_at:
                        type: string
                        example: '2024-10-21 08:59:22'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Addresses'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: ''
                  example: Shipping
                  enum:
                    - Billing
                    - Shipping
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'John Doe'
                line1:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: '2592 Jada Key'
                line2:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'Apartment 504'
                city:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'South Josh'
                state:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: Kentucky
                postal_code:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 62249-8453
                country:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'United States'
                is_default:
                  type: boolean
                  description: ''
                  example: false
              required:
                - type
                - name
                - line1
                - city
                - postal_code
                - country
    parameters:
      -
        in: path
        name: customer_id
        description: 'The ID of the customer.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/customers/{customer_id}/addresses/{id}':
    get:
      summary: 'Get Customer Address'
      operationId: getCustomerAddress
      description: ''
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    type: Billing
                    name: 'Jacobi, Brakus and Collier'
                    line1: '6997 Rafael Cliffs Suite 633'
                    line2: null
                    city: 'Port Viviane'
                    state: Alaska
                    postal_code: 44499-3341
                    country: 'United States'
                    is_default: true
                    created_at: '2024-10-21 08:59:22'
                    updated_at: '2024-10-21 08:59:22'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      type:
                        type: string
                        example: Billing
                      name:
                        type: string
                        example: 'Jacobi, Brakus and Collier'
                      line1:
                        type: string
                        example: '6997 Rafael Cliffs Suite 633'
                      line2:
                        type: string
                        example: null
                      city:
                        type: string
                        example: 'Port Viviane'
                      state:
                        type: string
                        example: Alaska
                      postal_code:
                        type: string
                        example: 44499-3341
                      country:
                        type: string
                        example: 'United States'
                      is_default:
                        type: boolean
                        example: true
                      created_at:
                        type: string
                        example: '2024-10-21 08:59:22'
                      updated_at:
                        type: string
                        example: '2024-10-21 08:59:22'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Addresses'
    put:
      summary: 'Update Customer Address'
      operationId: updateCustomerAddress
      description: ''
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    type: Shipping
                    name: 'Quitzon Group'
                    line1: '240 Bashirian Wells'
                    line2: null
                    city: 'East Milton'
                    state: 'South Carolina'
                    postal_code: '10666'
                    country: 'United States'
                    is_default: true
                    created_at: '2024-10-21 08:59:22'
                    updated_at: '2024-10-21 08:59:22'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      type:
                        type: string
                        example: Shipping
                      name:
                        type: string
                        example: 'Quitzon Group'
                      line1:
                        type: string
                        example: '240 Bashirian Wells'
                      line2:
                        type: string
                        example: null
                      city:
                        type: string
                        example: 'East Milton'
                      state:
                        type: string
                        example: 'South Carolina'
                      postal_code:
                        type: string
                        example: '10666'
                      country:
                        type: string
                        example: 'United States'
                      is_default:
                        type: boolean
                        example: true
                      created_at:
                        type: string
                        example: '2024-10-21 08:59:22'
                      updated_at:
                        type: string
                        example: '2024-10-21 08:59:22'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Addresses'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: ''
                  example: Shipping
                  enum:
                    - Billing
                    - Shipping
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'John Doe'
                line1:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: '2592 Jada Key'
                line2:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'Apartment 504'
                city:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'South Josh'
                state:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: Kentucky
                postal_code:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 62249-8453
                country:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'United States'
                is_default:
                  type: boolean
                  description: ''
                  example: false
              required:
                - type
                - name
                - line1
                - city
                - postal_code
                - country
    parameters:
      -
        in: path
        name: customer_id
        description: 'The ID of the customer.'
        example: 1
        required: true
        schema:
          type: integer
      -
        in: path
        name: id
        description: 'The ID of the address.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/customer-categories:
    get:
      summary: 'List Customer Categories'
      operationId: listCustomerCategories
      description: ''
      parameters:
        -
          in: query
          name: search
          description: 'Search for customer categories by name'
          example: Freelance
          required: false
          schema:
            type: string
            description: 'Search for customer categories by name'
            example: Freelance
        -
          in: query
          name: per_page
          description: 'Number of results per page (Min 25, Max 100)'
          example: 25
          required: false
          schema:
            type: integer
            description: 'Number of results per page (Min 25, Max 100)'
            example: 25
        -
          in: query
          name: page
          description: 'Page number'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page number'
            example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      name: Incidunt
                      created_at: '2024-10-21 08:59:22'
                      updated_at: '2024-10-21 08:59:22'
                    -
                      id: 1
                      name: Eligendi
                      created_at: '2024-10-21 08:59:22'
                      updated_at: '2024-10-21 08:59:22'
                  links:
                    first: '/?page=1'
                    last: null
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: 1
                    path: /
                    per_page: 25
                    to: 2
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        name: Incidunt
                        created_at: '2024-10-21 08:59:22'
                        updated_at: '2024-10-21 08:59:22'
                      -
                        id: 1
                        name: Eligendi
                        created_at: '2024-10-21 08:59:22'
                        updated_at: '2024-10-21 08:59:22'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: Incidunt
                        created_at:
                          type: string
                          example: '2024-10-21 08:59:22'
                        updated_at:
                          type: string
                          example: '2024-10-21 08:59:22'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: '/?page=1'
                      last:
                        type: string
                        example: null
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      path:
                        type: string
                        example: /
                      per_page:
                        type: integer
                        example: 25
                      to:
                        type: integer
                        example: 2
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Categories'
    post:
      summary: 'Create Customer Category'
      operationId: createCustomerCategory
      description: ''
      parameters: []
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: Repudiandae
                    created_at: '2024-10-21 08:59:22'
                    updated_at: '2024-10-21 08:59:22'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: Repudiandae
                      created_at:
                        type: string
                        example: '2024-10-21 08:59:22'
                      updated_at:
                        type: string
                        example: '2024-10-21 08:59:22'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Categories'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: Freelance
              required:
                - name
  '/api/v1/customer-categories/{id}':
    get:
      summary: 'Get Customer Category'
      operationId: getCustomerCategory
      description: ''
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: Voluptas
                    created_at: '2024-10-21 08:59:22'
                    updated_at: '2024-10-21 08:59:22'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: Voluptas
                      created_at:
                        type: string
                        example: '2024-10-21 08:59:22'
                      updated_at:
                        type: string
                        example: '2024-10-21 08:59:22'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Categories'
    put:
      summary: 'Update Customer Category'
      operationId: updateCustomerCategory
      description: ''
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: Ut
                    created_at: '2024-10-21 08:59:22'
                    updated_at: '2024-10-21 08:59:22'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: Ut
                      created_at:
                        type: string
                        example: '2024-10-21 08:59:22'
                      updated_at:
                        type: string
                        example: '2024-10-21 08:59:22'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Categories'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: Freelance
              required:
                - name
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the customer category.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/customer-categories-sync:
    put:
      summary: 'Sync Customer Categories'
      operationId: syncCustomerCategories
      description: ''
      parameters: []
      responses:
        204:
          description: 'Customer Categories Synced'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Categories'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                customer_id:
                  type: integer
                  description: ''
                  example: 1
                category_ids:
                  type: array
                  description: ''
                  example:
                    - 18
                  items:
                    type: integer
              required:
                - customer_id
  /api/v1/products:
    get:
      summary: 'List Products'
      operationId: listProducts
      description: ''
      parameters:
        -
          in: query
          name: search
          description: 'Search for products by name or sku'
          example: 'Website Hosting'
          required: false
          schema:
            type: string
            description: 'Search for products by name or sku'
            example: 'Website Hosting'
        -
          in: query
          name: per_page
          description: 'Number of results per page (Min 25, Max 100)'
          example: 25
          required: false
          schema:
            type: integer
            description: 'Number of results per page (Min 25, Max 100)'
            example: 25
        -
          in: query
          name: page
          description: 'Page number'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page number'
            example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      name: 'Et Rerum Fuga'
                      sku: MOM6UGDWJAKQYOVX
                      description: 'Omnis qui voluptate autem. Sit modi ea voluptates id. Libero tempore dolor nesciunt.'
                      unit_type: cm
                      unit_price: 72.57
                      supplier: Cole-Braun
                      created_at: '2024-10-21 08:59:22'
                      updated_at: '2024-10-21 08:59:22'
                    -
                      id: 1
                      name: 'A Ab Et'
                      sku: JMPM0MFEACATC49E
                      description: 'Praesentium et dolores similique vel. Fugit impedit tenetur quo dignissimos. Voluptatem laudantium vero non quaerat fugiat molestiae est.'
                      unit_type: cm
                      unit_price: 58.27
                      supplier: 'Fadel PLC'
                      created_at: '2024-10-21 08:59:22'
                      updated_at: '2024-10-21 08:59:22'
                  links:
                    first: '/?page=1'
                    last: null
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: 1
                    path: /
                    per_page: 25
                    to: 2
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        name: 'Et Rerum Fuga'
                        sku: MOM6UGDWJAKQYOVX
                        description: 'Omnis qui voluptate autem. Sit modi ea voluptates id. Libero tempore dolor nesciunt.'
                        unit_type: cm
                        unit_price: 72.57
                        supplier: Cole-Braun
                        created_at: '2024-10-21 08:59:22'
                        updated_at: '2024-10-21 08:59:22'
                      -
                        id: 1
                        name: 'A Ab Et'
                        sku: JMPM0MFEACATC49E
                        description: 'Praesentium et dolores similique vel. Fugit impedit tenetur quo dignissimos. Voluptatem laudantium vero non quaerat fugiat molestiae est.'
                        unit_type: cm
                        unit_price: 58.27
                        supplier: 'Fadel PLC'
                        created_at: '2024-10-21 08:59:22'
                        updated_at: '2024-10-21 08:59:22'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: 'Et Rerum Fuga'
                        sku:
                          type: string
                          example: MOM6UGDWJAKQYOVX
                        description:
                          type: string
                          example: 'Omnis qui voluptate autem. Sit modi ea voluptates id. Libero tempore dolor nesciunt.'
                        unit_type:
                          type: string
                          example: cm
                        unit_price:
                          type: number
                          example: 72.57
                        supplier:
                          type: string
                          example: Cole-Braun
                        created_at:
                          type: string
                          example: '2024-10-21 08:59:22'
                        updated_at:
                          type: string
                          example: '2024-10-21 08:59:22'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: '/?page=1'
                      last:
                        type: string
                        example: null
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      path:
                        type: string
                        example: /
                      per_page:
                        type: integer
                        example: 25
                      to:
                        type: integer
                        example: 2
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - Products
    post:
      summary: 'Create Product'
      operationId: createProduct
      description: ''
      parameters: []
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: 'Dolorem Itaque Magnam'
                    sku: FVJCB9LFBZT8NWZM
                    description: 'Ex deserunt quasi nobis placeat aliquid sapiente ducimus. Quae rerum ut nemo. Molestias assumenda rerum beatae quam ducimus repudiandae soluta.'
                    unit_type: kg
                    unit_price: 16.59
                    supplier: Steuber-Hettinger
                    created_at: '2024-10-21 08:59:22'
                    updated_at: '2024-10-21 08:59:22'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'Dolorem Itaque Magnam'
                      sku:
                        type: string
                        example: FVJCB9LFBZT8NWZM
                      description:
                        type: string
                        example: 'Ex deserunt quasi nobis placeat aliquid sapiente ducimus. Quae rerum ut nemo. Molestias assumenda rerum beatae quam ducimus repudiandae soluta.'
                      unit_type:
                        type: string
                        example: kg
                      unit_price:
                        type: number
                        example: 16.59
                      supplier:
                        type: string
                        example: Steuber-Hettinger
                      created_at:
                        type: string
                        example: '2024-10-21 08:59:22'
                      updated_at:
                        type: string
                        example: '2024-10-21 08:59:22'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - Products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'Website Hosting'
                sku:
                  type: string
                  description: 'Must not be greater than 32 characters.'
                  example: WH-001
                description:
                  type: string
                  description: ''
                  example: 'Standard website hosting on shared server'
                unit_type:
                  type: string
                  description: 'Must not be greater than 16 characters.'
                  example: Each
                unit_price:
                  type: number
                  description: 'Must be at least 0.'
                  example: 12.99
                supplier:
                  type: string
                  description: 'Must not be greater than 64 characters.'
                  example: 'Drip Dropz Ltd'
              required:
                - name
                - unit_price
  '/api/v1/products/{id}':
    get:
      summary: 'Get Product'
      operationId: getProduct
      description: ''
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: 'Natus Sint Minus'
                    sku: 3KARC45O2ZSD10CQ
                    description: 'Esse optio saepe ut ut placeat perferendis dolores. Ut magnam molestiae ex aut quia. Libero odit nostrum consequatur dolore.'
                    unit_type: ounce
                    unit_price: 51.81
                    supplier: 'Little, Beer and Bruen'
                    created_at: '2024-10-21 08:59:22'
                    updated_at: '2024-10-21 08:59:22'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'Natus Sint Minus'
                      sku:
                        type: string
                        example: 3KARC45O2ZSD10CQ
                      description:
                        type: string
                        example: 'Esse optio saepe ut ut placeat perferendis dolores. Ut magnam molestiae ex aut quia. Libero odit nostrum consequatur dolore.'
                      unit_type:
                        type: string
                        example: ounce
                      unit_price:
                        type: number
                        example: 51.81
                      supplier:
                        type: string
                        example: 'Little, Beer and Bruen'
                      created_at:
                        type: string
                        example: '2024-10-21 08:59:22'
                      updated_at:
                        type: string
                        example: '2024-10-21 08:59:22'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - Products
    put:
      summary: 'Update Product'
      operationId: updateProduct
      description: ''
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: 'Cum Fugiat Ut'
                    sku: 1WAMREIOJ80S9N57
                    description: 'Explicabo sit nemo rerum molestiae fuga. Deleniti consectetur explicabo adipisci. Enim sunt est sit ullam consequatur laudantium perspiciatis id.'
                    unit_type: each
                    unit_price: 24.66
                    supplier: 'Kunde Ltd'
                    created_at: '2024-10-21 08:59:22'
                    updated_at: '2024-10-21 08:59:22'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'Cum Fugiat Ut'
                      sku:
                        type: string
                        example: 1WAMREIOJ80S9N57
                      description:
                        type: string
                        example: 'Explicabo sit nemo rerum molestiae fuga. Deleniti consectetur explicabo adipisci. Enim sunt est sit ullam consequatur laudantium perspiciatis id.'
                      unit_type:
                        type: string
                        example: each
                      unit_price:
                        type: number
                        example: 24.66
                      supplier:
                        type: string
                        example: 'Kunde Ltd'
                      created_at:
                        type: string
                        example: '2024-10-21 08:59:22'
                      updated_at:
                        type: string
                        example: '2024-10-21 08:59:22'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - Products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'Website Hosting'
                sku:
                  type: string
                  description: 'Must not be greater than 32 characters.'
                  example: WH-001
                description:
                  type: string
                  description: ''
                  example: 'Standard website hosting on shared server'
                unit_type:
                  type: string
                  description: 'Must not be greater than 16 characters.'
                  example: Each
                unit_price:
                  type: number
                  description: 'Must be at least 0.'
                  example: 12.99
                supplier:
                  type: string
                  description: 'Must not be greater than 64 characters.'
                  example: 'Drip Dropz Ltd'
              required:
                - name
                - unit_price
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the product.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/product-categories:
    get:
      summary: 'List Product Categories'
      operationId: listProductCategories
      description: ''
      parameters:
        -
          in: query
          name: search
          description: 'Search for product categories by name'
          example: Hosting
          required: false
          schema:
            type: string
            description: 'Search for product categories by name'
            example: Hosting
        -
          in: query
          name: per_page
          description: 'Number of results per page (Min 25, Max 100)'
          example: 25
          required: false
          schema:
            type: integer
            description: 'Number of results per page (Min 25, Max 100)'
            example: 25
        -
          in: query
          name: page
          description: 'Page number'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page number'
            example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      name: Quia
                      created_at: '2024-10-21 08:59:22'
                      updated_at: '2024-10-21 08:59:22'
                    -
                      id: 1
                      name: Maxime
                      created_at: '2024-10-21 08:59:22'
                      updated_at: '2024-10-21 08:59:22'
                  links:
                    first: '/?page=1'
                    last: null
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: 1
                    path: /
                    per_page: 25
                    to: 2
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        name: Quia
                        created_at: '2024-10-21 08:59:22'
                        updated_at: '2024-10-21 08:59:22'
                      -
                        id: 1
                        name: Maxime
                        created_at: '2024-10-21 08:59:22'
                        updated_at: '2024-10-21 08:59:22'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: Quia
                        created_at:
                          type: string
                          example: '2024-10-21 08:59:22'
                        updated_at:
                          type: string
                          example: '2024-10-21 08:59:22'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: '/?page=1'
                      last:
                        type: string
                        example: null
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      path:
                        type: string
                        example: /
                      per_page:
                        type: integer
                        example: 25
                      to:
                        type: integer
                        example: 2
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Product Categories'
    post:
      summary: 'Create Product Category'
      operationId: createProductCategory
      description: ''
      parameters: []
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: Veniam
                    created_at: '2024-10-21 08:59:22'
                    updated_at: '2024-10-21 08:59:22'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: Veniam
                      created_at:
                        type: string
                        example: '2024-10-21 08:59:22'
                      updated_at:
                        type: string
                        example: '2024-10-21 08:59:22'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Product Categories'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: Hosting
              required:
                - name
  '/api/v1/product-categories/{id}':
    get:
      summary: 'Get Product Category'
      operationId: getProductCategory
      description: ''
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: Sint
                    created_at: '2024-10-21 08:59:22'
                    updated_at: '2024-10-21 08:59:22'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: Sint
                      created_at:
                        type: string
                        example: '2024-10-21 08:59:22'
                      updated_at:
                        type: string
                        example: '2024-10-21 08:59:22'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Product Categories'
    put:
      summary: 'Update Product Category'
      operationId: updateProductCategory
      description: ''
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: Neque
                    created_at: '2024-10-21 08:59:22'
                    updated_at: '2024-10-21 08:59:22'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: Neque
                      created_at:
                        type: string
                        example: '2024-10-21 08:59:22'
                      updated_at:
                        type: string
                        example: '2024-10-21 08:59:22'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Product Categories'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: Hosting
              required:
                - name
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the product category.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/product-categories-sync:
    put:
      summary: 'Sync Customer Categories'
      operationId: syncCustomerCategories
      description: ''
      parameters: []
      responses:
        204:
          description: 'Customer Categories Synced'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Product Categories'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product_id:
                  type: integer
                  description: ''
                  example: 1
                category_ids:
                  type: array
                  description: ''
                  example:
                    - 5
                  items:
                    type: integer
              required:
                - product_id
tags:
  -
    name: Customers
    description: 'Customer Management API'
  -
    name: 'Customer Emails'
    description: 'Customer Email Management API'
  -
    name: 'Customer Phones'
    description: 'Customer Phone Management API'
  -
    name: 'Customer Addresses'
    description: 'Customer Address Management API'
  -
    name: 'Customer Categories'
    description: 'Customer Category Management API'
  -
    name: Products
    description: 'Product Management API'
  -
    name: 'Product Categories'
    description: 'Product Category Management API'
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: 'You can generate your token by logging in and clicking your name, and then <a href="/user/api-tokens"><b>API Tokens</b></a>.'
security:
  -
    default: []
