openapi: 3.0.3
info:
  title: 'Cardano Mercury: Invoice'
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8100'
paths:
  /api/v1/customers:
    get:
      summary: 'List Customers'
      operationId: listCustomers
      description: ''
      parameters:
        -
          in: query
          name: search
          description: 'Search for customers by name or tax number'
          example: 'John Doe'
          required: false
          schema:
            type: string
            description: 'Search for customers by name or tax number'
            example: 'John Doe'
        -
          in: query
          name: per_page
          description: 'Number of results per page (Min 25, Max 100)'
          example: 25
          required: false
          schema:
            type: integer
            description: 'Number of results per page (Min 25, Max 100)'
            example: 25
        -
          in: query
          name: page
          description: 'Page number'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page number'
            example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      name: 'Thalia Walker'
                      tax_number: 01JAQ15YAMWJ82FDN6MZARWMWA
                      tax_rate: 17.5
                      categories:
                        -
                          id: 1
                          name: Et
                          created_at: '2024-10-21 07:55:32'
                          updated_at: '2024-10-21 07:55:32'
                      defaultEmail:
                        id: 1
                        name: 'Miss Dayna Friesen'
                        address: kennith.pfannerstill@example.org
                        is_default: true
                        created_at: '2024-10-21 07:55:32'
                        updated_at: '2024-10-21 07:55:32'
                      defaultPhone:
                        id: 1
                        type: Office
                        name: 'Miss Kenya Eichmann Sr.'
                        number: '(430) 465-9791'
                        is_default: true
                        created_at: '2024-10-21 07:55:32'
                        updated_at: '2024-10-21 07:55:32'
                      defaultAddress:
                        id: 1
                        type: Billing
                        name: 'Cassin Group'
                        line1: '5739 Taya Via Suite 194'
                        line2: null
                        city: 'South Amaramouth'
                        state: Mississippi
                        postal_code: 42331-5974
                        country: 'United States'
                        is_default: true
                        created_at: '2024-10-21 07:55:32'
                        updated_at: '2024-10-21 07:55:32'
                      created_at: '2024-10-21 07:55:32'
                      updated_at: '2024-10-21 07:55:32'
                    -
                      id: 1
                      name: 'Esteban Walter'
                      tax_number: 01JAQ15YANK6PABVY4S9WH721Q
                      tax_rate: 17.5
                      categories:
                        -
                          id: 1
                          name: Sit
                          created_at: '2024-10-21 07:55:32'
                          updated_at: '2024-10-21 07:55:32'
                      defaultEmail:
                        id: 1
                        name: 'Prof. Greyson Rath'
                        address: foster.braun@example.net
                        is_default: true
                        created_at: '2024-10-21 07:55:32'
                        updated_at: '2024-10-21 07:55:32'
                      defaultPhone:
                        id: 1
                        type: Home
                        name: 'Mikayla Stamm DVM'
                        number: '(929) 484-5355'
                        is_default: true
                        created_at: '2024-10-21 07:55:32'
                        updated_at: '2024-10-21 07:55:32'
                      defaultAddress:
                        id: 1
                        type: Shipping
                        name: 'McKenzie LLC'
                        line1: '809 Dorothea Island'
                        line2: null
                        city: Reichertberg
                        state: Iowa
                        postal_code: 00311-4421
                        country: 'United States'
                        is_default: true
                        created_at: '2024-10-21 07:55:32'
                        updated_at: '2024-10-21 07:55:32'
                      created_at: '2024-10-21 07:55:32'
                      updated_at: '2024-10-21 07:55:32'
                  links:
                    first: '/?page=1'
                    last: null
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: 1
                    path: /
                    per_page: 25
                    to: 2
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        name: 'Thalia Walker'
                        tax_number: 01JAQ15YAMWJ82FDN6MZARWMWA
                        tax_rate: 17.5
                        categories:
                          -
                            id: 1
                            name: Et
                            created_at: '2024-10-21 07:55:32'
                            updated_at: '2024-10-21 07:55:32'
                        defaultEmail:
                          id: 1
                          name: 'Miss Dayna Friesen'
                          address: kennith.pfannerstill@example.org
                          is_default: true
                          created_at: '2024-10-21 07:55:32'
                          updated_at: '2024-10-21 07:55:32'
                        defaultPhone:
                          id: 1
                          type: Office
                          name: 'Miss Kenya Eichmann Sr.'
                          number: '(430) 465-9791'
                          is_default: true
                          created_at: '2024-10-21 07:55:32'
                          updated_at: '2024-10-21 07:55:32'
                        defaultAddress:
                          id: 1
                          type: Billing
                          name: 'Cassin Group'
                          line1: '5739 Taya Via Suite 194'
                          line2: null
                          city: 'South Amaramouth'
                          state: Mississippi
                          postal_code: 42331-5974
                          country: 'United States'
                          is_default: true
                          created_at: '2024-10-21 07:55:32'
                          updated_at: '2024-10-21 07:55:32'
                        created_at: '2024-10-21 07:55:32'
                        updated_at: '2024-10-21 07:55:32'
                      -
                        id: 1
                        name: 'Esteban Walter'
                        tax_number: 01JAQ15YANK6PABVY4S9WH721Q
                        tax_rate: 17.5
                        categories:
                          -
                            id: 1
                            name: Sit
                            created_at: '2024-10-21 07:55:32'
                            updated_at: '2024-10-21 07:55:32'
                        defaultEmail:
                          id: 1
                          name: 'Prof. Greyson Rath'
                          address: foster.braun@example.net
                          is_default: true
                          created_at: '2024-10-21 07:55:32'
                          updated_at: '2024-10-21 07:55:32'
                        defaultPhone:
                          id: 1
                          type: Home
                          name: 'Mikayla Stamm DVM'
                          number: '(929) 484-5355'
                          is_default: true
                          created_at: '2024-10-21 07:55:32'
                          updated_at: '2024-10-21 07:55:32'
                        defaultAddress:
                          id: 1
                          type: Shipping
                          name: 'McKenzie LLC'
                          line1: '809 Dorothea Island'
                          line2: null
                          city: Reichertberg
                          state: Iowa
                          postal_code: 00311-4421
                          country: 'United States'
                          is_default: true
                          created_at: '2024-10-21 07:55:32'
                          updated_at: '2024-10-21 07:55:32'
                        created_at: '2024-10-21 07:55:32'
                        updated_at: '2024-10-21 07:55:32'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: 'Thalia Walker'
                        tax_number:
                          type: string
                          example: 01JAQ15YAMWJ82FDN6MZARWMWA
                        tax_rate:
                          type: number
                          example: 17.5
                        categories:
                          type: array
                          example:
                            -
                              id: 1
                              name: Et
                              created_at: '2024-10-21 07:55:32'
                              updated_at: '2024-10-21 07:55:32'
                          items:
                            type: object
                            properties:
                              id:
                                type: integer
                                example: 1
                              name:
                                type: string
                                example: Et
                              created_at:
                                type: string
                                example: '2024-10-21 07:55:32'
                              updated_at:
                                type: string
                                example: '2024-10-21 07:55:32'
                        defaultEmail:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 1
                            name:
                              type: string
                              example: 'Miss Dayna Friesen'
                            address:
                              type: string
                              example: kennith.pfannerstill@example.org
                            is_default:
                              type: boolean
                              example: true
                            created_at:
                              type: string
                              example: '2024-10-21 07:55:32'
                            updated_at:
                              type: string
                              example: '2024-10-21 07:55:32'
                        defaultPhone:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 1
                            type:
                              type: string
                              example: Office
                            name:
                              type: string
                              example: 'Miss Kenya Eichmann Sr.'
                            number:
                              type: string
                              example: '(430) 465-9791'
                            is_default:
                              type: boolean
                              example: true
                            created_at:
                              type: string
                              example: '2024-10-21 07:55:32'
                            updated_at:
                              type: string
                              example: '2024-10-21 07:55:32'
                        defaultAddress:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 1
                            type:
                              type: string
                              example: Billing
                            name:
                              type: string
                              example: 'Cassin Group'
                            line1:
                              type: string
                              example: '5739 Taya Via Suite 194'
                            line2:
                              type: string
                              example: null
                            city:
                              type: string
                              example: 'South Amaramouth'
                            state:
                              type: string
                              example: Mississippi
                            postal_code:
                              type: string
                              example: 42331-5974
                            country:
                              type: string
                              example: 'United States'
                            is_default:
                              type: boolean
                              example: true
                            created_at:
                              type: string
                              example: '2024-10-21 07:55:32'
                            updated_at:
                              type: string
                              example: '2024-10-21 07:55:32'
                        created_at:
                          type: string
                          example: '2024-10-21 07:55:32'
                        updated_at:
                          type: string
                          example: '2024-10-21 07:55:32'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: '/?page=1'
                      last:
                        type: string
                        example: null
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      path:
                        type: string
                        example: /
                      per_page:
                        type: integer
                        example: 25
                      to:
                        type: integer
                        example: 2
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - Customers
    post:
      summary: 'Create Customer'
      operationId: createCustomer
      description: ''
      parameters: []
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: 'Dr. Lavonne Kassulke Sr.'
                    tax_number: 01JAQ15YAXQECSVPKK3KW86Q83
                    tax_rate: 17.5
                    categories: []
                    defaultEmail: null
                    defaultPhone: null
                    defaultAddress: null
                    created_at: '2024-10-21 07:55:32'
                    updated_at: '2024-10-21 07:55:32'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'Dr. Lavonne Kassulke Sr.'
                      tax_number:
                        type: string
                        example: 01JAQ15YAXQECSVPKK3KW86Q83
                      tax_rate:
                        type: number
                        example: 17.5
                      categories:
                        type: array
                        example: []
                      defaultEmail:
                        type: string
                        example: null
                      defaultPhone:
                        type: string
                        example: null
                      defaultAddress:
                        type: string
                        example: null
                      created_at:
                        type: string
                        example: '2024-10-21 07:55:32'
                      updated_at:
                        type: string
                        example: '2024-10-21 07:55:32'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - Customers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'John Doe'
                tax_number:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: ABCD-1234
                tax_rate:
                  type: number
                  description: 'Must be between 0 and 100.'
                  example: 12.5
              required:
                - name
  '/api/v1/customers/{id}':
    get:
      summary: 'Get Customer'
      operationId: getCustomer
      description: ''
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: 'Prof. Kiana Reynolds'
                    tax_number: 01JAQ15YB4HB2X7CXBCCH447DP
                    tax_rate: 17.5
                    categories:
                      -
                        id: 1
                        name: Ad
                        created_at: '2024-10-21 07:55:32'
                        updated_at: '2024-10-21 07:55:32'
                    defaultEmail:
                      id: 1
                      name: 'Helmer Emmerich'
                      address: savanah91@example.net
                      is_default: true
                      created_at: '2024-10-21 07:55:32'
                      updated_at: '2024-10-21 07:55:32'
                    defaultPhone:
                      id: 1
                      type: Home
                      name: "Mrs. Amaya D'Amore"
                      number: 1-419-715-7899
                      is_default: true
                      created_at: '2024-10-21 07:55:32'
                      updated_at: '2024-10-21 07:55:32'
                    defaultAddress:
                      id: 1
                      type: Shipping
                      name: 'Collins, Jacobi and Braun'
                      line1: '64622 Jazmyne Springs Apt. 766'
                      line2: null
                      city: 'New Meaganberg'
                      state: 'New Mexico'
                      postal_code: 86618-1689
                      country: 'United States'
                      is_default: true
                      created_at: '2024-10-21 07:55:32'
                      updated_at: '2024-10-21 07:55:32'
                    created_at: '2024-10-21 07:55:32'
                    updated_at: '2024-10-21 07:55:32'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'Prof. Kiana Reynolds'
                      tax_number:
                        type: string
                        example: 01JAQ15YB4HB2X7CXBCCH447DP
                      tax_rate:
                        type: number
                        example: 17.5
                      categories:
                        type: array
                        example:
                          -
                            id: 1
                            name: Ad
                            created_at: '2024-10-21 07:55:32'
                            updated_at: '2024-10-21 07:55:32'
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 1
                            name:
                              type: string
                              example: Ad
                            created_at:
                              type: string
                              example: '2024-10-21 07:55:32'
                            updated_at:
                              type: string
                              example: '2024-10-21 07:55:32'
                      defaultEmail:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                          name:
                            type: string
                            example: 'Helmer Emmerich'
                          address:
                            type: string
                            example: savanah91@example.net
                          is_default:
                            type: boolean
                            example: true
                          created_at:
                            type: string
                            example: '2024-10-21 07:55:32'
                          updated_at:
                            type: string
                            example: '2024-10-21 07:55:32'
                      defaultPhone:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                          type:
                            type: string
                            example: Home
                          name:
                            type: string
                            example: "Mrs. Amaya D'Amore"
                          number:
                            type: string
                            example: 1-419-715-7899
                          is_default:
                            type: boolean
                            example: true
                          created_at:
                            type: string
                            example: '2024-10-21 07:55:32'
                          updated_at:
                            type: string
                            example: '2024-10-21 07:55:32'
                      defaultAddress:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                          type:
                            type: string
                            example: Shipping
                          name:
                            type: string
                            example: 'Collins, Jacobi and Braun'
                          line1:
                            type: string
                            example: '64622 Jazmyne Springs Apt. 766'
                          line2:
                            type: string
                            example: null
                          city:
                            type: string
                            example: 'New Meaganberg'
                          state:
                            type: string
                            example: 'New Mexico'
                          postal_code:
                            type: string
                            example: 86618-1689
                          country:
                            type: string
                            example: 'United States'
                          is_default:
                            type: boolean
                            example: true
                          created_at:
                            type: string
                            example: '2024-10-21 07:55:32'
                          updated_at:
                            type: string
                            example: '2024-10-21 07:55:32'
                      created_at:
                        type: string
                        example: '2024-10-21 07:55:32'
                      updated_at:
                        type: string
                        example: '2024-10-21 07:55:32'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - Customers
    put:
      summary: 'Update Customer'
      operationId: updateCustomer
      description: ''
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: 'Jacklyn Powlowski'
                    tax_number: 01JAQ15YB6Z34SNDVCN6A4K1PB
                    tax_rate: 17.5
                    categories:
                      -
                        id: 1
                        name: Possimus
                        created_at: '2024-10-21 07:55:32'
                        updated_at: '2024-10-21 07:55:32'
                    defaultEmail:
                      id: 1
                      name: 'Rylan Schamberger'
                      address: lorenz11@example.com
                      is_default: true
                      created_at: '2024-10-21 07:55:32'
                      updated_at: '2024-10-21 07:55:32'
                    defaultPhone:
                      id: 1
                      type: Mobile
                      name: 'Mrs. Patricia Braun DDS'
                      number: +1-934-435-9902
                      is_default: true
                      created_at: '2024-10-21 07:55:32'
                      updated_at: '2024-10-21 07:55:32'
                    defaultAddress:
                      id: 1
                      type: Shipping
                      name: 'Gutkowski, Hills and Wintheiser'
                      line1: '82400 Beier Harbors'
                      line2: null
                      city: 'North Adelle'
                      state: Ohio
                      postal_code: '07495'
                      country: 'United States'
                      is_default: true
                      created_at: '2024-10-21 07:55:32'
                      updated_at: '2024-10-21 07:55:32'
                    created_at: '2024-10-21 07:55:32'
                    updated_at: '2024-10-21 07:55:32'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'Jacklyn Powlowski'
                      tax_number:
                        type: string
                        example: 01JAQ15YB6Z34SNDVCN6A4K1PB
                      tax_rate:
                        type: number
                        example: 17.5
                      categories:
                        type: array
                        example:
                          -
                            id: 1
                            name: Possimus
                            created_at: '2024-10-21 07:55:32'
                            updated_at: '2024-10-21 07:55:32'
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 1
                            name:
                              type: string
                              example: Possimus
                            created_at:
                              type: string
                              example: '2024-10-21 07:55:32'
                            updated_at:
                              type: string
                              example: '2024-10-21 07:55:32'
                      defaultEmail:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                          name:
                            type: string
                            example: 'Rylan Schamberger'
                          address:
                            type: string
                            example: lorenz11@example.com
                          is_default:
                            type: boolean
                            example: true
                          created_at:
                            type: string
                            example: '2024-10-21 07:55:32'
                          updated_at:
                            type: string
                            example: '2024-10-21 07:55:32'
                      defaultPhone:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                          type:
                            type: string
                            example: Mobile
                          name:
                            type: string
                            example: 'Mrs. Patricia Braun DDS'
                          number:
                            type: string
                            example: +1-934-435-9902
                          is_default:
                            type: boolean
                            example: true
                          created_at:
                            type: string
                            example: '2024-10-21 07:55:32'
                          updated_at:
                            type: string
                            example: '2024-10-21 07:55:32'
                      defaultAddress:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                          type:
                            type: string
                            example: Shipping
                          name:
                            type: string
                            example: 'Gutkowski, Hills and Wintheiser'
                          line1:
                            type: string
                            example: '82400 Beier Harbors'
                          line2:
                            type: string
                            example: null
                          city:
                            type: string
                            example: 'North Adelle'
                          state:
                            type: string
                            example: Ohio
                          postal_code:
                            type: string
                            example: '07495'
                          country:
                            type: string
                            example: 'United States'
                          is_default:
                            type: boolean
                            example: true
                          created_at:
                            type: string
                            example: '2024-10-21 07:55:32'
                          updated_at:
                            type: string
                            example: '2024-10-21 07:55:32'
                      created_at:
                        type: string
                        example: '2024-10-21 07:55:32'
                      updated_at:
                        type: string
                        example: '2024-10-21 07:55:32'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - Customers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'John Doe'
                tax_number:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: ABCD-1234
                tax_rate:
                  type: number
                  description: 'Must be between 0 and 100.'
                  example: 12.5
              required:
                - name
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the customer.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/customers/{customer_id}/emails':
    get:
      summary: 'List Customer Emails'
      operationId: listCustomerEmails
      description: ''
      parameters:
        -
          in: query
          name: search
          description: 'Search for customer emails by name or address'
          example: john.doe@example.com
          required: false
          schema:
            type: string
            description: 'Search for customer emails by name or address'
            example: john.doe@example.com
        -
          in: query
          name: per_page
          description: 'Number of results per page (Min 25, Max 100)'
          example: 25
          required: false
          schema:
            type: integer
            description: 'Number of results per page (Min 25, Max 100)'
            example: 25
        -
          in: query
          name: page
          description: 'Page number'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page number'
            example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      name: 'Robert Zboncak'
                      address: wlehner@example.net
                      is_default: true
                      created_at: '2024-10-21 07:55:32'
                      updated_at: '2024-10-21 07:55:32'
                    -
                      id: 1
                      name: 'Taylor Hammes IV'
                      address: beier.curt@example.net
                      is_default: true
                      created_at: '2024-10-21 07:55:32'
                      updated_at: '2024-10-21 07:55:32'
                  links:
                    first: '/?page=1'
                    last: null
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: 1
                    path: /
                    per_page: 25
                    to: 2
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        name: 'Robert Zboncak'
                        address: wlehner@example.net
                        is_default: true
                        created_at: '2024-10-21 07:55:32'
                        updated_at: '2024-10-21 07:55:32'
                      -
                        id: 1
                        name: 'Taylor Hammes IV'
                        address: beier.curt@example.net
                        is_default: true
                        created_at: '2024-10-21 07:55:32'
                        updated_at: '2024-10-21 07:55:32'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: 'Robert Zboncak'
                        address:
                          type: string
                          example: wlehner@example.net
                        is_default:
                          type: boolean
                          example: true
                        created_at:
                          type: string
                          example: '2024-10-21 07:55:32'
                        updated_at:
                          type: string
                          example: '2024-10-21 07:55:32'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: '/?page=1'
                      last:
                        type: string
                        example: null
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      path:
                        type: string
                        example: /
                      per_page:
                        type: integer
                        example: 25
                      to:
                        type: integer
                        example: 2
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Emails'
    post:
      summary: 'Create Customer Email'
      operationId: createCustomerEmail
      description: ''
      parameters: []
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: 'Maud Ritchie'
                    address: xbarton@example.net
                    is_default: true
                    created_at: '2024-10-21 07:55:32'
                    updated_at: '2024-10-21 07:55:32'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'Maud Ritchie'
                      address:
                        type: string
                        example: xbarton@example.net
                      is_default:
                        type: boolean
                        example: true
                      created_at:
                        type: string
                        example: '2024-10-21 07:55:32'
                      updated_at:
                        type: string
                        example: '2024-10-21 07:55:32'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Emails'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'John Doe'
                address:
                  type: string
                  description: 'Must be a valid email address. Must be at least 3 characters. Must not be greater than 256 characters.'
                  example: john.doe@example.com
                is_default:
                  type: boolean
                  description: ''
                  example: false
              required:
                - name
                - address
    parameters:
      -
        in: path
        name: customer_id
        description: 'The ID of the customer.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/customers/{customer_id}/emails/{id}':
    get:
      summary: 'Get Customer Email'
      operationId: getCustomerEmail
      description: ''
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: 'Natalie Wilkinson V'
                    address: kmurphy@example.net
                    is_default: true
                    created_at: '2024-10-21 07:55:32'
                    updated_at: '2024-10-21 07:55:32'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'Natalie Wilkinson V'
                      address:
                        type: string
                        example: kmurphy@example.net
                      is_default:
                        type: boolean
                        example: true
                      created_at:
                        type: string
                        example: '2024-10-21 07:55:32'
                      updated_at:
                        type: string
                        example: '2024-10-21 07:55:32'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Emails'
    put:
      summary: 'Update Customer Email'
      operationId: updateCustomerEmail
      description: ''
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: 'Nona Dare'
                    address: lindgren.camryn@example.net
                    is_default: true
                    created_at: '2024-10-21 07:55:32'
                    updated_at: '2024-10-21 07:55:32'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'Nona Dare'
                      address:
                        type: string
                        example: lindgren.camryn@example.net
                      is_default:
                        type: boolean
                        example: true
                      created_at:
                        type: string
                        example: '2024-10-21 07:55:32'
                      updated_at:
                        type: string
                        example: '2024-10-21 07:55:32'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Emails'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'John Doe'
                address:
                  type: string
                  description: 'Must be a valid email address. Must be at least 3 characters. Must not be greater than 256 characters.'
                  example: john.doe@example.com
                is_default:
                  type: boolean
                  description: ''
                  example: true
              required:
                - name
                - address
    parameters:
      -
        in: path
        name: customer_id
        description: 'The ID of the customer.'
        example: 1
        required: true
        schema:
          type: integer
      -
        in: path
        name: id
        description: 'The ID of the email.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/customers/{customer_id}/phones':
    get:
      summary: 'List Customer Phones'
      operationId: listCustomerPhones
      description: ''
      parameters:
        -
          in: query
          name: type
          description: ''
          example: Office
          required: false
          schema:
            type: string
            description: ''
            example: Office
            enum:
              - Home
              - Office
              - Mobile
        -
          in: query
          name: search
          description: 'Search for customer phones by name or number'
          example: '0123456789'
          required: false
          schema:
            type: string
            description: 'Search for customer phones by name or number'
            example: '0123456789'
        -
          in: query
          name: per_page
          description: 'Number of results per page (Min 25, Max 100)'
          example: 25
          required: false
          schema:
            type: integer
            description: 'Number of results per page (Min 25, Max 100)'
            example: 25
        -
          in: query
          name: page
          description: 'Page number'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page number'
            example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      type: Mobile
                      name: 'Prof. Jalon Purdy DVM'
                      number: 1-320-679-9341
                      is_default: true
                      created_at: '2024-10-21 07:55:32'
                      updated_at: '2024-10-21 07:55:32'
                    -
                      id: 1
                      type: Office
                      name: 'Bernard Towne'
                      number: +1.531.376.6082
                      is_default: true
                      created_at: '2024-10-21 07:55:32'
                      updated_at: '2024-10-21 07:55:32'
                  links:
                    first: '/?page=1'
                    last: null
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: 1
                    path: /
                    per_page: 25
                    to: 2
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        type: Mobile
                        name: 'Prof. Jalon Purdy DVM'
                        number: 1-320-679-9341
                        is_default: true
                        created_at: '2024-10-21 07:55:32'
                        updated_at: '2024-10-21 07:55:32'
                      -
                        id: 1
                        type: Office
                        name: 'Bernard Towne'
                        number: +1.531.376.6082
                        is_default: true
                        created_at: '2024-10-21 07:55:32'
                        updated_at: '2024-10-21 07:55:32'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        type:
                          type: string
                          example: Mobile
                        name:
                          type: string
                          example: 'Prof. Jalon Purdy DVM'
                        number:
                          type: string
                          example: 1-320-679-9341
                        is_default:
                          type: boolean
                          example: true
                        created_at:
                          type: string
                          example: '2024-10-21 07:55:32'
                        updated_at:
                          type: string
                          example: '2024-10-21 07:55:32'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: '/?page=1'
                      last:
                        type: string
                        example: null
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      path:
                        type: string
                        example: /
                      per_page:
                        type: integer
                        example: 25
                      to:
                        type: integer
                        example: 2
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Phones'
    post:
      summary: 'Create Customer Phone'
      operationId: createCustomerPhone
      description: ''
      parameters: []
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    type: Mobile
                    name: 'Madaline Balistreri'
                    number: 216.515.7960
                    is_default: true
                    created_at: '2024-10-21 07:55:32'
                    updated_at: '2024-10-21 07:55:32'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      type:
                        type: string
                        example: Mobile
                      name:
                        type: string
                        example: 'Madaline Balistreri'
                      number:
                        type: string
                        example: 216.515.7960
                      is_default:
                        type: boolean
                        example: true
                      created_at:
                        type: string
                        example: '2024-10-21 07:55:32'
                      updated_at:
                        type: string
                        example: '2024-10-21 07:55:32'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Phones'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: ''
                  example: Office
                  enum:
                    - Home
                    - Office
                    - Mobile
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'John Doe'
                number:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 32 characters.'
                  example: +1-956-745-2290
                is_default:
                  type: boolean
                  description: ''
                  example: false
              required:
                - type
                - name
                - number
    parameters:
      -
        in: path
        name: customer_id
        description: 'The ID of the customer.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/customers/{customer_id}/phones/{id}':
    get:
      summary: 'Get Customer Phone'
      operationId: getCustomerPhone
      description: ''
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    type: Mobile
                    name: 'Barry Funk'
                    number: '(909) 314-1153'
                    is_default: true
                    created_at: '2024-10-21 07:55:32'
                    updated_at: '2024-10-21 07:55:32'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      type:
                        type: string
                        example: Mobile
                      name:
                        type: string
                        example: 'Barry Funk'
                      number:
                        type: string
                        example: '(909) 314-1153'
                      is_default:
                        type: boolean
                        example: true
                      created_at:
                        type: string
                        example: '2024-10-21 07:55:32'
                      updated_at:
                        type: string
                        example: '2024-10-21 07:55:32'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Phones'
    put:
      summary: 'Update Customer Phone'
      operationId: updateCustomerPhone
      description: ''
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    type: Mobile
                    name: 'Trey Renner'
                    number: +1-505-544-6513
                    is_default: true
                    created_at: '2024-10-21 07:55:32'
                    updated_at: '2024-10-21 07:55:32'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      type:
                        type: string
                        example: Mobile
                      name:
                        type: string
                        example: 'Trey Renner'
                      number:
                        type: string
                        example: +1-505-544-6513
                      is_default:
                        type: boolean
                        example: true
                      created_at:
                        type: string
                        example: '2024-10-21 07:55:32'
                      updated_at:
                        type: string
                        example: '2024-10-21 07:55:32'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Phones'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: ''
                  example: Home
                  enum:
                    - Home
                    - Office
                    - Mobile
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'John Doe'
                number:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 32 characters.'
                  example: +1-956-745-2290
                is_default:
                  type: boolean
                  description: ''
                  example: false
              required:
                - type
                - name
                - number
    parameters:
      -
        in: path
        name: customer_id
        description: 'The ID of the customer.'
        example: 1
        required: true
        schema:
          type: integer
      -
        in: path
        name: id
        description: 'The ID of the phone.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/customers/{customer_id}/addresses':
    get:
      summary: 'List Customer Addresses'
      operationId: listCustomerAddresses
      description: ''
      parameters:
        -
          in: query
          name: type
          description: ''
          example: Billing
          required: false
          schema:
            type: string
            description: ''
            example: Billing
            enum:
              - Billing
              - Shipping
        -
          in: query
          name: search
          description: 'Search for customer addresses by name or any address fields'
          example: '25 Brookfield Road'
          required: false
          schema:
            type: string
            description: 'Search for customer addresses by name or any address fields'
            example: '25 Brookfield Road'
        -
          in: query
          name: per_page
          description: 'Number of results per page (Min 25, Max 100)'
          example: 25
          required: false
          schema:
            type: integer
            description: 'Number of results per page (Min 25, Max 100)'
            example: 25
        -
          in: query
          name: page
          description: 'Page number'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page number'
            example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      type: Shipping
                      name: 'Windler LLC'
                      line1: '570 Lucinda Cliff Suite 036'
                      line2: null
                      city: 'North Stella'
                      state: Delaware
                      postal_code: '38859'
                      country: 'United States'
                      is_default: true
                      created_at: '2024-10-21 07:55:32'
                      updated_at: '2024-10-21 07:55:32'
                    -
                      id: 1
                      type: Shipping
                      name: 'Hackett, Donnelly and Schmidt'
                      line1: '28937 Jadon Trail Apt. 717'
                      line2: null
                      city: Bauchside
                      state: Utah
                      postal_code: '67194'
                      country: 'United States'
                      is_default: true
                      created_at: '2024-10-21 07:55:32'
                      updated_at: '2024-10-21 07:55:32'
                  links:
                    first: '/?page=1'
                    last: null
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: 1
                    path: /
                    per_page: 25
                    to: 2
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        type: Shipping
                        name: 'Windler LLC'
                        line1: '570 Lucinda Cliff Suite 036'
                        line2: null
                        city: 'North Stella'
                        state: Delaware
                        postal_code: '38859'
                        country: 'United States'
                        is_default: true
                        created_at: '2024-10-21 07:55:32'
                        updated_at: '2024-10-21 07:55:32'
                      -
                        id: 1
                        type: Shipping
                        name: 'Hackett, Donnelly and Schmidt'
                        line1: '28937 Jadon Trail Apt. 717'
                        line2: null
                        city: Bauchside
                        state: Utah
                        postal_code: '67194'
                        country: 'United States'
                        is_default: true
                        created_at: '2024-10-21 07:55:32'
                        updated_at: '2024-10-21 07:55:32'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        type:
                          type: string
                          example: Shipping
                        name:
                          type: string
                          example: 'Windler LLC'
                        line1:
                          type: string
                          example: '570 Lucinda Cliff Suite 036'
                        line2:
                          type: string
                          example: null
                        city:
                          type: string
                          example: 'North Stella'
                        state:
                          type: string
                          example: Delaware
                        postal_code:
                          type: string
                          example: '38859'
                        country:
                          type: string
                          example: 'United States'
                        is_default:
                          type: boolean
                          example: true
                        created_at:
                          type: string
                          example: '2024-10-21 07:55:32'
                        updated_at:
                          type: string
                          example: '2024-10-21 07:55:32'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: '/?page=1'
                      last:
                        type: string
                        example: null
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      path:
                        type: string
                        example: /
                      per_page:
                        type: integer
                        example: 25
                      to:
                        type: integer
                        example: 2
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Addresses'
    post:
      summary: 'Create Customer Address'
      operationId: createCustomerAddress
      description: ''
      parameters: []
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    type: Billing
                    name: 'McKenzie Ltd'
                    line1: '498 Vergie Tunnel'
                    line2: null
                    city: Maximilianmouth
                    state: 'North Dakota'
                    postal_code: '91391'
                    country: 'United States'
                    is_default: true
                    created_at: '2024-10-21 07:55:32'
                    updated_at: '2024-10-21 07:55:32'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      type:
                        type: string
                        example: Billing
                      name:
                        type: string
                        example: 'McKenzie Ltd'
                      line1:
                        type: string
                        example: '498 Vergie Tunnel'
                      line2:
                        type: string
                        example: null
                      city:
                        type: string
                        example: Maximilianmouth
                      state:
                        type: string
                        example: 'North Dakota'
                      postal_code:
                        type: string
                        example: '91391'
                      country:
                        type: string
                        example: 'United States'
                      is_default:
                        type: boolean
                        example: true
                      created_at:
                        type: string
                        example: '2024-10-21 07:55:32'
                      updated_at:
                        type: string
                        example: '2024-10-21 07:55:32'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Addresses'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: ''
                  example: Billing
                  enum:
                    - Billing
                    - Shipping
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'John Doe'
                line1:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: '2592 Jada Key'
                line2:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'Apartment 504'
                city:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'South Josh'
                state:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: Kentucky
                postal_code:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 62249-8453
                country:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'United States'
                is_default:
                  type: boolean
                  description: ''
                  example: true
              required:
                - type
                - name
                - line1
                - city
                - postal_code
                - country
    parameters:
      -
        in: path
        name: customer_id
        description: 'The ID of the customer.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/customers/{customer_id}/addresses/{id}':
    get:
      summary: 'Get Customer Address'
      operationId: getCustomerAddress
      description: ''
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    type: Billing
                    name: 'Torp Inc'
                    line1: '7565 Hauck Hollow'
                    line2: null
                    city: 'New Darwin'
                    state: Nebraska
                    postal_code: 62132-7183
                    country: 'United States'
                    is_default: true
                    created_at: '2024-10-21 07:55:32'
                    updated_at: '2024-10-21 07:55:32'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      type:
                        type: string
                        example: Billing
                      name:
                        type: string
                        example: 'Torp Inc'
                      line1:
                        type: string
                        example: '7565 Hauck Hollow'
                      line2:
                        type: string
                        example: null
                      city:
                        type: string
                        example: 'New Darwin'
                      state:
                        type: string
                        example: Nebraska
                      postal_code:
                        type: string
                        example: 62132-7183
                      country:
                        type: string
                        example: 'United States'
                      is_default:
                        type: boolean
                        example: true
                      created_at:
                        type: string
                        example: '2024-10-21 07:55:32'
                      updated_at:
                        type: string
                        example: '2024-10-21 07:55:32'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Addresses'
    put:
      summary: 'Update Customer Address'
      operationId: updateCustomerAddress
      description: ''
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    type: Billing
                    name: Rutherford-Denesik
                    line1: '898 Darrell Village Apt. 456'
                    line2: null
                    city: Macejkovicfort
                    state: Arkansas
                    postal_code: '39460'
                    country: 'United States'
                    is_default: true
                    created_at: '2024-10-21 07:55:32'
                    updated_at: '2024-10-21 07:55:32'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      type:
                        type: string
                        example: Billing
                      name:
                        type: string
                        example: Rutherford-Denesik
                      line1:
                        type: string
                        example: '898 Darrell Village Apt. 456'
                      line2:
                        type: string
                        example: null
                      city:
                        type: string
                        example: Macejkovicfort
                      state:
                        type: string
                        example: Arkansas
                      postal_code:
                        type: string
                        example: '39460'
                      country:
                        type: string
                        example: 'United States'
                      is_default:
                        type: boolean
                        example: true
                      created_at:
                        type: string
                        example: '2024-10-21 07:55:32'
                      updated_at:
                        type: string
                        example: '2024-10-21 07:55:32'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Addresses'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: ''
                  example: Billing
                  enum:
                    - Billing
                    - Shipping
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'John Doe'
                line1:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: '2592 Jada Key'
                line2:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'Apartment 504'
                city:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'South Josh'
                state:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: Kentucky
                postal_code:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 62249-8453
                country:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'United States'
                is_default:
                  type: boolean
                  description: ''
                  example: false
              required:
                - type
                - name
                - line1
                - city
                - postal_code
                - country
    parameters:
      -
        in: path
        name: customer_id
        description: 'The ID of the customer.'
        example: 1
        required: true
        schema:
          type: integer
      -
        in: path
        name: id
        description: 'The ID of the address.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/customer-categories:
    get:
      summary: 'List Customer Categories'
      operationId: listCustomerCategories
      description: ''
      parameters:
        -
          in: query
          name: search
          description: 'Search for customer categories by name'
          example: Freelance
          required: false
          schema:
            type: string
            description: 'Search for customer categories by name'
            example: Freelance
        -
          in: query
          name: per_page
          description: 'Number of results per page (Min 25, Max 100)'
          example: 25
          required: false
          schema:
            type: integer
            description: 'Number of results per page (Min 25, Max 100)'
            example: 25
        -
          in: query
          name: page
          description: 'Page number'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page number'
            example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      name: Temporibus
                      created_at: '2024-10-21 07:55:32'
                      updated_at: '2024-10-21 07:55:32'
                    -
                      id: 1
                      name: Sequi
                      created_at: '2024-10-21 07:55:32'
                      updated_at: '2024-10-21 07:55:32'
                  links:
                    first: '/?page=1'
                    last: null
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: 1
                    path: /
                    per_page: 25
                    to: 2
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        name: Temporibus
                        created_at: '2024-10-21 07:55:32'
                        updated_at: '2024-10-21 07:55:32'
                      -
                        id: 1
                        name: Sequi
                        created_at: '2024-10-21 07:55:32'
                        updated_at: '2024-10-21 07:55:32'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: Temporibus
                        created_at:
                          type: string
                          example: '2024-10-21 07:55:32'
                        updated_at:
                          type: string
                          example: '2024-10-21 07:55:32'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: '/?page=1'
                      last:
                        type: string
                        example: null
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      path:
                        type: string
                        example: /
                      per_page:
                        type: integer
                        example: 25
                      to:
                        type: integer
                        example: 2
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Categories'
    post:
      summary: 'Create Customer Category'
      operationId: createCustomerCategory
      description: ''
      parameters: []
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: Culpa
                    created_at: '2024-10-21 07:55:32'
                    updated_at: '2024-10-21 07:55:32'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: Culpa
                      created_at:
                        type: string
                        example: '2024-10-21 07:55:32'
                      updated_at:
                        type: string
                        example: '2024-10-21 07:55:32'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Categories'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: Freelance
              required:
                - name
  '/api/v1/customer-categories/{id}':
    get:
      summary: 'Get Customer Category'
      operationId: getCustomerCategory
      description: ''
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: Quibusdam
                    created_at: '2024-10-21 07:55:32'
                    updated_at: '2024-10-21 07:55:32'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: Quibusdam
                      created_at:
                        type: string
                        example: '2024-10-21 07:55:32'
                      updated_at:
                        type: string
                        example: '2024-10-21 07:55:32'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Categories'
    put:
      summary: 'Update Customer Category'
      operationId: updateCustomerCategory
      description: ''
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: Blanditiis
                    created_at: '2024-10-21 07:55:32'
                    updated_at: '2024-10-21 07:55:32'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: Blanditiis
                      created_at:
                        type: string
                        example: '2024-10-21 07:55:32'
                      updated_at:
                        type: string
                        example: '2024-10-21 07:55:32'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Categories'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: Freelance
              required:
                - name
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the customer category.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/customer-categories-sync:
    put:
      summary: 'Sync Customer Categories'
      operationId: syncCustomerCategories
      description: ''
      parameters: []
      responses:
        204:
          description: 'Customer Categories Synced'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Categories'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                customer_id:
                  type: integer
                  description: ''
                  example: 1
                category_ids:
                  type: array
                  description: ''
                  example:
                    - 4
                  items:
                    type: integer
              required:
                - customer_id
tags:
  -
    name: Customers
    description: 'Customer Management API'
  -
    name: 'Customer Emails'
    description: 'Customer Email Management API'
  -
    name: 'Customer Phones'
    description: 'Customer Phone Management API'
  -
    name: 'Customer Addresses'
    description: 'Customer Address Management API'
  -
    name: 'Customer Categories'
    description: 'Customer Category Management API'
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: 'You can generate your token by logging in and clicking your name, and then <a href="/user/api-tokens"><b>API Tokens</b></a>.'
security:
  -
    default: []
