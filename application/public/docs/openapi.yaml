openapi: 3.0.3
info:
  title: 'Cardano Mercury: Invoice'
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8100'
paths:
  /api/v1/customers:
    get:
      summary: 'List Customers'
      operationId: listCustomers
      description: ''
      parameters:
        -
          in: query
          name: search
          description: 'Search for customers by name or tax number'
          example: 'John Doe'
          required: false
          schema:
            type: string
            description: 'Search for customers by name or tax number'
            example: 'John Doe'
        -
          in: query
          name: per_page
          description: 'Number of results per page (Min 25, Max 100)'
          example: 25
          required: false
          schema:
            type: integer
            description: 'Number of results per page (Min 25, Max 100)'
            example: 25
        -
          in: query
          name: page
          description: 'Page number'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page number'
            example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      name: 'George Collins'
                      tax_number: 01JAQ2VSK4AXAKAYW00M9QPR49
                      tax_rate: 17.5
                      categories:
                        -
                          id: 1
                          name: Nihil
                          created_at: '2024-10-21 08:24:56'
                          updated_at: '2024-10-21 08:24:56'
                      defaultEmail:
                        id: 1
                        name: 'Gerry Pollich'
                        address: alfred.beier@example.net
                        is_default: true
                        created_at: '2024-10-21 08:24:56'
                        updated_at: '2024-10-21 08:24:56'
                      defaultPhone:
                        id: 1
                        type: Office
                        name: 'Ellen Stracke IV'
                        number: '(484) 680-3281'
                        is_default: true
                        created_at: '2024-10-21 08:24:56'
                        updated_at: '2024-10-21 08:24:56'
                      defaultAddress:
                        id: 1
                        type: Shipping
                        name: 'Schoen, Zemlak and Hirthe'
                        line1: '107 Daisha Lane'
                        line2: null
                        city: 'North Claudia'
                        state: Nebraska
                        postal_code: '06262'
                        country: 'United States'
                        is_default: true
                        created_at: '2024-10-21 08:24:56'
                        updated_at: '2024-10-21 08:24:56'
                      created_at: '2024-10-21 08:24:56'
                      updated_at: '2024-10-21 08:24:56'
                    -
                      id: 1
                      name: 'Dr. Loyce Mosciski'
                      tax_number: 01JAQ2VSK5JAQ454T4P4XQDYKX
                      tax_rate: 17.5
                      categories:
                        -
                          id: 1
                          name: Quae
                          created_at: '2024-10-21 08:24:56'
                          updated_at: '2024-10-21 08:24:56'
                      defaultEmail:
                        id: 1
                        name: 'Miss Brooke Heaney'
                        address: oswald94@example.net
                        is_default: true
                        created_at: '2024-10-21 08:24:56'
                        updated_at: '2024-10-21 08:24:56'
                      defaultPhone:
                        id: 1
                        type: Mobile
                        name: 'Dr. Royal Feest'
                        number: 1-567-921-9902
                        is_default: true
                        created_at: '2024-10-21 08:24:56'
                        updated_at: '2024-10-21 08:24:56'
                      defaultAddress:
                        id: 1
                        type: Billing
                        name: 'Bailey, Herman and Lindgren'
                        line1: '30585 Hilma Meadow'
                        line2: null
                        city: Wehnerburgh
                        state: Missouri
                        postal_code: 94672-5874
                        country: 'United States'
                        is_default: true
                        created_at: '2024-10-21 08:24:56'
                        updated_at: '2024-10-21 08:24:56'
                      created_at: '2024-10-21 08:24:56'
                      updated_at: '2024-10-21 08:24:56'
                  links:
                    first: '/?page=1'
                    last: null
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: 1
                    path: /
                    per_page: 25
                    to: 2
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        name: 'George Collins'
                        tax_number: 01JAQ2VSK4AXAKAYW00M9QPR49
                        tax_rate: 17.5
                        categories:
                          -
                            id: 1
                            name: Nihil
                            created_at: '2024-10-21 08:24:56'
                            updated_at: '2024-10-21 08:24:56'
                        defaultEmail:
                          id: 1
                          name: 'Gerry Pollich'
                          address: alfred.beier@example.net
                          is_default: true
                          created_at: '2024-10-21 08:24:56'
                          updated_at: '2024-10-21 08:24:56'
                        defaultPhone:
                          id: 1
                          type: Office
                          name: 'Ellen Stracke IV'
                          number: '(484) 680-3281'
                          is_default: true
                          created_at: '2024-10-21 08:24:56'
                          updated_at: '2024-10-21 08:24:56'
                        defaultAddress:
                          id: 1
                          type: Shipping
                          name: 'Schoen, Zemlak and Hirthe'
                          line1: '107 Daisha Lane'
                          line2: null
                          city: 'North Claudia'
                          state: Nebraska
                          postal_code: '06262'
                          country: 'United States'
                          is_default: true
                          created_at: '2024-10-21 08:24:56'
                          updated_at: '2024-10-21 08:24:56'
                        created_at: '2024-10-21 08:24:56'
                        updated_at: '2024-10-21 08:24:56'
                      -
                        id: 1
                        name: 'Dr. Loyce Mosciski'
                        tax_number: 01JAQ2VSK5JAQ454T4P4XQDYKX
                        tax_rate: 17.5
                        categories:
                          -
                            id: 1
                            name: Quae
                            created_at: '2024-10-21 08:24:56'
                            updated_at: '2024-10-21 08:24:56'
                        defaultEmail:
                          id: 1
                          name: 'Miss Brooke Heaney'
                          address: oswald94@example.net
                          is_default: true
                          created_at: '2024-10-21 08:24:56'
                          updated_at: '2024-10-21 08:24:56'
                        defaultPhone:
                          id: 1
                          type: Mobile
                          name: 'Dr. Royal Feest'
                          number: 1-567-921-9902
                          is_default: true
                          created_at: '2024-10-21 08:24:56'
                          updated_at: '2024-10-21 08:24:56'
                        defaultAddress:
                          id: 1
                          type: Billing
                          name: 'Bailey, Herman and Lindgren'
                          line1: '30585 Hilma Meadow'
                          line2: null
                          city: Wehnerburgh
                          state: Missouri
                          postal_code: 94672-5874
                          country: 'United States'
                          is_default: true
                          created_at: '2024-10-21 08:24:56'
                          updated_at: '2024-10-21 08:24:56'
                        created_at: '2024-10-21 08:24:56'
                        updated_at: '2024-10-21 08:24:56'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: 'George Collins'
                        tax_number:
                          type: string
                          example: 01JAQ2VSK4AXAKAYW00M9QPR49
                        tax_rate:
                          type: number
                          example: 17.5
                        categories:
                          type: array
                          example:
                            -
                              id: 1
                              name: Nihil
                              created_at: '2024-10-21 08:24:56'
                              updated_at: '2024-10-21 08:24:56'
                          items:
                            type: object
                            properties:
                              id:
                                type: integer
                                example: 1
                              name:
                                type: string
                                example: Nihil
                              created_at:
                                type: string
                                example: '2024-10-21 08:24:56'
                              updated_at:
                                type: string
                                example: '2024-10-21 08:24:56'
                        defaultEmail:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 1
                            name:
                              type: string
                              example: 'Gerry Pollich'
                            address:
                              type: string
                              example: alfred.beier@example.net
                            is_default:
                              type: boolean
                              example: true
                            created_at:
                              type: string
                              example: '2024-10-21 08:24:56'
                            updated_at:
                              type: string
                              example: '2024-10-21 08:24:56'
                        defaultPhone:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 1
                            type:
                              type: string
                              example: Office
                            name:
                              type: string
                              example: 'Ellen Stracke IV'
                            number:
                              type: string
                              example: '(484) 680-3281'
                            is_default:
                              type: boolean
                              example: true
                            created_at:
                              type: string
                              example: '2024-10-21 08:24:56'
                            updated_at:
                              type: string
                              example: '2024-10-21 08:24:56'
                        defaultAddress:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 1
                            type:
                              type: string
                              example: Shipping
                            name:
                              type: string
                              example: 'Schoen, Zemlak and Hirthe'
                            line1:
                              type: string
                              example: '107 Daisha Lane'
                            line2:
                              type: string
                              example: null
                            city:
                              type: string
                              example: 'North Claudia'
                            state:
                              type: string
                              example: Nebraska
                            postal_code:
                              type: string
                              example: '06262'
                            country:
                              type: string
                              example: 'United States'
                            is_default:
                              type: boolean
                              example: true
                            created_at:
                              type: string
                              example: '2024-10-21 08:24:56'
                            updated_at:
                              type: string
                              example: '2024-10-21 08:24:56'
                        created_at:
                          type: string
                          example: '2024-10-21 08:24:56'
                        updated_at:
                          type: string
                          example: '2024-10-21 08:24:56'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: '/?page=1'
                      last:
                        type: string
                        example: null
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      path:
                        type: string
                        example: /
                      per_page:
                        type: integer
                        example: 25
                      to:
                        type: integer
                        example: 2
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - Customers
    post:
      summary: 'Create Customer'
      operationId: createCustomer
      description: ''
      parameters: []
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: 'Ulises Kub'
                    tax_number: 01JAQ2VSKD0ZPYWB6K1XE1QRXG
                    tax_rate: 17.5
                    categories: []
                    defaultEmail: null
                    defaultPhone: null
                    defaultAddress: null
                    created_at: '2024-10-21 08:24:56'
                    updated_at: '2024-10-21 08:24:56'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'Ulises Kub'
                      tax_number:
                        type: string
                        example: 01JAQ2VSKD0ZPYWB6K1XE1QRXG
                      tax_rate:
                        type: number
                        example: 17.5
                      categories:
                        type: array
                        example: []
                      defaultEmail:
                        type: string
                        example: null
                      defaultPhone:
                        type: string
                        example: null
                      defaultAddress:
                        type: string
                        example: null
                      created_at:
                        type: string
                        example: '2024-10-21 08:24:56'
                      updated_at:
                        type: string
                        example: '2024-10-21 08:24:56'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - Customers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'John Doe'
                tax_number:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: ABCD-1234
                tax_rate:
                  type: number
                  description: 'Must be between 0 and 100.'
                  example: 12.5
              required:
                - name
  '/api/v1/customers/{id}':
    get:
      summary: 'Get Customer'
      operationId: getCustomer
      description: ''
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: 'Heather Kohler'
                    tax_number: 01JAQ2VSKM3WCH9GK3ZZCZHX8D
                    tax_rate: 17.5
                    categories:
                      -
                        id: 1
                        name: Architecto
                        created_at: '2024-10-21 08:24:56'
                        updated_at: '2024-10-21 08:24:56'
                    defaultEmail:
                      id: 1
                      name: 'Tess Lindgren'
                      address: ephraim28@example.org
                      is_default: true
                      created_at: '2024-10-21 08:24:56'
                      updated_at: '2024-10-21 08:24:56'
                    defaultPhone:
                      id: 1
                      type: Home
                      name: 'Sigrid Schneider'
                      number: 681-416-0572
                      is_default: true
                      created_at: '2024-10-21 08:24:56'
                      updated_at: '2024-10-21 08:24:56'
                    defaultAddress:
                      id: 1
                      type: Billing
                      name: 'Cummerata LLC'
                      line1: '6301 Wiza Junction'
                      line2: null
                      city: Christaborough
                      state: Mississippi
                      postal_code: '96630'
                      country: 'United States'
                      is_default: true
                      created_at: '2024-10-21 08:24:56'
                      updated_at: '2024-10-21 08:24:56'
                    created_at: '2024-10-21 08:24:56'
                    updated_at: '2024-10-21 08:24:56'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'Heather Kohler'
                      tax_number:
                        type: string
                        example: 01JAQ2VSKM3WCH9GK3ZZCZHX8D
                      tax_rate:
                        type: number
                        example: 17.5
                      categories:
                        type: array
                        example:
                          -
                            id: 1
                            name: Architecto
                            created_at: '2024-10-21 08:24:56'
                            updated_at: '2024-10-21 08:24:56'
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 1
                            name:
                              type: string
                              example: Architecto
                            created_at:
                              type: string
                              example: '2024-10-21 08:24:56'
                            updated_at:
                              type: string
                              example: '2024-10-21 08:24:56'
                      defaultEmail:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                          name:
                            type: string
                            example: 'Tess Lindgren'
                          address:
                            type: string
                            example: ephraim28@example.org
                          is_default:
                            type: boolean
                            example: true
                          created_at:
                            type: string
                            example: '2024-10-21 08:24:56'
                          updated_at:
                            type: string
                            example: '2024-10-21 08:24:56'
                      defaultPhone:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                          type:
                            type: string
                            example: Home
                          name:
                            type: string
                            example: 'Sigrid Schneider'
                          number:
                            type: string
                            example: 681-416-0572
                          is_default:
                            type: boolean
                            example: true
                          created_at:
                            type: string
                            example: '2024-10-21 08:24:56'
                          updated_at:
                            type: string
                            example: '2024-10-21 08:24:56'
                      defaultAddress:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                          type:
                            type: string
                            example: Billing
                          name:
                            type: string
                            example: 'Cummerata LLC'
                          line1:
                            type: string
                            example: '6301 Wiza Junction'
                          line2:
                            type: string
                            example: null
                          city:
                            type: string
                            example: Christaborough
                          state:
                            type: string
                            example: Mississippi
                          postal_code:
                            type: string
                            example: '96630'
                          country:
                            type: string
                            example: 'United States'
                          is_default:
                            type: boolean
                            example: true
                          created_at:
                            type: string
                            example: '2024-10-21 08:24:56'
                          updated_at:
                            type: string
                            example: '2024-10-21 08:24:56'
                      created_at:
                        type: string
                        example: '2024-10-21 08:24:56'
                      updated_at:
                        type: string
                        example: '2024-10-21 08:24:56'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - Customers
    put:
      summary: 'Update Customer'
      operationId: updateCustomer
      description: ''
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: 'Tianna Grady'
                    tax_number: 01JAQ2VSKPAJ80M7XDTB4WVFXP
                    tax_rate: 17.5
                    categories:
                      -
                        id: 1
                        name: Aut
                        created_at: '2024-10-21 08:24:56'
                        updated_at: '2024-10-21 08:24:56'
                    defaultEmail:
                      id: 1
                      name: 'Prof. Maxime Weber'
                      address: nveum@example.com
                      is_default: true
                      created_at: '2024-10-21 08:24:56'
                      updated_at: '2024-10-21 08:24:56'
                    defaultPhone:
                      id: 1
                      type: Mobile
                      name: 'Prof. Donnie Reinger'
                      number: '+1 (351) 719-4377'
                      is_default: true
                      created_at: '2024-10-21 08:24:56'
                      updated_at: '2024-10-21 08:24:56'
                    defaultAddress:
                      id: 1
                      type: Shipping
                      name: Howe-Bernier
                      line1: '28907 Maribel Summit Apt. 190'
                      line2: null
                      city: 'New Flavietown'
                      state: Illinois
                      postal_code: '80710'
                      country: 'United States'
                      is_default: true
                      created_at: '2024-10-21 08:24:56'
                      updated_at: '2024-10-21 08:24:56'
                    created_at: '2024-10-21 08:24:56'
                    updated_at: '2024-10-21 08:24:56'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'Tianna Grady'
                      tax_number:
                        type: string
                        example: 01JAQ2VSKPAJ80M7XDTB4WVFXP
                      tax_rate:
                        type: number
                        example: 17.5
                      categories:
                        type: array
                        example:
                          -
                            id: 1
                            name: Aut
                            created_at: '2024-10-21 08:24:56'
                            updated_at: '2024-10-21 08:24:56'
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 1
                            name:
                              type: string
                              example: Aut
                            created_at:
                              type: string
                              example: '2024-10-21 08:24:56'
                            updated_at:
                              type: string
                              example: '2024-10-21 08:24:56'
                      defaultEmail:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                          name:
                            type: string
                            example: 'Prof. Maxime Weber'
                          address:
                            type: string
                            example: nveum@example.com
                          is_default:
                            type: boolean
                            example: true
                          created_at:
                            type: string
                            example: '2024-10-21 08:24:56'
                          updated_at:
                            type: string
                            example: '2024-10-21 08:24:56'
                      defaultPhone:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                          type:
                            type: string
                            example: Mobile
                          name:
                            type: string
                            example: 'Prof. Donnie Reinger'
                          number:
                            type: string
                            example: '+1 (351) 719-4377'
                          is_default:
                            type: boolean
                            example: true
                          created_at:
                            type: string
                            example: '2024-10-21 08:24:56'
                          updated_at:
                            type: string
                            example: '2024-10-21 08:24:56'
                      defaultAddress:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                          type:
                            type: string
                            example: Shipping
                          name:
                            type: string
                            example: Howe-Bernier
                          line1:
                            type: string
                            example: '28907 Maribel Summit Apt. 190'
                          line2:
                            type: string
                            example: null
                          city:
                            type: string
                            example: 'New Flavietown'
                          state:
                            type: string
                            example: Illinois
                          postal_code:
                            type: string
                            example: '80710'
                          country:
                            type: string
                            example: 'United States'
                          is_default:
                            type: boolean
                            example: true
                          created_at:
                            type: string
                            example: '2024-10-21 08:24:56'
                          updated_at:
                            type: string
                            example: '2024-10-21 08:24:56'
                      created_at:
                        type: string
                        example: '2024-10-21 08:24:56'
                      updated_at:
                        type: string
                        example: '2024-10-21 08:24:56'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - Customers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'John Doe'
                tax_number:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: ABCD-1234
                tax_rate:
                  type: number
                  description: 'Must be between 0 and 100.'
                  example: 12.5
              required:
                - name
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the customer.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/customers/{customer_id}/emails':
    get:
      summary: 'List Customer Emails'
      operationId: listCustomerEmails
      description: ''
      parameters:
        -
          in: query
          name: search
          description: 'Search for customer emails by name or address'
          example: john.doe@example.com
          required: false
          schema:
            type: string
            description: 'Search for customer emails by name or address'
            example: john.doe@example.com
        -
          in: query
          name: per_page
          description: 'Number of results per page (Min 25, Max 100)'
          example: 25
          required: false
          schema:
            type: integer
            description: 'Number of results per page (Min 25, Max 100)'
            example: 25
        -
          in: query
          name: page
          description: 'Page number'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page number'
            example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      name: 'Deshaun Dietrich'
                      address: moriah52@example.org
                      is_default: true
                      created_at: '2024-10-21 08:24:56'
                      updated_at: '2024-10-21 08:24:56'
                    -
                      id: 1
                      name: 'Mr. Jovany Christiansen Jr.'
                      address: gutkowski.ayana@example.com
                      is_default: true
                      created_at: '2024-10-21 08:24:56'
                      updated_at: '2024-10-21 08:24:56'
                  links:
                    first: '/?page=1'
                    last: null
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: 1
                    path: /
                    per_page: 25
                    to: 2
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        name: 'Deshaun Dietrich'
                        address: moriah52@example.org
                        is_default: true
                        created_at: '2024-10-21 08:24:56'
                        updated_at: '2024-10-21 08:24:56'
                      -
                        id: 1
                        name: 'Mr. Jovany Christiansen Jr.'
                        address: gutkowski.ayana@example.com
                        is_default: true
                        created_at: '2024-10-21 08:24:56'
                        updated_at: '2024-10-21 08:24:56'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: 'Deshaun Dietrich'
                        address:
                          type: string
                          example: moriah52@example.org
                        is_default:
                          type: boolean
                          example: true
                        created_at:
                          type: string
                          example: '2024-10-21 08:24:56'
                        updated_at:
                          type: string
                          example: '2024-10-21 08:24:56'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: '/?page=1'
                      last:
                        type: string
                        example: null
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      path:
                        type: string
                        example: /
                      per_page:
                        type: integer
                        example: 25
                      to:
                        type: integer
                        example: 2
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Emails'
    post:
      summary: 'Create Customer Email'
      operationId: createCustomerEmail
      description: ''
      parameters: []
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: 'Dee Ruecker MD'
                    address: shaylee.feil@example.com
                    is_default: true
                    created_at: '2024-10-21 08:24:56'
                    updated_at: '2024-10-21 08:24:56'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'Dee Ruecker MD'
                      address:
                        type: string
                        example: shaylee.feil@example.com
                      is_default:
                        type: boolean
                        example: true
                      created_at:
                        type: string
                        example: '2024-10-21 08:24:56'
                      updated_at:
                        type: string
                        example: '2024-10-21 08:24:56'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Emails'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'John Doe'
                address:
                  type: string
                  description: 'Must be a valid email address. Must be at least 3 characters. Must not be greater than 256 characters.'
                  example: john.doe@example.com
                is_default:
                  type: boolean
                  description: ''
                  example: false
              required:
                - name
                - address
    parameters:
      -
        in: path
        name: customer_id
        description: 'The ID of the customer.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/customers/{customer_id}/emails/{id}':
    get:
      summary: 'Get Customer Email'
      operationId: getCustomerEmail
      description: ''
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: 'Turner Botsford'
                    address: mwisoky@example.org
                    is_default: true
                    created_at: '2024-10-21 08:24:56'
                    updated_at: '2024-10-21 08:24:56'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'Turner Botsford'
                      address:
                        type: string
                        example: mwisoky@example.org
                      is_default:
                        type: boolean
                        example: true
                      created_at:
                        type: string
                        example: '2024-10-21 08:24:56'
                      updated_at:
                        type: string
                        example: '2024-10-21 08:24:56'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Emails'
    put:
      summary: 'Update Customer Email'
      operationId: updateCustomerEmail
      description: ''
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: 'Miss Camille Bergstrom'
                    address: rhaley@example.com
                    is_default: true
                    created_at: '2024-10-21 08:24:56'
                    updated_at: '2024-10-21 08:24:56'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'Miss Camille Bergstrom'
                      address:
                        type: string
                        example: rhaley@example.com
                      is_default:
                        type: boolean
                        example: true
                      created_at:
                        type: string
                        example: '2024-10-21 08:24:56'
                      updated_at:
                        type: string
                        example: '2024-10-21 08:24:56'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Emails'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'John Doe'
                address:
                  type: string
                  description: 'Must be a valid email address. Must be at least 3 characters. Must not be greater than 256 characters.'
                  example: john.doe@example.com
                is_default:
                  type: boolean
                  description: ''
                  example: true
              required:
                - name
                - address
    parameters:
      -
        in: path
        name: customer_id
        description: 'The ID of the customer.'
        example: 1
        required: true
        schema:
          type: integer
      -
        in: path
        name: id
        description: 'The ID of the email.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/customers/{customer_id}/phones':
    get:
      summary: 'List Customer Phones'
      operationId: listCustomerPhones
      description: ''
      parameters:
        -
          in: query
          name: type
          description: ''
          example: Mobile
          required: false
          schema:
            type: string
            description: ''
            example: Mobile
            enum:
              - Home
              - Office
              - Mobile
        -
          in: query
          name: search
          description: 'Search for customer phones by name or number'
          example: '0123456789'
          required: false
          schema:
            type: string
            description: 'Search for customer phones by name or number'
            example: '0123456789'
        -
          in: query
          name: per_page
          description: 'Number of results per page (Min 25, Max 100)'
          example: 25
          required: false
          schema:
            type: integer
            description: 'Number of results per page (Min 25, Max 100)'
            example: 25
        -
          in: query
          name: page
          description: 'Page number'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page number'
            example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      type: Home
                      name: 'Zelda Lockman'
                      number: 781-899-2375
                      is_default: true
                      created_at: '2024-10-21 08:24:56'
                      updated_at: '2024-10-21 08:24:56'
                    -
                      id: 1
                      type: Mobile
                      name: 'Serenity Baumbach'
                      number: +1-283-532-7170
                      is_default: true
                      created_at: '2024-10-21 08:24:56'
                      updated_at: '2024-10-21 08:24:56'
                  links:
                    first: '/?page=1'
                    last: null
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: 1
                    path: /
                    per_page: 25
                    to: 2
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        type: Home
                        name: 'Zelda Lockman'
                        number: 781-899-2375
                        is_default: true
                        created_at: '2024-10-21 08:24:56'
                        updated_at: '2024-10-21 08:24:56'
                      -
                        id: 1
                        type: Mobile
                        name: 'Serenity Baumbach'
                        number: +1-283-532-7170
                        is_default: true
                        created_at: '2024-10-21 08:24:56'
                        updated_at: '2024-10-21 08:24:56'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        type:
                          type: string
                          example: Home
                        name:
                          type: string
                          example: 'Zelda Lockman'
                        number:
                          type: string
                          example: 781-899-2375
                        is_default:
                          type: boolean
                          example: true
                        created_at:
                          type: string
                          example: '2024-10-21 08:24:56'
                        updated_at:
                          type: string
                          example: '2024-10-21 08:24:56'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: '/?page=1'
                      last:
                        type: string
                        example: null
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      path:
                        type: string
                        example: /
                      per_page:
                        type: integer
                        example: 25
                      to:
                        type: integer
                        example: 2
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Phones'
    post:
      summary: 'Create Customer Phone'
      operationId: createCustomerPhone
      description: ''
      parameters: []
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    type: Mobile
                    name: 'Prof. Camille Von'
                    number: 240.690.1668
                    is_default: true
                    created_at: '2024-10-21 08:24:56'
                    updated_at: '2024-10-21 08:24:56'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      type:
                        type: string
                        example: Mobile
                      name:
                        type: string
                        example: 'Prof. Camille Von'
                      number:
                        type: string
                        example: 240.690.1668
                      is_default:
                        type: boolean
                        example: true
                      created_at:
                        type: string
                        example: '2024-10-21 08:24:56'
                      updated_at:
                        type: string
                        example: '2024-10-21 08:24:56'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Phones'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: ''
                  example: Home
                  enum:
                    - Home
                    - Office
                    - Mobile
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'John Doe'
                number:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 32 characters.'
                  example: +1-956-745-2290
                is_default:
                  type: boolean
                  description: ''
                  example: false
              required:
                - type
                - name
                - number
    parameters:
      -
        in: path
        name: customer_id
        description: 'The ID of the customer.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/customers/{customer_id}/phones/{id}':
    get:
      summary: 'Get Customer Phone'
      operationId: getCustomerPhone
      description: ''
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    type: Home
                    name: 'Bella Treutel'
                    number: +1-325-913-0688
                    is_default: true
                    created_at: '2024-10-21 08:24:56'
                    updated_at: '2024-10-21 08:24:56'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      type:
                        type: string
                        example: Home
                      name:
                        type: string
                        example: 'Bella Treutel'
                      number:
                        type: string
                        example: +1-325-913-0688
                      is_default:
                        type: boolean
                        example: true
                      created_at:
                        type: string
                        example: '2024-10-21 08:24:56'
                      updated_at:
                        type: string
                        example: '2024-10-21 08:24:56'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Phones'
    put:
      summary: 'Update Customer Phone'
      operationId: updateCustomerPhone
      description: ''
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    type: Mobile
                    name: 'Kasey Prosacco'
                    number: 408-386-1214
                    is_default: true
                    created_at: '2024-10-21 08:24:56'
                    updated_at: '2024-10-21 08:24:56'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      type:
                        type: string
                        example: Mobile
                      name:
                        type: string
                        example: 'Kasey Prosacco'
                      number:
                        type: string
                        example: 408-386-1214
                      is_default:
                        type: boolean
                        example: true
                      created_at:
                        type: string
                        example: '2024-10-21 08:24:56'
                      updated_at:
                        type: string
                        example: '2024-10-21 08:24:56'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Phones'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: ''
                  example: Home
                  enum:
                    - Home
                    - Office
                    - Mobile
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'John Doe'
                number:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 32 characters.'
                  example: +1-956-745-2290
                is_default:
                  type: boolean
                  description: ''
                  example: false
              required:
                - type
                - name
                - number
    parameters:
      -
        in: path
        name: customer_id
        description: 'The ID of the customer.'
        example: 1
        required: true
        schema:
          type: integer
      -
        in: path
        name: id
        description: 'The ID of the phone.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/customers/{customer_id}/addresses':
    get:
      summary: 'List Customer Addresses'
      operationId: listCustomerAddresses
      description: ''
      parameters:
        -
          in: query
          name: type
          description: ''
          example: Billing
          required: false
          schema:
            type: string
            description: ''
            example: Billing
            enum:
              - Billing
              - Shipping
        -
          in: query
          name: search
          description: 'Search for customer addresses by name or any address fields'
          example: '25 Brookfield Road'
          required: false
          schema:
            type: string
            description: 'Search for customer addresses by name or any address fields'
            example: '25 Brookfield Road'
        -
          in: query
          name: per_page
          description: 'Number of results per page (Min 25, Max 100)'
          example: 25
          required: false
          schema:
            type: integer
            description: 'Number of results per page (Min 25, Max 100)'
            example: 25
        -
          in: query
          name: page
          description: 'Page number'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page number'
            example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      type: Shipping
                      name: "O'Conner, Fay and Medhurst"
                      line1: '684 Swift Land Apt. 092'
                      line2: null
                      city: Bednarfort
                      state: Idaho
                      postal_code: 55167-5346
                      country: 'United States'
                      is_default: true
                      created_at: '2024-10-21 08:24:56'
                      updated_at: '2024-10-21 08:24:56'
                    -
                      id: 1
                      type: Billing
                      name: Hettinger-Roberts
                      line1: '30719 Delia Course Suite 128'
                      line2: null
                      city: Jenningsfort
                      state: Minnesota
                      postal_code: '32741'
                      country: 'United States'
                      is_default: true
                      created_at: '2024-10-21 08:24:56'
                      updated_at: '2024-10-21 08:24:56'
                  links:
                    first: '/?page=1'
                    last: null
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: 1
                    path: /
                    per_page: 25
                    to: 2
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        type: Shipping
                        name: "O'Conner, Fay and Medhurst"
                        line1: '684 Swift Land Apt. 092'
                        line2: null
                        city: Bednarfort
                        state: Idaho
                        postal_code: 55167-5346
                        country: 'United States'
                        is_default: true
                        created_at: '2024-10-21 08:24:56'
                        updated_at: '2024-10-21 08:24:56'
                      -
                        id: 1
                        type: Billing
                        name: Hettinger-Roberts
                        line1: '30719 Delia Course Suite 128'
                        line2: null
                        city: Jenningsfort
                        state: Minnesota
                        postal_code: '32741'
                        country: 'United States'
                        is_default: true
                        created_at: '2024-10-21 08:24:56'
                        updated_at: '2024-10-21 08:24:56'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        type:
                          type: string
                          example: Shipping
                        name:
                          type: string
                          example: "O'Conner, Fay and Medhurst"
                        line1:
                          type: string
                          example: '684 Swift Land Apt. 092'
                        line2:
                          type: string
                          example: null
                        city:
                          type: string
                          example: Bednarfort
                        state:
                          type: string
                          example: Idaho
                        postal_code:
                          type: string
                          example: 55167-5346
                        country:
                          type: string
                          example: 'United States'
                        is_default:
                          type: boolean
                          example: true
                        created_at:
                          type: string
                          example: '2024-10-21 08:24:56'
                        updated_at:
                          type: string
                          example: '2024-10-21 08:24:56'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: '/?page=1'
                      last:
                        type: string
                        example: null
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      path:
                        type: string
                        example: /
                      per_page:
                        type: integer
                        example: 25
                      to:
                        type: integer
                        example: 2
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Addresses'
    post:
      summary: 'Create Customer Address'
      operationId: createCustomerAddress
      description: ''
      parameters: []
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    type: Billing
                    name: McClure-Dicki
                    line1: '193 Hazle Path Suite 183'
                    line2: null
                    city: 'New Caitlyn'
                    state: 'North Carolina'
                    postal_code: '71973'
                    country: 'United States'
                    is_default: true
                    created_at: '2024-10-21 08:24:56'
                    updated_at: '2024-10-21 08:24:56'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      type:
                        type: string
                        example: Billing
                      name:
                        type: string
                        example: McClure-Dicki
                      line1:
                        type: string
                        example: '193 Hazle Path Suite 183'
                      line2:
                        type: string
                        example: null
                      city:
                        type: string
                        example: 'New Caitlyn'
                      state:
                        type: string
                        example: 'North Carolina'
                      postal_code:
                        type: string
                        example: '71973'
                      country:
                        type: string
                        example: 'United States'
                      is_default:
                        type: boolean
                        example: true
                      created_at:
                        type: string
                        example: '2024-10-21 08:24:56'
                      updated_at:
                        type: string
                        example: '2024-10-21 08:24:56'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Addresses'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: ''
                  example: Shipping
                  enum:
                    - Billing
                    - Shipping
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'John Doe'
                line1:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: '2592 Jada Key'
                line2:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'Apartment 504'
                city:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'South Josh'
                state:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: Kentucky
                postal_code:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 62249-8453
                country:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'United States'
                is_default:
                  type: boolean
                  description: ''
                  example: true
              required:
                - type
                - name
                - line1
                - city
                - postal_code
                - country
    parameters:
      -
        in: path
        name: customer_id
        description: 'The ID of the customer.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/customers/{customer_id}/addresses/{id}':
    get:
      summary: 'Get Customer Address'
      operationId: getCustomerAddress
      description: ''
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    type: Billing
                    name: 'Cole, Ernser and Hagenes'
                    line1: '7798 Ransom Inlet Apt. 404'
                    line2: null
                    city: 'North Percival'
                    state: 'New Hampshire'
                    postal_code: 44761-9149
                    country: 'United States'
                    is_default: true
                    created_at: '2024-10-21 08:24:56'
                    updated_at: '2024-10-21 08:24:56'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      type:
                        type: string
                        example: Billing
                      name:
                        type: string
                        example: 'Cole, Ernser and Hagenes'
                      line1:
                        type: string
                        example: '7798 Ransom Inlet Apt. 404'
                      line2:
                        type: string
                        example: null
                      city:
                        type: string
                        example: 'North Percival'
                      state:
                        type: string
                        example: 'New Hampshire'
                      postal_code:
                        type: string
                        example: 44761-9149
                      country:
                        type: string
                        example: 'United States'
                      is_default:
                        type: boolean
                        example: true
                      created_at:
                        type: string
                        example: '2024-10-21 08:24:56'
                      updated_at:
                        type: string
                        example: '2024-10-21 08:24:56'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Addresses'
    put:
      summary: 'Update Customer Address'
      operationId: updateCustomerAddress
      description: ''
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    type: Billing
                    name: Hansen-Williamson
                    line1: '79160 Stanford Overpass Suite 255'
                    line2: null
                    city: 'East Talia'
                    state: Connecticut
                    postal_code: '67517'
                    country: 'United States'
                    is_default: true
                    created_at: '2024-10-21 08:24:56'
                    updated_at: '2024-10-21 08:24:56'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      type:
                        type: string
                        example: Billing
                      name:
                        type: string
                        example: Hansen-Williamson
                      line1:
                        type: string
                        example: '79160 Stanford Overpass Suite 255'
                      line2:
                        type: string
                        example: null
                      city:
                        type: string
                        example: 'East Talia'
                      state:
                        type: string
                        example: Connecticut
                      postal_code:
                        type: string
                        example: '67517'
                      country:
                        type: string
                        example: 'United States'
                      is_default:
                        type: boolean
                        example: true
                      created_at:
                        type: string
                        example: '2024-10-21 08:24:56'
                      updated_at:
                        type: string
                        example: '2024-10-21 08:24:56'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Addresses'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: ''
                  example: Shipping
                  enum:
                    - Billing
                    - Shipping
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'John Doe'
                line1:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: '2592 Jada Key'
                line2:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'Apartment 504'
                city:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'South Josh'
                state:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: Kentucky
                postal_code:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 62249-8453
                country:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'United States'
                is_default:
                  type: boolean
                  description: ''
                  example: true
              required:
                - type
                - name
                - line1
                - city
                - postal_code
                - country
    parameters:
      -
        in: path
        name: customer_id
        description: 'The ID of the customer.'
        example: 1
        required: true
        schema:
          type: integer
      -
        in: path
        name: id
        description: 'The ID of the address.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/customer-categories:
    get:
      summary: 'List Customer Categories'
      operationId: listCustomerCategories
      description: ''
      parameters:
        -
          in: query
          name: search
          description: 'Search for customer categories by name'
          example: Freelance
          required: false
          schema:
            type: string
            description: 'Search for customer categories by name'
            example: Freelance
        -
          in: query
          name: per_page
          description: 'Number of results per page (Min 25, Max 100)'
          example: 25
          required: false
          schema:
            type: integer
            description: 'Number of results per page (Min 25, Max 100)'
            example: 25
        -
          in: query
          name: page
          description: 'Page number'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page number'
            example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      name: Voluptas
                      created_at: '2024-10-21 08:24:56'
                      updated_at: '2024-10-21 08:24:56'
                    -
                      id: 1
                      name: Commodi
                      created_at: '2024-10-21 08:24:56'
                      updated_at: '2024-10-21 08:24:56'
                  links:
                    first: '/?page=1'
                    last: null
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: 1
                    path: /
                    per_page: 25
                    to: 2
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        name: Voluptas
                        created_at: '2024-10-21 08:24:56'
                        updated_at: '2024-10-21 08:24:56'
                      -
                        id: 1
                        name: Commodi
                        created_at: '2024-10-21 08:24:56'
                        updated_at: '2024-10-21 08:24:56'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: Voluptas
                        created_at:
                          type: string
                          example: '2024-10-21 08:24:56'
                        updated_at:
                          type: string
                          example: '2024-10-21 08:24:56'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: '/?page=1'
                      last:
                        type: string
                        example: null
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      path:
                        type: string
                        example: /
                      per_page:
                        type: integer
                        example: 25
                      to:
                        type: integer
                        example: 2
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Categories'
    post:
      summary: 'Create Customer Category'
      operationId: createCustomerCategory
      description: ''
      parameters: []
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: Sint
                    created_at: '2024-10-21 08:24:56'
                    updated_at: '2024-10-21 08:24:56'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: Sint
                      created_at:
                        type: string
                        example: '2024-10-21 08:24:56'
                      updated_at:
                        type: string
                        example: '2024-10-21 08:24:56'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Categories'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: Freelance
              required:
                - name
  '/api/v1/customer-categories/{id}':
    get:
      summary: 'Get Customer Category'
      operationId: getCustomerCategory
      description: ''
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: Quaerat
                    created_at: '2024-10-21 08:24:56'
                    updated_at: '2024-10-21 08:24:56'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: Quaerat
                      created_at:
                        type: string
                        example: '2024-10-21 08:24:56'
                      updated_at:
                        type: string
                        example: '2024-10-21 08:24:56'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Categories'
    put:
      summary: 'Update Customer Category'
      operationId: updateCustomerCategory
      description: ''
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: Impedit
                    created_at: '2024-10-21 08:24:56'
                    updated_at: '2024-10-21 08:24:56'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: Impedit
                      created_at:
                        type: string
                        example: '2024-10-21 08:24:56'
                      updated_at:
                        type: string
                        example: '2024-10-21 08:24:56'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Categories'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: Freelance
              required:
                - name
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the customer category.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/customer-categories-sync:
    put:
      summary: 'Sync Customer Categories'
      operationId: syncCustomerCategories
      description: ''
      parameters: []
      responses:
        204:
          description: 'Customer Categories Synced'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Categories'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                customer_id:
                  type: integer
                  description: ''
                  example: 1
                category_ids:
                  type: array
                  description: ''
                  example:
                    - 15
                  items:
                    type: integer
              required:
                - customer_id
  /api/v1/products:
    get:
      summary: 'List Products'
      operationId: listProducts
      description: ''
      parameters:
        -
          in: query
          name: search
          description: 'Search for products by name or sku'
          example: 'Website Hosting'
          required: false
          schema:
            type: string
            description: 'Search for products by name or sku'
            example: 'Website Hosting'
        -
          in: query
          name: per_page
          description: 'Number of results per page (Min 25, Max 100)'
          example: 25
          required: false
          schema:
            type: integer
            description: 'Number of results per page (Min 25, Max 100)'
            example: 25
        -
          in: query
          name: page
          description: 'Page number'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page number'
            example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      name: 'Dolor Quaerat Est'
                      sku: MUTL2LWJYYJPR9IJ
                      description: 'Facilis doloribus at qui. Rerum corrupti dolores illum reiciendis officia. Ducimus ut iste eligendi possimus ad dolorem.'
                      unit_type: gram
                      unit_price: 20.37
                      supplier: Bauch-Heidenreich
                      created_at: '2024-10-21 08:24:56'
                      updated_at: '2024-10-21 08:24:56'
                    -
                      id: 1
                      name: 'Qui Magnam Aperiam'
                      sku: LOZJQEIWRQMNO8MC
                      description: 'Et enim iure magnam delectus aut. Cumque sunt voluptate explicabo veritatis nostrum ut sit consequatur. Omnis dolorem pariatur molestiae nesciunt fugiat.'
                      unit_type: cm
                      unit_price: 43.84
                      supplier: 'Carroll Group'
                      created_at: '2024-10-21 08:24:56'
                      updated_at: '2024-10-21 08:24:56'
                  links:
                    first: '/?page=1'
                    last: null
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: 1
                    path: /
                    per_page: 25
                    to: 2
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        name: 'Dolor Quaerat Est'
                        sku: MUTL2LWJYYJPR9IJ
                        description: 'Facilis doloribus at qui. Rerum corrupti dolores illum reiciendis officia. Ducimus ut iste eligendi possimus ad dolorem.'
                        unit_type: gram
                        unit_price: 20.37
                        supplier: Bauch-Heidenreich
                        created_at: '2024-10-21 08:24:56'
                        updated_at: '2024-10-21 08:24:56'
                      -
                        id: 1
                        name: 'Qui Magnam Aperiam'
                        sku: LOZJQEIWRQMNO8MC
                        description: 'Et enim iure magnam delectus aut. Cumque sunt voluptate explicabo veritatis nostrum ut sit consequatur. Omnis dolorem pariatur molestiae nesciunt fugiat.'
                        unit_type: cm
                        unit_price: 43.84
                        supplier: 'Carroll Group'
                        created_at: '2024-10-21 08:24:56'
                        updated_at: '2024-10-21 08:24:56'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: 'Dolor Quaerat Est'
                        sku:
                          type: string
                          example: MUTL2LWJYYJPR9IJ
                        description:
                          type: string
                          example: 'Facilis doloribus at qui. Rerum corrupti dolores illum reiciendis officia. Ducimus ut iste eligendi possimus ad dolorem.'
                        unit_type:
                          type: string
                          example: gram
                        unit_price:
                          type: number
                          example: 20.37
                        supplier:
                          type: string
                          example: Bauch-Heidenreich
                        created_at:
                          type: string
                          example: '2024-10-21 08:24:56'
                        updated_at:
                          type: string
                          example: '2024-10-21 08:24:56'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: '/?page=1'
                      last:
                        type: string
                        example: null
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      path:
                        type: string
                        example: /
                      per_page:
                        type: integer
                        example: 25
                      to:
                        type: integer
                        example: 2
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - Products
    post:
      summary: 'Create Product'
      operationId: createProduct
      description: ''
      parameters: []
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: 'Corporis Necessitatibus Adipisci'
                    sku: VKSLDHZFCZDDKP8S
                    description: 'Ut vitae nihil voluptas sunt aut pariatur. Porro error possimus amet. Necessitatibus ut veniam nisi voluptatem.'
                    unit_type: cm
                    unit_price: 12.46
                    supplier: 'Jacobs, Hansen and Raynor'
                    created_at: '2024-10-21 08:24:56'
                    updated_at: '2024-10-21 08:24:56'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'Corporis Necessitatibus Adipisci'
                      sku:
                        type: string
                        example: VKSLDHZFCZDDKP8S
                      description:
                        type: string
                        example: 'Ut vitae nihil voluptas sunt aut pariatur. Porro error possimus amet. Necessitatibus ut veniam nisi voluptatem.'
                      unit_type:
                        type: string
                        example: cm
                      unit_price:
                        type: number
                        example: 12.46
                      supplier:
                        type: string
                        example: 'Jacobs, Hansen and Raynor'
                      created_at:
                        type: string
                        example: '2024-10-21 08:24:56'
                      updated_at:
                        type: string
                        example: '2024-10-21 08:24:56'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - Products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'Website Hosting'
                sku:
                  type: string
                  description: 'Must not be greater than 32 characters.'
                  example: WH-001
                description:
                  type: string
                  description: ''
                  example: 'Standard website hosting on shared server'
                unit_type:
                  type: string
                  description: 'Must not be greater than 16 characters.'
                  example: Each
                unit_price:
                  type: number
                  description: 'Must be at least 0.'
                  example: 12.99
                supplier:
                  type: string
                  description: 'Must not be greater than 64 characters.'
                  example: 'Drip Dropz Ltd'
              required:
                - name
                - unit_price
  '/api/v1/products/{id}':
    get:
      summary: 'Get Product'
      operationId: getProduct
      description: ''
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: 'Vel Repellendus Eos'
                    sku: IWMBQY2C98W7S9CT
                    description: 'Nesciunt rerum exercitationem consequatur delectus. Quaerat est repellat quis eos. Qui omnis quae ea recusandae molestias aut quis.'
                    unit_type: ounce
                    unit_price: 35.41
                    supplier: Gorczany-Leffler
                    created_at: '2024-10-21 08:24:56'
                    updated_at: '2024-10-21 08:24:56'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'Vel Repellendus Eos'
                      sku:
                        type: string
                        example: IWMBQY2C98W7S9CT
                      description:
                        type: string
                        example: 'Nesciunt rerum exercitationem consequatur delectus. Quaerat est repellat quis eos. Qui omnis quae ea recusandae molestias aut quis.'
                      unit_type:
                        type: string
                        example: ounce
                      unit_price:
                        type: number
                        example: 35.41
                      supplier:
                        type: string
                        example: Gorczany-Leffler
                      created_at:
                        type: string
                        example: '2024-10-21 08:24:56'
                      updated_at:
                        type: string
                        example: '2024-10-21 08:24:56'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - Products
    put:
      summary: 'Update Product'
      operationId: updateProduct
      description: ''
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: 'Sed Veniam Quidem'
                    sku: IVPQYE2OYVPCOYQ4
                    description: 'Non labore consequuntur iusto voluptatum ducimus commodi cum. Et occaecati aut soluta ut quos quis dolor. Quas et officiis tempore aspernatur incidunt dolorum cumque.'
                    unit_type: kg
                    unit_price: 24.98
                    supplier: 'Gerhold PLC'
                    created_at: '2024-10-21 08:24:56'
                    updated_at: '2024-10-21 08:24:56'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'Sed Veniam Quidem'
                      sku:
                        type: string
                        example: IVPQYE2OYVPCOYQ4
                      description:
                        type: string
                        example: 'Non labore consequuntur iusto voluptatum ducimus commodi cum. Et occaecati aut soluta ut quos quis dolor. Quas et officiis tempore aspernatur incidunt dolorum cumque.'
                      unit_type:
                        type: string
                        example: kg
                      unit_price:
                        type: number
                        example: 24.98
                      supplier:
                        type: string
                        example: 'Gerhold PLC'
                      created_at:
                        type: string
                        example: '2024-10-21 08:24:56'
                      updated_at:
                        type: string
                        example: '2024-10-21 08:24:56'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - Products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'Website Hosting'
                sku:
                  type: string
                  description: 'Must not be greater than 32 characters.'
                  example: WH-001
                description:
                  type: string
                  description: ''
                  example: 'Standard website hosting on shared server'
                unit_type:
                  type: string
                  description: 'Must not be greater than 16 characters.'
                  example: Each
                unit_price:
                  type: number
                  description: 'Must be at least 0.'
                  example: 12.99
                supplier:
                  type: string
                  description: 'Must not be greater than 64 characters.'
                  example: 'Drip Dropz Ltd'
              required:
                - name
                - unit_price
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the product.'
        example: 1
        required: true
        schema:
          type: integer
tags:
  -
    name: Customers
    description: 'Customer Management API'
  -
    name: 'Customer Emails'
    description: 'Customer Email Management API'
  -
    name: 'Customer Phones'
    description: 'Customer Phone Management API'
  -
    name: 'Customer Addresses'
    description: 'Customer Address Management API'
  -
    name: 'Customer Categories'
    description: 'Customer Category Management API'
  -
    name: Products
    description: 'Product Management API'
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: 'You can generate your token by logging in and clicking your name, and then <a href="/user/api-tokens"><b>API Tokens</b></a>.'
security:
  -
    default: []
