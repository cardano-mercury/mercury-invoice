openapi: 3.0.3
info:
  title: 'Cardano Mercury: Invoice'
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8100'
paths:
  /api/v1/customers:
    get:
      summary: 'List Customers'
      operationId: listCustomers
      description: ''
      parameters:
        -
          in: query
          name: search
          description: 'Search for customers by name or tax number'
          example: 'John Doe'
          required: false
          schema:
            type: string
            description: 'Search for customers by name or tax number'
            example: 'John Doe'
        -
          in: query
          name: per_page
          description: 'Number of results per page (Min 25, Max 100)'
          example: 25
          required: false
          schema:
            type: integer
            description: 'Number of results per page (Min 25, Max 100)'
            example: 25
        -
          in: query
          name: page
          description: 'Page number'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page number'
            example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      name: 'Ms. Allie Schultz'
                      tax_number: 01JARQKS544V00MQJ86ERF99YW
                      tax_rate: 17.5
                      categories:
                        -
                          id: 1
                          name: Deleniti
                          created_at: '2024-10-21 23:46:48'
                          updated_at: '2024-10-21 23:46:48'
                      defaultEmail:
                        id: 1
                        name: 'Ernie Ledner V'
                        address: bkemmer@example.net
                        is_default: true
                        created_at: '2024-10-21 23:46:48'
                        updated_at: '2024-10-21 23:46:48'
                      defaultPhone:
                        id: 1
                        type: Mobile
                        name: 'America Wolff'
                        number: +1-301-558-0232
                        is_default: true
                        created_at: '2024-10-21 23:46:48'
                        updated_at: '2024-10-21 23:46:48'
                      defaultAddress:
                        id: 1
                        type: Shipping
                        name: Kuphal-Daugherty
                        line1: '453 Martine Green Apt. 829'
                        line2: null
                        city: 'South Nyashire'
                        state: Kansas
                        postal_code: 82376-1423
                        country: 'United States'
                        is_default: true
                        created_at: '2024-10-21 23:46:48'
                        updated_at: '2024-10-21 23:46:48'
                      created_at: '2024-10-21 23:46:48'
                      updated_at: '2024-10-21 23:46:48'
                    -
                      id: 1
                      name: 'Dr. Ford Brown'
                      tax_number: 01JARQKS544V00MQJ86ERF99YX
                      tax_rate: 17.5
                      categories:
                        -
                          id: 1
                          name: Et
                          created_at: '2024-10-21 23:46:48'
                          updated_at: '2024-10-21 23:46:48'
                      defaultEmail:
                        id: 1
                        name: 'Britney Quigley IV'
                        address: orion.cummerata@example.org
                        is_default: true
                        created_at: '2024-10-21 23:46:48'
                        updated_at: '2024-10-21 23:46:48'
                      defaultPhone:
                        id: 1
                        type: Mobile
                        name: 'Rahsaan Bergstrom'
                        number: +1-986-583-1566
                        is_default: true
                        created_at: '2024-10-21 23:46:48'
                        updated_at: '2024-10-21 23:46:48'
                      defaultAddress:
                        id: 1
                        type: Shipping
                        name: 'Cole, Carter and Donnelly'
                        line1: '91935 Grace Trace'
                        line2: null
                        city: VonRuedenfort
                        state: Utah
                        postal_code: 50109-3316
                        country: 'United States'
                        is_default: true
                        created_at: '2024-10-21 23:46:48'
                        updated_at: '2024-10-21 23:46:48'
                      created_at: '2024-10-21 23:46:48'
                      updated_at: '2024-10-21 23:46:48'
                  links:
                    first: '/?page=1'
                    last: null
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: 1
                    path: /
                    per_page: 25
                    to: 2
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        name: 'Ms. Allie Schultz'
                        tax_number: 01JARQKS544V00MQJ86ERF99YW
                        tax_rate: 17.5
                        categories:
                          -
                            id: 1
                            name: Deleniti
                            created_at: '2024-10-21 23:46:48'
                            updated_at: '2024-10-21 23:46:48'
                        defaultEmail:
                          id: 1
                          name: 'Ernie Ledner V'
                          address: bkemmer@example.net
                          is_default: true
                          created_at: '2024-10-21 23:46:48'
                          updated_at: '2024-10-21 23:46:48'
                        defaultPhone:
                          id: 1
                          type: Mobile
                          name: 'America Wolff'
                          number: +1-301-558-0232
                          is_default: true
                          created_at: '2024-10-21 23:46:48'
                          updated_at: '2024-10-21 23:46:48'
                        defaultAddress:
                          id: 1
                          type: Shipping
                          name: Kuphal-Daugherty
                          line1: '453 Martine Green Apt. 829'
                          line2: null
                          city: 'South Nyashire'
                          state: Kansas
                          postal_code: 82376-1423
                          country: 'United States'
                          is_default: true
                          created_at: '2024-10-21 23:46:48'
                          updated_at: '2024-10-21 23:46:48'
                        created_at: '2024-10-21 23:46:48'
                        updated_at: '2024-10-21 23:46:48'
                      -
                        id: 1
                        name: 'Dr. Ford Brown'
                        tax_number: 01JARQKS544V00MQJ86ERF99YX
                        tax_rate: 17.5
                        categories:
                          -
                            id: 1
                            name: Et
                            created_at: '2024-10-21 23:46:48'
                            updated_at: '2024-10-21 23:46:48'
                        defaultEmail:
                          id: 1
                          name: 'Britney Quigley IV'
                          address: orion.cummerata@example.org
                          is_default: true
                          created_at: '2024-10-21 23:46:48'
                          updated_at: '2024-10-21 23:46:48'
                        defaultPhone:
                          id: 1
                          type: Mobile
                          name: 'Rahsaan Bergstrom'
                          number: +1-986-583-1566
                          is_default: true
                          created_at: '2024-10-21 23:46:48'
                          updated_at: '2024-10-21 23:46:48'
                        defaultAddress:
                          id: 1
                          type: Shipping
                          name: 'Cole, Carter and Donnelly'
                          line1: '91935 Grace Trace'
                          line2: null
                          city: VonRuedenfort
                          state: Utah
                          postal_code: 50109-3316
                          country: 'United States'
                          is_default: true
                          created_at: '2024-10-21 23:46:48'
                          updated_at: '2024-10-21 23:46:48'
                        created_at: '2024-10-21 23:46:48'
                        updated_at: '2024-10-21 23:46:48'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: 'Ms. Allie Schultz'
                        tax_number:
                          type: string
                          example: 01JARQKS544V00MQJ86ERF99YW
                        tax_rate:
                          type: number
                          example: 17.5
                        categories:
                          type: array
                          example:
                            -
                              id: 1
                              name: Deleniti
                              created_at: '2024-10-21 23:46:48'
                              updated_at: '2024-10-21 23:46:48'
                          items:
                            type: object
                            properties:
                              id:
                                type: integer
                                example: 1
                              name:
                                type: string
                                example: Deleniti
                              created_at:
                                type: string
                                example: '2024-10-21 23:46:48'
                              updated_at:
                                type: string
                                example: '2024-10-21 23:46:48'
                        defaultEmail:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 1
                            name:
                              type: string
                              example: 'Ernie Ledner V'
                            address:
                              type: string
                              example: bkemmer@example.net
                            is_default:
                              type: boolean
                              example: true
                            created_at:
                              type: string
                              example: '2024-10-21 23:46:48'
                            updated_at:
                              type: string
                              example: '2024-10-21 23:46:48'
                        defaultPhone:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 1
                            type:
                              type: string
                              example: Mobile
                            name:
                              type: string
                              example: 'America Wolff'
                            number:
                              type: string
                              example: +1-301-558-0232
                            is_default:
                              type: boolean
                              example: true
                            created_at:
                              type: string
                              example: '2024-10-21 23:46:48'
                            updated_at:
                              type: string
                              example: '2024-10-21 23:46:48'
                        defaultAddress:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 1
                            type:
                              type: string
                              example: Shipping
                            name:
                              type: string
                              example: Kuphal-Daugherty
                            line1:
                              type: string
                              example: '453 Martine Green Apt. 829'
                            line2:
                              type: string
                              example: null
                            city:
                              type: string
                              example: 'South Nyashire'
                            state:
                              type: string
                              example: Kansas
                            postal_code:
                              type: string
                              example: 82376-1423
                            country:
                              type: string
                              example: 'United States'
                            is_default:
                              type: boolean
                              example: true
                            created_at:
                              type: string
                              example: '2024-10-21 23:46:48'
                            updated_at:
                              type: string
                              example: '2024-10-21 23:46:48'
                        created_at:
                          type: string
                          example: '2024-10-21 23:46:48'
                        updated_at:
                          type: string
                          example: '2024-10-21 23:46:48'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: '/?page=1'
                      last:
                        type: string
                        example: null
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      path:
                        type: string
                        example: /
                      per_page:
                        type: integer
                        example: 25
                      to:
                        type: integer
                        example: 2
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - Customers
    post:
      summary: 'Create Customer'
      operationId: createCustomer
      description: ''
      parameters: []
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: 'Ines Stehr'
                    tax_number: 01JARQKS5C0HEGHRZQN1M9CJYN
                    tax_rate: 17.5
                    categories: []
                    defaultEmail: null
                    defaultPhone: null
                    defaultAddress: null
                    created_at: '2024-10-21 23:46:48'
                    updated_at: '2024-10-21 23:46:48'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'Ines Stehr'
                      tax_number:
                        type: string
                        example: 01JARQKS5C0HEGHRZQN1M9CJYN
                      tax_rate:
                        type: number
                        example: 17.5
                      categories:
                        type: array
                        example: []
                      defaultEmail:
                        type: string
                        example: null
                      defaultPhone:
                        type: string
                        example: null
                      defaultAddress:
                        type: string
                        example: null
                      created_at:
                        type: string
                        example: '2024-10-21 23:46:48'
                      updated_at:
                        type: string
                        example: '2024-10-21 23:46:48'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - Customers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'John Doe'
                tax_number:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: ABCD-1234
                tax_rate:
                  type: number
                  description: 'Must be between 0 and 100.'
                  example: 12.5
              required:
                - name
  '/api/v1/customers/{id}':
    get:
      summary: 'Get Customer'
      operationId: getCustomer
      description: ''
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: 'Marguerite Kerluke'
                    tax_number: 01JARQKS5KDFPT1P2SKD12RTBW
                    tax_rate: 17.5
                    categories:
                      -
                        id: 1
                        name: Eos
                        created_at: '2024-10-21 23:46:48'
                        updated_at: '2024-10-21 23:46:48'
                    defaultEmail:
                      id: 1
                      name: 'Emelia Dietrich'
                      address: ciara83@example.com
                      is_default: true
                      created_at: '2024-10-21 23:46:48'
                      updated_at: '2024-10-21 23:46:48'
                    defaultPhone:
                      id: 1
                      type: Home
                      name: 'Cody Nicolas'
                      number: +1-239-953-6176
                      is_default: true
                      created_at: '2024-10-21 23:46:48'
                      updated_at: '2024-10-21 23:46:48'
                    defaultAddress:
                      id: 1
                      type: Shipping
                      name: 'Gleichner, Koss and Shanahan'
                      line1: '200 Stracke Villages Apt. 157'
                      line2: null
                      city: 'West Jaren'
                      state: Arizona
                      postal_code: 16096-9229
                      country: 'United States'
                      is_default: true
                      created_at: '2024-10-21 23:46:48'
                      updated_at: '2024-10-21 23:46:48'
                    created_at: '2024-10-21 23:46:48'
                    updated_at: '2024-10-21 23:46:48'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'Marguerite Kerluke'
                      tax_number:
                        type: string
                        example: 01JARQKS5KDFPT1P2SKD12RTBW
                      tax_rate:
                        type: number
                        example: 17.5
                      categories:
                        type: array
                        example:
                          -
                            id: 1
                            name: Eos
                            created_at: '2024-10-21 23:46:48'
                            updated_at: '2024-10-21 23:46:48'
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 1
                            name:
                              type: string
                              example: Eos
                            created_at:
                              type: string
                              example: '2024-10-21 23:46:48'
                            updated_at:
                              type: string
                              example: '2024-10-21 23:46:48'
                      defaultEmail:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                          name:
                            type: string
                            example: 'Emelia Dietrich'
                          address:
                            type: string
                            example: ciara83@example.com
                          is_default:
                            type: boolean
                            example: true
                          created_at:
                            type: string
                            example: '2024-10-21 23:46:48'
                          updated_at:
                            type: string
                            example: '2024-10-21 23:46:48'
                      defaultPhone:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                          type:
                            type: string
                            example: Home
                          name:
                            type: string
                            example: 'Cody Nicolas'
                          number:
                            type: string
                            example: +1-239-953-6176
                          is_default:
                            type: boolean
                            example: true
                          created_at:
                            type: string
                            example: '2024-10-21 23:46:48'
                          updated_at:
                            type: string
                            example: '2024-10-21 23:46:48'
                      defaultAddress:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                          type:
                            type: string
                            example: Shipping
                          name:
                            type: string
                            example: 'Gleichner, Koss and Shanahan'
                          line1:
                            type: string
                            example: '200 Stracke Villages Apt. 157'
                          line2:
                            type: string
                            example: null
                          city:
                            type: string
                            example: 'West Jaren'
                          state:
                            type: string
                            example: Arizona
                          postal_code:
                            type: string
                            example: 16096-9229
                          country:
                            type: string
                            example: 'United States'
                          is_default:
                            type: boolean
                            example: true
                          created_at:
                            type: string
                            example: '2024-10-21 23:46:48'
                          updated_at:
                            type: string
                            example: '2024-10-21 23:46:48'
                      created_at:
                        type: string
                        example: '2024-10-21 23:46:48'
                      updated_at:
                        type: string
                        example: '2024-10-21 23:46:48'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - Customers
    put:
      summary: 'Update Customer'
      operationId: updateCustomer
      description: ''
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: 'Keshaun Dooley'
                    tax_number: 01JARQKS5PPG1YXGZE6BA61HWD
                    tax_rate: 17.5
                    categories:
                      -
                        id: 1
                        name: Nostrum
                        created_at: '2024-10-21 23:46:48'
                        updated_at: '2024-10-21 23:46:48'
                    defaultEmail:
                      id: 1
                      name: 'Dr. Demond Franecki DDS'
                      address: dickinson.jordi@example.com
                      is_default: true
                      created_at: '2024-10-21 23:46:48'
                      updated_at: '2024-10-21 23:46:48'
                    defaultPhone:
                      id: 1
                      type: Office
                      name: 'Vita Roberts'
                      number: '(520) 490-1632'
                      is_default: true
                      created_at: '2024-10-21 23:46:48'
                      updated_at: '2024-10-21 23:46:48'
                    defaultAddress:
                      id: 1
                      type: Billing
                      name: 'Haag, Lynch and Collier'
                      line1: '1239 Durgan Fall'
                      line2: null
                      city: Jarrettfurt
                      state: Delaware
                      postal_code: 86304-4860
                      country: 'United States'
                      is_default: true
                      created_at: '2024-10-21 23:46:48'
                      updated_at: '2024-10-21 23:46:48'
                    created_at: '2024-10-21 23:46:48'
                    updated_at: '2024-10-21 23:46:48'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'Keshaun Dooley'
                      tax_number:
                        type: string
                        example: 01JARQKS5PPG1YXGZE6BA61HWD
                      tax_rate:
                        type: number
                        example: 17.5
                      categories:
                        type: array
                        example:
                          -
                            id: 1
                            name: Nostrum
                            created_at: '2024-10-21 23:46:48'
                            updated_at: '2024-10-21 23:46:48'
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 1
                            name:
                              type: string
                              example: Nostrum
                            created_at:
                              type: string
                              example: '2024-10-21 23:46:48'
                            updated_at:
                              type: string
                              example: '2024-10-21 23:46:48'
                      defaultEmail:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                          name:
                            type: string
                            example: 'Dr. Demond Franecki DDS'
                          address:
                            type: string
                            example: dickinson.jordi@example.com
                          is_default:
                            type: boolean
                            example: true
                          created_at:
                            type: string
                            example: '2024-10-21 23:46:48'
                          updated_at:
                            type: string
                            example: '2024-10-21 23:46:48'
                      defaultPhone:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                          type:
                            type: string
                            example: Office
                          name:
                            type: string
                            example: 'Vita Roberts'
                          number:
                            type: string
                            example: '(520) 490-1632'
                          is_default:
                            type: boolean
                            example: true
                          created_at:
                            type: string
                            example: '2024-10-21 23:46:48'
                          updated_at:
                            type: string
                            example: '2024-10-21 23:46:48'
                      defaultAddress:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                          type:
                            type: string
                            example: Billing
                          name:
                            type: string
                            example: 'Haag, Lynch and Collier'
                          line1:
                            type: string
                            example: '1239 Durgan Fall'
                          line2:
                            type: string
                            example: null
                          city:
                            type: string
                            example: Jarrettfurt
                          state:
                            type: string
                            example: Delaware
                          postal_code:
                            type: string
                            example: 86304-4860
                          country:
                            type: string
                            example: 'United States'
                          is_default:
                            type: boolean
                            example: true
                          created_at:
                            type: string
                            example: '2024-10-21 23:46:48'
                          updated_at:
                            type: string
                            example: '2024-10-21 23:46:48'
                      created_at:
                        type: string
                        example: '2024-10-21 23:46:48'
                      updated_at:
                        type: string
                        example: '2024-10-21 23:46:48'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - Customers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'John Doe'
                tax_number:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: ABCD-1234
                tax_rate:
                  type: number
                  description: 'Must be between 0 and 100.'
                  example: 12.5
              required:
                - name
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the customer.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/customers/{customer_id}/emails':
    get:
      summary: 'List Customer Emails'
      operationId: listCustomerEmails
      description: ''
      parameters:
        -
          in: query
          name: search
          description: 'Search for customer emails by name or address'
          example: john.doe@example.com
          required: false
          schema:
            type: string
            description: 'Search for customer emails by name or address'
            example: john.doe@example.com
        -
          in: query
          name: per_page
          description: 'Number of results per page (Min 25, Max 100)'
          example: 25
          required: false
          schema:
            type: integer
            description: 'Number of results per page (Min 25, Max 100)'
            example: 25
        -
          in: query
          name: page
          description: 'Page number'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page number'
            example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      name: 'Felicia Stehr'
                      address: katheryn.quigley@example.com
                      is_default: true
                      created_at: '2024-10-21 23:46:48'
                      updated_at: '2024-10-21 23:46:48'
                    -
                      id: 1
                      name: 'Mr. Deondre Schoen I'
                      address: ryleigh39@example.net
                      is_default: true
                      created_at: '2024-10-21 23:46:48'
                      updated_at: '2024-10-21 23:46:48'
                  links:
                    first: '/?page=1'
                    last: null
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: 1
                    path: /
                    per_page: 25
                    to: 2
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        name: 'Felicia Stehr'
                        address: katheryn.quigley@example.com
                        is_default: true
                        created_at: '2024-10-21 23:46:48'
                        updated_at: '2024-10-21 23:46:48'
                      -
                        id: 1
                        name: 'Mr. Deondre Schoen I'
                        address: ryleigh39@example.net
                        is_default: true
                        created_at: '2024-10-21 23:46:48'
                        updated_at: '2024-10-21 23:46:48'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: 'Felicia Stehr'
                        address:
                          type: string
                          example: katheryn.quigley@example.com
                        is_default:
                          type: boolean
                          example: true
                        created_at:
                          type: string
                          example: '2024-10-21 23:46:48'
                        updated_at:
                          type: string
                          example: '2024-10-21 23:46:48'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: '/?page=1'
                      last:
                        type: string
                        example: null
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      path:
                        type: string
                        example: /
                      per_page:
                        type: integer
                        example: 25
                      to:
                        type: integer
                        example: 2
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Emails'
    post:
      summary: 'Create Customer Email'
      operationId: createCustomerEmail
      description: ''
      parameters: []
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: 'Prof. Bud Koch'
                    address: dkeeling@example.org
                    is_default: true
                    created_at: '2024-10-21 23:46:48'
                    updated_at: '2024-10-21 23:46:48'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'Prof. Bud Koch'
                      address:
                        type: string
                        example: dkeeling@example.org
                      is_default:
                        type: boolean
                        example: true
                      created_at:
                        type: string
                        example: '2024-10-21 23:46:48'
                      updated_at:
                        type: string
                        example: '2024-10-21 23:46:48'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Emails'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'John Doe'
                address:
                  type: string
                  description: 'Must be a valid email address. Must be at least 3 characters. Must not be greater than 256 characters.'
                  example: john.doe@example.com
                is_default:
                  type: boolean
                  description: ''
                  example: true
              required:
                - name
                - address
    parameters:
      -
        in: path
        name: customer_id
        description: 'The ID of the customer.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/customers/{customer_id}/emails/{id}':
    get:
      summary: 'Get Customer Email'
      operationId: getCustomerEmail
      description: ''
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: 'Bartholome Batz'
                    address: mkoepp@example.net
                    is_default: true
                    created_at: '2024-10-21 23:46:48'
                    updated_at: '2024-10-21 23:46:48'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'Bartholome Batz'
                      address:
                        type: string
                        example: mkoepp@example.net
                      is_default:
                        type: boolean
                        example: true
                      created_at:
                        type: string
                        example: '2024-10-21 23:46:48'
                      updated_at:
                        type: string
                        example: '2024-10-21 23:46:48'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Emails'
    put:
      summary: 'Update Customer Email'
      operationId: updateCustomerEmail
      description: ''
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: 'Dr. Rene Hauck'
                    address: rhianna.ratke@example.net
                    is_default: true
                    created_at: '2024-10-21 23:46:48'
                    updated_at: '2024-10-21 23:46:48'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'Dr. Rene Hauck'
                      address:
                        type: string
                        example: rhianna.ratke@example.net
                      is_default:
                        type: boolean
                        example: true
                      created_at:
                        type: string
                        example: '2024-10-21 23:46:48'
                      updated_at:
                        type: string
                        example: '2024-10-21 23:46:48'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Emails'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'John Doe'
                address:
                  type: string
                  description: 'Must be a valid email address. Must be at least 3 characters. Must not be greater than 256 characters.'
                  example: john.doe@example.com
                is_default:
                  type: boolean
                  description: ''
                  example: false
              required:
                - name
                - address
    parameters:
      -
        in: path
        name: customer_id
        description: 'The ID of the customer.'
        example: 1
        required: true
        schema:
          type: integer
      -
        in: path
        name: id
        description: 'The ID of the email.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/customers/{customer_id}/phones':
    get:
      summary: 'List Customer Phones'
      operationId: listCustomerPhones
      description: ''
      parameters:
        -
          in: query
          name: type
          description: ''
          example: Office
          required: false
          schema:
            type: string
            description: ''
            example: Office
            enum:
              - Home
              - Office
              - Mobile
        -
          in: query
          name: search
          description: 'Search for customer phones by name or number'
          example: '0123456789'
          required: false
          schema:
            type: string
            description: 'Search for customer phones by name or number'
            example: '0123456789'
        -
          in: query
          name: per_page
          description: 'Number of results per page (Min 25, Max 100)'
          example: 25
          required: false
          schema:
            type: integer
            description: 'Number of results per page (Min 25, Max 100)'
            example: 25
        -
          in: query
          name: page
          description: 'Page number'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page number'
            example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      type: Office
                      name: 'Dashawn Dickinson'
                      number: 973.974.1624
                      is_default: true
                      created_at: '2024-10-21 23:46:48'
                      updated_at: '2024-10-21 23:46:48'
                    -
                      id: 1
                      type: Mobile
                      name: 'Linwood Keeling'
                      number: +1-210-572-6019
                      is_default: true
                      created_at: '2024-10-21 23:46:48'
                      updated_at: '2024-10-21 23:46:48'
                  links:
                    first: '/?page=1'
                    last: null
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: 1
                    path: /
                    per_page: 25
                    to: 2
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        type: Office
                        name: 'Dashawn Dickinson'
                        number: 973.974.1624
                        is_default: true
                        created_at: '2024-10-21 23:46:48'
                        updated_at: '2024-10-21 23:46:48'
                      -
                        id: 1
                        type: Mobile
                        name: 'Linwood Keeling'
                        number: +1-210-572-6019
                        is_default: true
                        created_at: '2024-10-21 23:46:48'
                        updated_at: '2024-10-21 23:46:48'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        type:
                          type: string
                          example: Office
                        name:
                          type: string
                          example: 'Dashawn Dickinson'
                        number:
                          type: string
                          example: 973.974.1624
                        is_default:
                          type: boolean
                          example: true
                        created_at:
                          type: string
                          example: '2024-10-21 23:46:48'
                        updated_at:
                          type: string
                          example: '2024-10-21 23:46:48'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: '/?page=1'
                      last:
                        type: string
                        example: null
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      path:
                        type: string
                        example: /
                      per_page:
                        type: integer
                        example: 25
                      to:
                        type: integer
                        example: 2
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Phones'
    post:
      summary: 'Create Customer Phone'
      operationId: createCustomerPhone
      description: ''
      parameters: []
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    type: Home
                    name: 'Drake Green V'
                    number: 1-225-478-6097
                    is_default: true
                    created_at: '2024-10-21 23:46:48'
                    updated_at: '2024-10-21 23:46:48'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      type:
                        type: string
                        example: Home
                      name:
                        type: string
                        example: 'Drake Green V'
                      number:
                        type: string
                        example: 1-225-478-6097
                      is_default:
                        type: boolean
                        example: true
                      created_at:
                        type: string
                        example: '2024-10-21 23:46:48'
                      updated_at:
                        type: string
                        example: '2024-10-21 23:46:48'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Phones'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: ''
                  example: Home
                  enum:
                    - Home
                    - Office
                    - Mobile
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'John Doe'
                number:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 32 characters.'
                  example: +1-956-745-2290
                is_default:
                  type: boolean
                  description: ''
                  example: true
              required:
                - type
                - name
                - number
    parameters:
      -
        in: path
        name: customer_id
        description: 'The ID of the customer.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/customers/{customer_id}/phones/{id}':
    get:
      summary: 'Get Customer Phone'
      operationId: getCustomerPhone
      description: ''
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    type: Home
                    name: 'Gabe Dooley'
                    number: 979-734-3968
                    is_default: true
                    created_at: '2024-10-21 23:46:48'
                    updated_at: '2024-10-21 23:46:48'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      type:
                        type: string
                        example: Home
                      name:
                        type: string
                        example: 'Gabe Dooley'
                      number:
                        type: string
                        example: 979-734-3968
                      is_default:
                        type: boolean
                        example: true
                      created_at:
                        type: string
                        example: '2024-10-21 23:46:48'
                      updated_at:
                        type: string
                        example: '2024-10-21 23:46:48'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Phones'
    put:
      summary: 'Update Customer Phone'
      operationId: updateCustomerPhone
      description: ''
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    type: Office
                    name: 'Domenica Conn'
                    number: 610-813-2359
                    is_default: true
                    created_at: '2024-10-21 23:46:48'
                    updated_at: '2024-10-21 23:46:48'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      type:
                        type: string
                        example: Office
                      name:
                        type: string
                        example: 'Domenica Conn'
                      number:
                        type: string
                        example: 610-813-2359
                      is_default:
                        type: boolean
                        example: true
                      created_at:
                        type: string
                        example: '2024-10-21 23:46:48'
                      updated_at:
                        type: string
                        example: '2024-10-21 23:46:48'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Phones'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: ''
                  example: Office
                  enum:
                    - Home
                    - Office
                    - Mobile
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'John Doe'
                number:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 32 characters.'
                  example: +1-956-745-2290
                is_default:
                  type: boolean
                  description: ''
                  example: true
              required:
                - type
                - name
                - number
    parameters:
      -
        in: path
        name: customer_id
        description: 'The ID of the customer.'
        example: 1
        required: true
        schema:
          type: integer
      -
        in: path
        name: id
        description: 'The ID of the phone.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/customers/{customer_id}/addresses':
    get:
      summary: 'List Customer Addresses'
      operationId: listCustomerAddresses
      description: ''
      parameters:
        -
          in: query
          name: type
          description: ''
          example: Shipping
          required: false
          schema:
            type: string
            description: ''
            example: Shipping
            enum:
              - Billing
              - Shipping
        -
          in: query
          name: search
          description: 'Search for customer addresses by name or any address fields'
          example: '25 Brookfield Road'
          required: false
          schema:
            type: string
            description: 'Search for customer addresses by name or any address fields'
            example: '25 Brookfield Road'
        -
          in: query
          name: per_page
          description: 'Number of results per page (Min 25, Max 100)'
          example: 25
          required: false
          schema:
            type: integer
            description: 'Number of results per page (Min 25, Max 100)'
            example: 25
        -
          in: query
          name: page
          description: 'Page number'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page number'
            example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      type: Billing
                      name: Balistreri-Beer
                      line1: '453 Gianni Heights'
                      line2: null
                      city: 'East Mariannaton'
                      state: 'New Hampshire'
                      postal_code: '84944'
                      country: 'United States'
                      is_default: true
                      created_at: '2024-10-21 23:46:48'
                      updated_at: '2024-10-21 23:46:48'
                    -
                      id: 1
                      type: Billing
                      name: 'Hodkiewicz Inc'
                      line1: '85372 Deanna Causeway Apt. 474'
                      line2: null
                      city: 'New Pamelaborough'
                      state: Nebraska
                      postal_code: '28042'
                      country: 'United States'
                      is_default: true
                      created_at: '2024-10-21 23:46:48'
                      updated_at: '2024-10-21 23:46:48'
                  links:
                    first: '/?page=1'
                    last: null
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: 1
                    path: /
                    per_page: 25
                    to: 2
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        type: Billing
                        name: Balistreri-Beer
                        line1: '453 Gianni Heights'
                        line2: null
                        city: 'East Mariannaton'
                        state: 'New Hampshire'
                        postal_code: '84944'
                        country: 'United States'
                        is_default: true
                        created_at: '2024-10-21 23:46:48'
                        updated_at: '2024-10-21 23:46:48'
                      -
                        id: 1
                        type: Billing
                        name: 'Hodkiewicz Inc'
                        line1: '85372 Deanna Causeway Apt. 474'
                        line2: null
                        city: 'New Pamelaborough'
                        state: Nebraska
                        postal_code: '28042'
                        country: 'United States'
                        is_default: true
                        created_at: '2024-10-21 23:46:48'
                        updated_at: '2024-10-21 23:46:48'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        type:
                          type: string
                          example: Billing
                        name:
                          type: string
                          example: Balistreri-Beer
                        line1:
                          type: string
                          example: '453 Gianni Heights'
                        line2:
                          type: string
                          example: null
                        city:
                          type: string
                          example: 'East Mariannaton'
                        state:
                          type: string
                          example: 'New Hampshire'
                        postal_code:
                          type: string
                          example: '84944'
                        country:
                          type: string
                          example: 'United States'
                        is_default:
                          type: boolean
                          example: true
                        created_at:
                          type: string
                          example: '2024-10-21 23:46:48'
                        updated_at:
                          type: string
                          example: '2024-10-21 23:46:48'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: '/?page=1'
                      last:
                        type: string
                        example: null
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      path:
                        type: string
                        example: /
                      per_page:
                        type: integer
                        example: 25
                      to:
                        type: integer
                        example: 2
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Addresses'
    post:
      summary: 'Create Customer Address'
      operationId: createCustomerAddress
      description: ''
      parameters: []
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    type: Shipping
                    name: 'Cummerata, Bergstrom and Von'
                    line1: '2187 Metz Spur'
                    line2: null
                    city: 'North Armandport'
                    state: Arizona
                    postal_code: 92767-4942
                    country: 'United States'
                    is_default: true
                    created_at: '2024-10-21 23:46:48'
                    updated_at: '2024-10-21 23:46:48'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      type:
                        type: string
                        example: Shipping
                      name:
                        type: string
                        example: 'Cummerata, Bergstrom and Von'
                      line1:
                        type: string
                        example: '2187 Metz Spur'
                      line2:
                        type: string
                        example: null
                      city:
                        type: string
                        example: 'North Armandport'
                      state:
                        type: string
                        example: Arizona
                      postal_code:
                        type: string
                        example: 92767-4942
                      country:
                        type: string
                        example: 'United States'
                      is_default:
                        type: boolean
                        example: true
                      created_at:
                        type: string
                        example: '2024-10-21 23:46:48'
                      updated_at:
                        type: string
                        example: '2024-10-21 23:46:48'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Addresses'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: ''
                  example: Shipping
                  enum:
                    - Billing
                    - Shipping
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'John Doe'
                line1:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: '2592 Jada Key'
                line2:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'Apartment 504'
                city:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'South Josh'
                state:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: Kentucky
                postal_code:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 62249-8453
                country:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'United States'
                is_default:
                  type: boolean
                  description: ''
                  example: true
              required:
                - type
                - name
                - line1
                - city
                - postal_code
                - country
    parameters:
      -
        in: path
        name: customer_id
        description: 'The ID of the customer.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/customers/{customer_id}/addresses/{id}':
    get:
      summary: 'Get Customer Address'
      operationId: getCustomerAddress
      description: ''
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    type: Shipping
                    name: 'Homenick, Gaylord and Kuvalis'
                    line1: '12004 Bartoletti Valley Apt. 270'
                    line2: null
                    city: 'New Alexandremouth'
                    state: Virginia
                    postal_code: 24235-0445
                    country: 'United States'
                    is_default: true
                    created_at: '2024-10-21 23:46:48'
                    updated_at: '2024-10-21 23:46:48'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      type:
                        type: string
                        example: Shipping
                      name:
                        type: string
                        example: 'Homenick, Gaylord and Kuvalis'
                      line1:
                        type: string
                        example: '12004 Bartoletti Valley Apt. 270'
                      line2:
                        type: string
                        example: null
                      city:
                        type: string
                        example: 'New Alexandremouth'
                      state:
                        type: string
                        example: Virginia
                      postal_code:
                        type: string
                        example: 24235-0445
                      country:
                        type: string
                        example: 'United States'
                      is_default:
                        type: boolean
                        example: true
                      created_at:
                        type: string
                        example: '2024-10-21 23:46:48'
                      updated_at:
                        type: string
                        example: '2024-10-21 23:46:48'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Addresses'
    put:
      summary: 'Update Customer Address'
      operationId: updateCustomerAddress
      description: ''
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    type: Shipping
                    name: 'Shields, Feeney and Mayer'
                    line1: '26115 Oswald Keys Apt. 333'
                    line2: null
                    city: 'West Arnetown'
                    state: 'New Jersey'
                    postal_code: 58503-9009
                    country: 'United States'
                    is_default: true
                    created_at: '2024-10-21 23:46:48'
                    updated_at: '2024-10-21 23:46:48'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      type:
                        type: string
                        example: Shipping
                      name:
                        type: string
                        example: 'Shields, Feeney and Mayer'
                      line1:
                        type: string
                        example: '26115 Oswald Keys Apt. 333'
                      line2:
                        type: string
                        example: null
                      city:
                        type: string
                        example: 'West Arnetown'
                      state:
                        type: string
                        example: 'New Jersey'
                      postal_code:
                        type: string
                        example: 58503-9009
                      country:
                        type: string
                        example: 'United States'
                      is_default:
                        type: boolean
                        example: true
                      created_at:
                        type: string
                        example: '2024-10-21 23:46:48'
                      updated_at:
                        type: string
                        example: '2024-10-21 23:46:48'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Addresses'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: ''
                  example: Shipping
                  enum:
                    - Billing
                    - Shipping
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'John Doe'
                line1:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: '2592 Jada Key'
                line2:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'Apartment 504'
                city:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'South Josh'
                state:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: Kentucky
                postal_code:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 62249-8453
                country:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'United States'
                is_default:
                  type: boolean
                  description: ''
                  example: true
              required:
                - type
                - name
                - line1
                - city
                - postal_code
                - country
    parameters:
      -
        in: path
        name: customer_id
        description: 'The ID of the customer.'
        example: 1
        required: true
        schema:
          type: integer
      -
        in: path
        name: id
        description: 'The ID of the address.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/customer-categories:
    get:
      summary: 'List Customer Categories'
      operationId: listCustomerCategories
      description: ''
      parameters:
        -
          in: query
          name: search
          description: 'Search for customer categories by name'
          example: Freelance
          required: false
          schema:
            type: string
            description: 'Search for customer categories by name'
            example: Freelance
        -
          in: query
          name: per_page
          description: 'Number of results per page (Min 25, Max 100)'
          example: 25
          required: false
          schema:
            type: integer
            description: 'Number of results per page (Min 25, Max 100)'
            example: 25
        -
          in: query
          name: page
          description: 'Page number'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page number'
            example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      name: Porro
                      created_at: '2024-10-21 23:46:48'
                      updated_at: '2024-10-21 23:46:48'
                    -
                      id: 1
                      name: Similique
                      created_at: '2024-10-21 23:46:48'
                      updated_at: '2024-10-21 23:46:48'
                  links:
                    first: '/?page=1'
                    last: null
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: 1
                    path: /
                    per_page: 25
                    to: 2
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        name: Porro
                        created_at: '2024-10-21 23:46:48'
                        updated_at: '2024-10-21 23:46:48'
                      -
                        id: 1
                        name: Similique
                        created_at: '2024-10-21 23:46:48'
                        updated_at: '2024-10-21 23:46:48'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: Porro
                        created_at:
                          type: string
                          example: '2024-10-21 23:46:48'
                        updated_at:
                          type: string
                          example: '2024-10-21 23:46:48'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: '/?page=1'
                      last:
                        type: string
                        example: null
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      path:
                        type: string
                        example: /
                      per_page:
                        type: integer
                        example: 25
                      to:
                        type: integer
                        example: 2
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Categories'
    post:
      summary: 'Create Customer Category'
      operationId: createCustomerCategory
      description: ''
      parameters: []
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: Ducimus
                    created_at: '2024-10-21 23:46:48'
                    updated_at: '2024-10-21 23:46:48'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: Ducimus
                      created_at:
                        type: string
                        example: '2024-10-21 23:46:48'
                      updated_at:
                        type: string
                        example: '2024-10-21 23:46:48'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Categories'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: Freelance
              required:
                - name
  '/api/v1/customer-categories/{id}':
    get:
      summary: 'Get Customer Category'
      operationId: getCustomerCategory
      description: ''
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: Tempore
                    created_at: '2024-10-21 23:46:48'
                    updated_at: '2024-10-21 23:46:48'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: Tempore
                      created_at:
                        type: string
                        example: '2024-10-21 23:46:48'
                      updated_at:
                        type: string
                        example: '2024-10-21 23:46:48'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Categories'
    put:
      summary: 'Update Customer Category'
      operationId: updateCustomerCategory
      description: ''
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: Aut
                    created_at: '2024-10-21 23:46:48'
                    updated_at: '2024-10-21 23:46:48'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: Aut
                      created_at:
                        type: string
                        example: '2024-10-21 23:46:48'
                      updated_at:
                        type: string
                        example: '2024-10-21 23:46:48'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Categories'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: Freelance
              required:
                - name
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the customer category.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/customer-categories-sync:
    put:
      summary: 'Sync Customer Categories'
      operationId: syncCustomerCategories
      description: ''
      parameters: []
      responses:
        204:
          description: 'Customer Categories Synced'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Categories'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                customer_id:
                  type: integer
                  description: ''
                  example: 1
                category_ids:
                  type: array
                  description: ''
                  example:
                    - 16
                  items:
                    type: integer
              required:
                - customer_id
  /api/v1/products:
    get:
      summary: 'List Products'
      operationId: listProducts
      description: ''
      parameters:
        -
          in: query
          name: search
          description: 'Search for products by name or sku'
          example: 'Website Hosting'
          required: false
          schema:
            type: string
            description: 'Search for products by name or sku'
            example: 'Website Hosting'
        -
          in: query
          name: per_page
          description: 'Number of results per page (Min 25, Max 100)'
          example: 25
          required: false
          schema:
            type: integer
            description: 'Number of results per page (Min 25, Max 100)'
            example: 25
        -
          in: query
          name: page
          description: 'Page number'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page number'
            example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      name: 'Qui Possimus Ipsa'
                      sku: LJTEIQOLL3DCGPIJ
                      description: 'Consequatur est tenetur et repellat. Quas ducimus dolorem eius expedita. Error accusantium explicabo assumenda porro.'
                      unit_type: kg
                      unit_price: 47.28
                      supplier: Wiegand-Senger
                      created_at: '2024-10-21 23:46:48'
                      updated_at: '2024-10-21 23:46:48'
                    -
                      id: 1
                      name: 'Vel Rem Vitae'
                      sku: I0PGOP8DAXDSPQQF
                      description: 'Enim a accusamus rerum libero. Ducimus nostrum autem omnis omnis. Enim deleniti repudiandae ipsa sunt.'
                      unit_type: cm
                      unit_price: 62.24
                      supplier: 'Ernser, Maggio and Mann'
                      created_at: '2024-10-21 23:46:48'
                      updated_at: '2024-10-21 23:46:48'
                  links:
                    first: '/?page=1'
                    last: null
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: 1
                    path: /
                    per_page: 25
                    to: 2
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        name: 'Qui Possimus Ipsa'
                        sku: LJTEIQOLL3DCGPIJ
                        description: 'Consequatur est tenetur et repellat. Quas ducimus dolorem eius expedita. Error accusantium explicabo assumenda porro.'
                        unit_type: kg
                        unit_price: 47.28
                        supplier: Wiegand-Senger
                        created_at: '2024-10-21 23:46:48'
                        updated_at: '2024-10-21 23:46:48'
                      -
                        id: 1
                        name: 'Vel Rem Vitae'
                        sku: I0PGOP8DAXDSPQQF
                        description: 'Enim a accusamus rerum libero. Ducimus nostrum autem omnis omnis. Enim deleniti repudiandae ipsa sunt.'
                        unit_type: cm
                        unit_price: 62.24
                        supplier: 'Ernser, Maggio and Mann'
                        created_at: '2024-10-21 23:46:48'
                        updated_at: '2024-10-21 23:46:48'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: 'Qui Possimus Ipsa'
                        sku:
                          type: string
                          example: LJTEIQOLL3DCGPIJ
                        description:
                          type: string
                          example: 'Consequatur est tenetur et repellat. Quas ducimus dolorem eius expedita. Error accusantium explicabo assumenda porro.'
                        unit_type:
                          type: string
                          example: kg
                        unit_price:
                          type: number
                          example: 47.28
                        supplier:
                          type: string
                          example: Wiegand-Senger
                        created_at:
                          type: string
                          example: '2024-10-21 23:46:48'
                        updated_at:
                          type: string
                          example: '2024-10-21 23:46:48'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: '/?page=1'
                      last:
                        type: string
                        example: null
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      path:
                        type: string
                        example: /
                      per_page:
                        type: integer
                        example: 25
                      to:
                        type: integer
                        example: 2
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - Products
    post:
      summary: 'Create Product'
      operationId: createProduct
      description: ''
      parameters: []
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: 'Consequuntur A Quae'
                    sku: 8UPIIF5OGCUR8OZ3
                    description: 'Dolor est consectetur quas tenetur voluptatum et dolores sequi. Esse id voluptates voluptatem. Quasi numquam sed iure et ut.'
                    unit_type: each
                    unit_price: 72.37
                    supplier: 'Quigley Ltd'
                    created_at: '2024-10-21 23:46:48'
                    updated_at: '2024-10-21 23:46:48'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'Consequuntur A Quae'
                      sku:
                        type: string
                        example: 8UPIIF5OGCUR8OZ3
                      description:
                        type: string
                        example: 'Dolor est consectetur quas tenetur voluptatum et dolores sequi. Esse id voluptates voluptatem. Quasi numquam sed iure et ut.'
                      unit_type:
                        type: string
                        example: each
                      unit_price:
                        type: number
                        example: 72.37
                      supplier:
                        type: string
                        example: 'Quigley Ltd'
                      created_at:
                        type: string
                        example: '2024-10-21 23:46:48'
                      updated_at:
                        type: string
                        example: '2024-10-21 23:46:48'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - Products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'Website Hosting'
                sku:
                  type: string
                  description: 'Must not be greater than 32 characters.'
                  example: WH-001
                description:
                  type: string
                  description: ''
                  example: 'Standard website hosting on shared server'
                unit_type:
                  type: string
                  description: 'Must not be greater than 16 characters.'
                  example: Each
                unit_price:
                  type: number
                  description: 'Must be at least 0.'
                  example: 12.99
                supplier:
                  type: string
                  description: 'Must not be greater than 64 characters.'
                  example: 'Drip Dropz Ltd'
              required:
                - name
                - unit_price
  '/api/v1/products/{id}':
    get:
      summary: 'Get Product'
      operationId: getProduct
      description: ''
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: 'Et Nesciunt Et'
                    sku: BC6PJJSUFALRM262
                    description: 'Adipisci quis ea sunt eaque est. Eveniet debitis quas quibusdam excepturi. Ipsa repudiandae a suscipit et quia ea possimus.'
                    unit_type: cm
                    unit_price: 16.75
                    supplier: Tromp-Prohaska
                    created_at: '2024-10-21 23:46:48'
                    updated_at: '2024-10-21 23:46:48'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'Et Nesciunt Et'
                      sku:
                        type: string
                        example: BC6PJJSUFALRM262
                      description:
                        type: string
                        example: 'Adipisci quis ea sunt eaque est. Eveniet debitis quas quibusdam excepturi. Ipsa repudiandae a suscipit et quia ea possimus.'
                      unit_type:
                        type: string
                        example: cm
                      unit_price:
                        type: number
                        example: 16.75
                      supplier:
                        type: string
                        example: Tromp-Prohaska
                      created_at:
                        type: string
                        example: '2024-10-21 23:46:48'
                      updated_at:
                        type: string
                        example: '2024-10-21 23:46:48'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - Products
    put:
      summary: 'Update Product'
      operationId: updateProduct
      description: ''
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: 'Sed Optio Autem'
                    sku: 1QCEJFUAWQRD5LDL
                    description: 'Quibusdam rem voluptatem voluptatem laborum. Ad quis consequatur totam ullam ratione illo. Porro eligendi cupiditate doloremque.'
                    unit_type: cm
                    unit_price: 46.19
                    supplier: 'Friesen, Collier and Schiller'
                    created_at: '2024-10-21 23:46:48'
                    updated_at: '2024-10-21 23:46:48'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'Sed Optio Autem'
                      sku:
                        type: string
                        example: 1QCEJFUAWQRD5LDL
                      description:
                        type: string
                        example: 'Quibusdam rem voluptatem voluptatem laborum. Ad quis consequatur totam ullam ratione illo. Porro eligendi cupiditate doloremque.'
                      unit_type:
                        type: string
                        example: cm
                      unit_price:
                        type: number
                        example: 46.19
                      supplier:
                        type: string
                        example: 'Friesen, Collier and Schiller'
                      created_at:
                        type: string
                        example: '2024-10-21 23:46:48'
                      updated_at:
                        type: string
                        example: '2024-10-21 23:46:48'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - Products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'Website Hosting'
                sku:
                  type: string
                  description: 'Must not be greater than 32 characters.'
                  example: WH-001
                description:
                  type: string
                  description: ''
                  example: 'Standard website hosting on shared server'
                unit_type:
                  type: string
                  description: 'Must not be greater than 16 characters.'
                  example: Each
                unit_price:
                  type: number
                  description: 'Must be at least 0.'
                  example: 12.99
                supplier:
                  type: string
                  description: 'Must not be greater than 64 characters.'
                  example: 'Drip Dropz Ltd'
              required:
                - name
                - unit_price
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the product.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/product-categories:
    get:
      summary: 'List Product Categories'
      operationId: listProductCategories
      description: ''
      parameters:
        -
          in: query
          name: search
          description: 'Search for product categories by name'
          example: Hosting
          required: false
          schema:
            type: string
            description: 'Search for product categories by name'
            example: Hosting
        -
          in: query
          name: per_page
          description: 'Number of results per page (Min 25, Max 100)'
          example: 25
          required: false
          schema:
            type: integer
            description: 'Number of results per page (Min 25, Max 100)'
            example: 25
        -
          in: query
          name: page
          description: 'Page number'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page number'
            example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      name: Autem
                      created_at: '2024-10-21 23:46:48'
                      updated_at: '2024-10-21 23:46:48'
                    -
                      id: 1
                      name: Nemo
                      created_at: '2024-10-21 23:46:48'
                      updated_at: '2024-10-21 23:46:48'
                  links:
                    first: '/?page=1'
                    last: null
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: 1
                    path: /
                    per_page: 25
                    to: 2
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        name: Autem
                        created_at: '2024-10-21 23:46:48'
                        updated_at: '2024-10-21 23:46:48'
                      -
                        id: 1
                        name: Nemo
                        created_at: '2024-10-21 23:46:48'
                        updated_at: '2024-10-21 23:46:48'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: Autem
                        created_at:
                          type: string
                          example: '2024-10-21 23:46:48'
                        updated_at:
                          type: string
                          example: '2024-10-21 23:46:48'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: '/?page=1'
                      last:
                        type: string
                        example: null
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      path:
                        type: string
                        example: /
                      per_page:
                        type: integer
                        example: 25
                      to:
                        type: integer
                        example: 2
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Product Categories'
    post:
      summary: 'Create Product Category'
      operationId: createProductCategory
      description: ''
      parameters: []
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: Placeat
                    created_at: '2024-10-21 23:46:48'
                    updated_at: '2024-10-21 23:46:48'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: Placeat
                      created_at:
                        type: string
                        example: '2024-10-21 23:46:48'
                      updated_at:
                        type: string
                        example: '2024-10-21 23:46:48'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Product Categories'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: Hosting
              required:
                - name
  '/api/v1/product-categories/{id}':
    get:
      summary: 'Get Product Category'
      operationId: getProductCategory
      description: ''
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: Quaerat
                    created_at: '2024-10-21 23:46:48'
                    updated_at: '2024-10-21 23:46:48'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: Quaerat
                      created_at:
                        type: string
                        example: '2024-10-21 23:46:48'
                      updated_at:
                        type: string
                        example: '2024-10-21 23:46:48'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Product Categories'
    put:
      summary: 'Update Product Category'
      operationId: updateProductCategory
      description: ''
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: Omnis
                    created_at: '2024-10-21 23:46:48'
                    updated_at: '2024-10-21 23:46:48'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: Omnis
                      created_at:
                        type: string
                        example: '2024-10-21 23:46:48'
                      updated_at:
                        type: string
                        example: '2024-10-21 23:46:48'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Product Categories'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: Hosting
              required:
                - name
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the product category.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/product-categories-sync:
    put:
      summary: 'Sync Customer Categories'
      operationId: syncCustomerCategories
      description: ''
      parameters: []
      responses:
        204:
          description: 'Product Categories Synced'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Product Categories'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product_id:
                  type: integer
                  description: ''
                  example: 1
                category_ids:
                  type: array
                  description: ''
                  example:
                    - 14
                  items:
                    type: integer
              required:
                - product_id
  /api/v1/services:
    get:
      summary: 'List Services'
      operationId: listServices
      description: ''
      parameters:
        -
          in: query
          name: search
          description: 'Search for services by name'
          example: 'Software Development'
          required: false
          schema:
            type: string
            description: 'Search for services by name'
            example: 'Software Development'
        -
          in: query
          name: per_page
          description: 'Number of results per page (Min 25, Max 100)'
          example: 25
          required: false
          schema:
            type: integer
            description: 'Number of results per page (Min 25, Max 100)'
            example: 25
        -
          in: query
          name: page
          description: 'Page number'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page number'
            example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      name: 'Maiores Sed Architecto'
                      description: 'Facilis voluptatum doloribus similique. Vero dolorem consequuntur ut qui molestias sint. Nihil porro quos explicabo enim incidunt cupiditate consequuntur.'
                      unit_price: 66.78
                      supplier: 'Smitham Inc'
                      created_at: '2024-10-21 23:46:48'
                      updated_at: '2024-10-21 23:46:48'
                    -
                      id: 1
                      name: 'Veniam Dolores Eum'
                      description: 'Quaerat odit eius aliquam perferendis rerum reprehenderit. Asperiores fuga voluptatem delectus officia quas at quibusdam autem. Doloremque incidunt deserunt dolorem similique unde consequatur ut ad.'
                      unit_price: 5.67
                      supplier: Bailey-Lakin
                      created_at: '2024-10-21 23:46:48'
                      updated_at: '2024-10-21 23:46:48'
                  links:
                    first: '/?page=1'
                    last: null
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: 1
                    path: /
                    per_page: 25
                    to: 2
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        name: 'Maiores Sed Architecto'
                        description: 'Facilis voluptatum doloribus similique. Vero dolorem consequuntur ut qui molestias sint. Nihil porro quos explicabo enim incidunt cupiditate consequuntur.'
                        unit_price: 66.78
                        supplier: 'Smitham Inc'
                        created_at: '2024-10-21 23:46:48'
                        updated_at: '2024-10-21 23:46:48'
                      -
                        id: 1
                        name: 'Veniam Dolores Eum'
                        description: 'Quaerat odit eius aliquam perferendis rerum reprehenderit. Asperiores fuga voluptatem delectus officia quas at quibusdam autem. Doloremque incidunt deserunt dolorem similique unde consequatur ut ad.'
                        unit_price: 5.67
                        supplier: Bailey-Lakin
                        created_at: '2024-10-21 23:46:48'
                        updated_at: '2024-10-21 23:46:48'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: 'Maiores Sed Architecto'
                        description:
                          type: string
                          example: 'Facilis voluptatum doloribus similique. Vero dolorem consequuntur ut qui molestias sint. Nihil porro quos explicabo enim incidunt cupiditate consequuntur.'
                        unit_price:
                          type: number
                          example: 66.78
                        supplier:
                          type: string
                          example: 'Smitham Inc'
                        created_at:
                          type: string
                          example: '2024-10-21 23:46:48'
                        updated_at:
                          type: string
                          example: '2024-10-21 23:46:48'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: '/?page=1'
                      last:
                        type: string
                        example: null
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      path:
                        type: string
                        example: /
                      per_page:
                        type: integer
                        example: 25
                      to:
                        type: integer
                        example: 2
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - Services
    post:
      summary: 'Create Service'
      operationId: createService
      description: ''
      parameters: []
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: 'Doloremque Quaerat Veniam'
                    description: 'Quaerat dolor laborum eos at est sequi. Officia incidunt velit est eum magni. Architecto voluptatem dolores explicabo dolorum quam.'
                    unit_price: 43.65
                    supplier: 'Abernathy, Collier and Haley'
                    created_at: '2024-10-21 23:46:48'
                    updated_at: '2024-10-21 23:46:48'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'Doloremque Quaerat Veniam'
                      description:
                        type: string
                        example: 'Quaerat dolor laborum eos at est sequi. Officia incidunt velit est eum magni. Architecto voluptatem dolores explicabo dolorum quam.'
                      unit_price:
                        type: number
                        example: 43.65
                      supplier:
                        type: string
                        example: 'Abernathy, Collier and Haley'
                      created_at:
                        type: string
                        example: '2024-10-21 23:46:48'
                      updated_at:
                        type: string
                        example: '2024-10-21 23:46:48'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - Services
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'Software Development'
                description:
                  type: string
                  description: ''
                  example: 'Rate for software development'
                unit_price:
                  type: number
                  description: 'Must be at least 0.'
                  example: 40.5
                supplier:
                  type: string
                  description: 'Must not be greater than 64 characters.'
                  example: 'Cardano Mercury Ltd'
              required:
                - name
                - unit_price
  '/api/v1/services/{id}':
    get:
      summary: 'Get Service'
      operationId: getService
      description: ''
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: 'Vitae Tempora Perspiciatis'
                    description: 'Nihil repellendus et blanditiis ratione praesentium non eligendi. Aut officiis quidem nostrum ducimus. Laborum deserunt enim voluptas.'
                    unit_price: 23.07
                    supplier: 'Schinner PLC'
                    created_at: '2024-10-21 23:46:48'
                    updated_at: '2024-10-21 23:46:48'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'Vitae Tempora Perspiciatis'
                      description:
                        type: string
                        example: 'Nihil repellendus et blanditiis ratione praesentium non eligendi. Aut officiis quidem nostrum ducimus. Laborum deserunt enim voluptas.'
                      unit_price:
                        type: number
                        example: 23.07
                      supplier:
                        type: string
                        example: 'Schinner PLC'
                      created_at:
                        type: string
                        example: '2024-10-21 23:46:48'
                      updated_at:
                        type: string
                        example: '2024-10-21 23:46:48'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - Services
    put:
      summary: 'Update Service'
      operationId: updateService
      description: ''
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: 'Sequi Odio Delectus'
                    description: 'Quis ut culpa repudiandae odit expedita praesentium ipsam. Facere cum sunt blanditiis ea eum labore recusandae. Suscipit architecto omnis nesciunt tempora a enim.'
                    unit_price: 56.56
                    supplier: 'Crist Ltd'
                    created_at: '2024-10-21 23:46:48'
                    updated_at: '2024-10-21 23:46:48'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'Sequi Odio Delectus'
                      description:
                        type: string
                        example: 'Quis ut culpa repudiandae odit expedita praesentium ipsam. Facere cum sunt blanditiis ea eum labore recusandae. Suscipit architecto omnis nesciunt tempora a enim.'
                      unit_price:
                        type: number
                        example: 56.56
                      supplier:
                        type: string
                        example: 'Crist Ltd'
                      created_at:
                        type: string
                        example: '2024-10-21 23:46:48'
                      updated_at:
                        type: string
                        example: '2024-10-21 23:46:48'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - Services
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'Software Development'
                description:
                  type: string
                  description: ''
                  example: 'Rate for software development'
                unit_price:
                  type: number
                  description: 'Must be at least 0.'
                  example: 40.5
                supplier:
                  type: string
                  description: 'Must not be greater than 64 characters.'
                  example: 'Cardano Mercury Ltd'
              required:
                - name
                - unit_price
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the service.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/service-categories:
    get:
      summary: 'List Service Categories'
      operationId: listServiceCategories
      description: ''
      parameters:
        -
          in: query
          name: search
          description: 'Search for service categories by name'
          example: 'Online Support'
          required: false
          schema:
            type: string
            description: 'Search for service categories by name'
            example: 'Online Support'
        -
          in: query
          name: per_page
          description: 'Number of results per page (Min 25, Max 100)'
          example: 25
          required: false
          schema:
            type: integer
            description: 'Number of results per page (Min 25, Max 100)'
            example: 25
        -
          in: query
          name: page
          description: 'Page number'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page number'
            example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      name: Velit
                      created_at: '2024-10-21 23:46:48'
                      updated_at: '2024-10-21 23:46:48'
                    -
                      id: 1
                      name: Aliquam
                      created_at: '2024-10-21 23:46:48'
                      updated_at: '2024-10-21 23:46:48'
                  links:
                    first: '/?page=1'
                    last: null
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: 1
                    path: /
                    per_page: 25
                    to: 2
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        name: Velit
                        created_at: '2024-10-21 23:46:48'
                        updated_at: '2024-10-21 23:46:48'
                      -
                        id: 1
                        name: Aliquam
                        created_at: '2024-10-21 23:46:48'
                        updated_at: '2024-10-21 23:46:48'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: Velit
                        created_at:
                          type: string
                          example: '2024-10-21 23:46:48'
                        updated_at:
                          type: string
                          example: '2024-10-21 23:46:48'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: '/?page=1'
                      last:
                        type: string
                        example: null
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      path:
                        type: string
                        example: /
                      per_page:
                        type: integer
                        example: 25
                      to:
                        type: integer
                        example: 2
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Service Categories'
    post:
      summary: 'Create Service Category'
      operationId: createServiceCategory
      description: ''
      parameters: []
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: Beatae
                    created_at: '2024-10-21 23:46:48'
                    updated_at: '2024-10-21 23:46:48'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: Beatae
                      created_at:
                        type: string
                        example: '2024-10-21 23:46:48'
                      updated_at:
                        type: string
                        example: '2024-10-21 23:46:48'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Service Categories'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'Online Support'
              required:
                - name
  '/api/v1/service-categories/{id}':
    get:
      summary: 'Get Service Category'
      operationId: getServiceCategory
      description: ''
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: Suscipit
                    created_at: '2024-10-21 23:46:48'
                    updated_at: '2024-10-21 23:46:48'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: Suscipit
                      created_at:
                        type: string
                        example: '2024-10-21 23:46:48'
                      updated_at:
                        type: string
                        example: '2024-10-21 23:46:48'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Service Categories'
    put:
      summary: 'Update Service Category'
      operationId: updateServiceCategory
      description: ''
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: Officia
                    created_at: '2024-10-21 23:46:48'
                    updated_at: '2024-10-21 23:46:48'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: Officia
                      created_at:
                        type: string
                        example: '2024-10-21 23:46:48'
                      updated_at:
                        type: string
                        example: '2024-10-21 23:46:48'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Service Categories'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'Online Support'
              required:
                - name
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the service category.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/service-categories-sync:
    put:
      summary: 'Sync Service Categories'
      operationId: syncServiceCategories
      description: ''
      parameters: []
      responses:
        204:
          description: 'Service Categories Synced'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Service Categories'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                service_id:
                  type: integer
                  description: ''
                  example: 1
                category_ids:
                  type: array
                  description: ''
                  example:
                    - 17
                  items:
                    type: integer
              required:
                - service_id
tags:
  -
    name: Customers
    description: 'Customer Management API'
  -
    name: 'Customer Emails'
    description: 'Customer Email Management API'
  -
    name: 'Customer Phones'
    description: 'Customer Phone Management API'
  -
    name: 'Customer Addresses'
    description: 'Customer Address Management API'
  -
    name: 'Customer Categories'
    description: 'Customer Category Management API'
  -
    name: Products
    description: 'Product Management API'
  -
    name: 'Product Categories'
    description: 'Product Category Management API'
  -
    name: Services
    description: 'Service Management API'
  -
    name: 'Service Categories'
    description: 'Service Category Management API'
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: 'You can generate your token by logging in and clicking your name, and then <a href="/user/api-tokens"><b>API Tokens</b></a>.'
security:
  -
    default: []
