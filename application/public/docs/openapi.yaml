openapi: 3.0.3
info:
  title: 'Cardano Mercury: Invoice'
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8100'
paths:
  /api/v1/customers:
    get:
      summary: 'List Customers'
      operationId: listCustomers
      description: ''
      parameters:
        -
          in: query
          name: search
          description: 'Search for customers by name or tax number'
          example: 'John Doe'
          required: false
          schema:
            type: string
            description: 'Search for customers by name or tax number'
            example: 'John Doe'
        -
          in: query
          name: per_page
          description: 'Number of results per page (Min 25, Max 100)'
          example: 25
          required: false
          schema:
            type: integer
            description: 'Number of results per page (Min 25, Max 100)'
            example: 25
        -
          in: query
          name: page
          description: 'Page number'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page number'
            example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      name: 'Nicklaus Mosciski'
                      tax_number: 01JARHB903R8Z5CCNY4HTDSPXJ
                      tax_rate: 17.5
                      categories:
                        -
                          id: 1
                          name: Esse
                          created_at: '2024-10-21 21:57:18'
                          updated_at: '2024-10-21 21:57:18'
                      defaultEmail:
                        id: 1
                        name: 'Yvonne Romaguera'
                        address: carroll.cyril@example.com
                        is_default: true
                        created_at: '2024-10-21 21:57:18'
                        updated_at: '2024-10-21 21:57:18'
                      defaultPhone:
                        id: 1
                        type: Mobile
                        name: 'Zora Rath'
                        number: '+1 (801) 968-6693'
                        is_default: true
                        created_at: '2024-10-21 21:57:18'
                        updated_at: '2024-10-21 21:57:18'
                      defaultAddress:
                        id: 1
                        type: Shipping
                        name: 'Dach, Parker and Stoltenberg'
                        line1: '63851 Marlene Pine Apt. 871'
                        line2: null
                        city: 'West Gladycefort'
                        state: 'New Jersey'
                        postal_code: 63013-9193
                        country: 'United States'
                        is_default: true
                        created_at: '2024-10-21 21:57:18'
                        updated_at: '2024-10-21 21:57:18'
                      created_at: '2024-10-21 21:57:18'
                      updated_at: '2024-10-21 21:57:18'
                    -
                      id: 1
                      name: 'Gladys Corkery'
                      tax_number: 01JARHB904Y7PRWAG60HH5BYDP
                      tax_rate: 17.5
                      categories:
                        -
                          id: 1
                          name: Fugit
                          created_at: '2024-10-21 21:57:18'
                          updated_at: '2024-10-21 21:57:18'
                      defaultEmail:
                        id: 1
                        name: 'Carlee Beahan'
                        address: emile.fisher@example.org
                        is_default: true
                        created_at: '2024-10-21 21:57:18'
                        updated_at: '2024-10-21 21:57:18'
                      defaultPhone:
                        id: 1
                        type: Mobile
                        name: 'Brent Bosco IV'
                        number: +1.251.516.1050
                        is_default: true
                        created_at: '2024-10-21 21:57:18'
                        updated_at: '2024-10-21 21:57:18'
                      defaultAddress:
                        id: 1
                        type: Shipping
                        name: 'Leuschke, Carter and Kreiger'
                        line1: '743 Moore Creek Suite 003'
                        line2: null
                        city: Legrosfurt
                        state: 'North Carolina'
                        postal_code: '11379'
                        country: 'United States'
                        is_default: true
                        created_at: '2024-10-21 21:57:18'
                        updated_at: '2024-10-21 21:57:18'
                      created_at: '2024-10-21 21:57:18'
                      updated_at: '2024-10-21 21:57:18'
                  links:
                    first: '/?page=1'
                    last: null
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: 1
                    path: /
                    per_page: 25
                    to: 2
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        name: 'Nicklaus Mosciski'
                        tax_number: 01JARHB903R8Z5CCNY4HTDSPXJ
                        tax_rate: 17.5
                        categories:
                          -
                            id: 1
                            name: Esse
                            created_at: '2024-10-21 21:57:18'
                            updated_at: '2024-10-21 21:57:18'
                        defaultEmail:
                          id: 1
                          name: 'Yvonne Romaguera'
                          address: carroll.cyril@example.com
                          is_default: true
                          created_at: '2024-10-21 21:57:18'
                          updated_at: '2024-10-21 21:57:18'
                        defaultPhone:
                          id: 1
                          type: Mobile
                          name: 'Zora Rath'
                          number: '+1 (801) 968-6693'
                          is_default: true
                          created_at: '2024-10-21 21:57:18'
                          updated_at: '2024-10-21 21:57:18'
                        defaultAddress:
                          id: 1
                          type: Shipping
                          name: 'Dach, Parker and Stoltenberg'
                          line1: '63851 Marlene Pine Apt. 871'
                          line2: null
                          city: 'West Gladycefort'
                          state: 'New Jersey'
                          postal_code: 63013-9193
                          country: 'United States'
                          is_default: true
                          created_at: '2024-10-21 21:57:18'
                          updated_at: '2024-10-21 21:57:18'
                        created_at: '2024-10-21 21:57:18'
                        updated_at: '2024-10-21 21:57:18'
                      -
                        id: 1
                        name: 'Gladys Corkery'
                        tax_number: 01JARHB904Y7PRWAG60HH5BYDP
                        tax_rate: 17.5
                        categories:
                          -
                            id: 1
                            name: Fugit
                            created_at: '2024-10-21 21:57:18'
                            updated_at: '2024-10-21 21:57:18'
                        defaultEmail:
                          id: 1
                          name: 'Carlee Beahan'
                          address: emile.fisher@example.org
                          is_default: true
                          created_at: '2024-10-21 21:57:18'
                          updated_at: '2024-10-21 21:57:18'
                        defaultPhone:
                          id: 1
                          type: Mobile
                          name: 'Brent Bosco IV'
                          number: +1.251.516.1050
                          is_default: true
                          created_at: '2024-10-21 21:57:18'
                          updated_at: '2024-10-21 21:57:18'
                        defaultAddress:
                          id: 1
                          type: Shipping
                          name: 'Leuschke, Carter and Kreiger'
                          line1: '743 Moore Creek Suite 003'
                          line2: null
                          city: Legrosfurt
                          state: 'North Carolina'
                          postal_code: '11379'
                          country: 'United States'
                          is_default: true
                          created_at: '2024-10-21 21:57:18'
                          updated_at: '2024-10-21 21:57:18'
                        created_at: '2024-10-21 21:57:18'
                        updated_at: '2024-10-21 21:57:18'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: 'Nicklaus Mosciski'
                        tax_number:
                          type: string
                          example: 01JARHB903R8Z5CCNY4HTDSPXJ
                        tax_rate:
                          type: number
                          example: 17.5
                        categories:
                          type: array
                          example:
                            -
                              id: 1
                              name: Esse
                              created_at: '2024-10-21 21:57:18'
                              updated_at: '2024-10-21 21:57:18'
                          items:
                            type: object
                            properties:
                              id:
                                type: integer
                                example: 1
                              name:
                                type: string
                                example: Esse
                              created_at:
                                type: string
                                example: '2024-10-21 21:57:18'
                              updated_at:
                                type: string
                                example: '2024-10-21 21:57:18'
                        defaultEmail:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 1
                            name:
                              type: string
                              example: 'Yvonne Romaguera'
                            address:
                              type: string
                              example: carroll.cyril@example.com
                            is_default:
                              type: boolean
                              example: true
                            created_at:
                              type: string
                              example: '2024-10-21 21:57:18'
                            updated_at:
                              type: string
                              example: '2024-10-21 21:57:18'
                        defaultPhone:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 1
                            type:
                              type: string
                              example: Mobile
                            name:
                              type: string
                              example: 'Zora Rath'
                            number:
                              type: string
                              example: '+1 (801) 968-6693'
                            is_default:
                              type: boolean
                              example: true
                            created_at:
                              type: string
                              example: '2024-10-21 21:57:18'
                            updated_at:
                              type: string
                              example: '2024-10-21 21:57:18'
                        defaultAddress:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 1
                            type:
                              type: string
                              example: Shipping
                            name:
                              type: string
                              example: 'Dach, Parker and Stoltenberg'
                            line1:
                              type: string
                              example: '63851 Marlene Pine Apt. 871'
                            line2:
                              type: string
                              example: null
                            city:
                              type: string
                              example: 'West Gladycefort'
                            state:
                              type: string
                              example: 'New Jersey'
                            postal_code:
                              type: string
                              example: 63013-9193
                            country:
                              type: string
                              example: 'United States'
                            is_default:
                              type: boolean
                              example: true
                            created_at:
                              type: string
                              example: '2024-10-21 21:57:18'
                            updated_at:
                              type: string
                              example: '2024-10-21 21:57:18'
                        created_at:
                          type: string
                          example: '2024-10-21 21:57:18'
                        updated_at:
                          type: string
                          example: '2024-10-21 21:57:18'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: '/?page=1'
                      last:
                        type: string
                        example: null
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      path:
                        type: string
                        example: /
                      per_page:
                        type: integer
                        example: 25
                      to:
                        type: integer
                        example: 2
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - Customers
    post:
      summary: 'Create Customer'
      operationId: createCustomer
      description: ''
      parameters: []
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: 'Dr. Garfield Lynch'
                    tax_number: 01JARHB90CT3FSASZ9QSN2TR63
                    tax_rate: 17.5
                    categories: []
                    defaultEmail: null
                    defaultPhone: null
                    defaultAddress: null
                    created_at: '2024-10-21 21:57:18'
                    updated_at: '2024-10-21 21:57:18'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'Dr. Garfield Lynch'
                      tax_number:
                        type: string
                        example: 01JARHB90CT3FSASZ9QSN2TR63
                      tax_rate:
                        type: number
                        example: 17.5
                      categories:
                        type: array
                        example: []
                      defaultEmail:
                        type: string
                        example: null
                      defaultPhone:
                        type: string
                        example: null
                      defaultAddress:
                        type: string
                        example: null
                      created_at:
                        type: string
                        example: '2024-10-21 21:57:18'
                      updated_at:
                        type: string
                        example: '2024-10-21 21:57:18'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - Customers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'John Doe'
                tax_number:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: ABCD-1234
                tax_rate:
                  type: number
                  description: 'Must be between 0 and 100.'
                  example: 12.5
              required:
                - name
  '/api/v1/customers/{id}':
    get:
      summary: 'Get Customer'
      operationId: getCustomer
      description: ''
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: 'Keaton Fay'
                    tax_number: 01JARHB90KE06D7QBK6BPJZZGN
                    tax_rate: 17.5
                    categories:
                      -
                        id: 1
                        name: Rerum
                        created_at: '2024-10-21 21:57:18'
                        updated_at: '2024-10-21 21:57:18'
                    defaultEmail:
                      id: 1
                      name: 'Shaylee Kuhlman'
                      address: gerson.kihn@example.net
                      is_default: true
                      created_at: '2024-10-21 21:57:18'
                      updated_at: '2024-10-21 21:57:18'
                    defaultPhone:
                      id: 1
                      type: Mobile
                      name: 'Dr. Frederique Bayer'
                      number: 571.976.4749
                      is_default: true
                      created_at: '2024-10-21 21:57:18'
                      updated_at: '2024-10-21 21:57:18'
                    defaultAddress:
                      id: 1
                      type: Billing
                      name: 'Predovic and Sons'
                      line1: '625 Heather Forest Apt. 345'
                      line2: null
                      city: Shanahaven
                      state: Nevada
                      postal_code: '81619'
                      country: 'United States'
                      is_default: true
                      created_at: '2024-10-21 21:57:18'
                      updated_at: '2024-10-21 21:57:18'
                    created_at: '2024-10-21 21:57:18'
                    updated_at: '2024-10-21 21:57:18'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'Keaton Fay'
                      tax_number:
                        type: string
                        example: 01JARHB90KE06D7QBK6BPJZZGN
                      tax_rate:
                        type: number
                        example: 17.5
                      categories:
                        type: array
                        example:
                          -
                            id: 1
                            name: Rerum
                            created_at: '2024-10-21 21:57:18'
                            updated_at: '2024-10-21 21:57:18'
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 1
                            name:
                              type: string
                              example: Rerum
                            created_at:
                              type: string
                              example: '2024-10-21 21:57:18'
                            updated_at:
                              type: string
                              example: '2024-10-21 21:57:18'
                      defaultEmail:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                          name:
                            type: string
                            example: 'Shaylee Kuhlman'
                          address:
                            type: string
                            example: gerson.kihn@example.net
                          is_default:
                            type: boolean
                            example: true
                          created_at:
                            type: string
                            example: '2024-10-21 21:57:18'
                          updated_at:
                            type: string
                            example: '2024-10-21 21:57:18'
                      defaultPhone:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                          type:
                            type: string
                            example: Mobile
                          name:
                            type: string
                            example: 'Dr. Frederique Bayer'
                          number:
                            type: string
                            example: 571.976.4749
                          is_default:
                            type: boolean
                            example: true
                          created_at:
                            type: string
                            example: '2024-10-21 21:57:18'
                          updated_at:
                            type: string
                            example: '2024-10-21 21:57:18'
                      defaultAddress:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                          type:
                            type: string
                            example: Billing
                          name:
                            type: string
                            example: 'Predovic and Sons'
                          line1:
                            type: string
                            example: '625 Heather Forest Apt. 345'
                          line2:
                            type: string
                            example: null
                          city:
                            type: string
                            example: Shanahaven
                          state:
                            type: string
                            example: Nevada
                          postal_code:
                            type: string
                            example: '81619'
                          country:
                            type: string
                            example: 'United States'
                          is_default:
                            type: boolean
                            example: true
                          created_at:
                            type: string
                            example: '2024-10-21 21:57:18'
                          updated_at:
                            type: string
                            example: '2024-10-21 21:57:18'
                      created_at:
                        type: string
                        example: '2024-10-21 21:57:18'
                      updated_at:
                        type: string
                        example: '2024-10-21 21:57:18'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - Customers
    put:
      summary: 'Update Customer'
      operationId: updateCustomer
      description: ''
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: 'Thad Corwin'
                    tax_number: 01JARHB90NX6C8SGD5MC74C1RR
                    tax_rate: 17.5
                    categories:
                      -
                        id: 1
                        name: Molestiae
                        created_at: '2024-10-21 21:57:18'
                        updated_at: '2024-10-21 21:57:18'
                    defaultEmail:
                      id: 1
                      name: 'Keegan Windler'
                      address: ycassin@example.net
                      is_default: true
                      created_at: '2024-10-21 21:57:18'
                      updated_at: '2024-10-21 21:57:18'
                    defaultPhone:
                      id: 1
                      type: Office
                      name: 'Dr. Kira Haag'
                      number: +1.970.309.9978
                      is_default: true
                      created_at: '2024-10-21 21:57:18'
                      updated_at: '2024-10-21 21:57:18'
                    defaultAddress:
                      id: 1
                      type: Shipping
                      name: 'Leuschke, Roob and Lemke'
                      line1: '921 Kelvin Lights'
                      line2: null
                      city: 'North Alia'
                      state: Virginia
                      postal_code: '61626'
                      country: 'United States'
                      is_default: true
                      created_at: '2024-10-21 21:57:18'
                      updated_at: '2024-10-21 21:57:18'
                    created_at: '2024-10-21 21:57:18'
                    updated_at: '2024-10-21 21:57:18'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'Thad Corwin'
                      tax_number:
                        type: string
                        example: 01JARHB90NX6C8SGD5MC74C1RR
                      tax_rate:
                        type: number
                        example: 17.5
                      categories:
                        type: array
                        example:
                          -
                            id: 1
                            name: Molestiae
                            created_at: '2024-10-21 21:57:18'
                            updated_at: '2024-10-21 21:57:18'
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 1
                            name:
                              type: string
                              example: Molestiae
                            created_at:
                              type: string
                              example: '2024-10-21 21:57:18'
                            updated_at:
                              type: string
                              example: '2024-10-21 21:57:18'
                      defaultEmail:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                          name:
                            type: string
                            example: 'Keegan Windler'
                          address:
                            type: string
                            example: ycassin@example.net
                          is_default:
                            type: boolean
                            example: true
                          created_at:
                            type: string
                            example: '2024-10-21 21:57:18'
                          updated_at:
                            type: string
                            example: '2024-10-21 21:57:18'
                      defaultPhone:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                          type:
                            type: string
                            example: Office
                          name:
                            type: string
                            example: 'Dr. Kira Haag'
                          number:
                            type: string
                            example: +1.970.309.9978
                          is_default:
                            type: boolean
                            example: true
                          created_at:
                            type: string
                            example: '2024-10-21 21:57:18'
                          updated_at:
                            type: string
                            example: '2024-10-21 21:57:18'
                      defaultAddress:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                          type:
                            type: string
                            example: Shipping
                          name:
                            type: string
                            example: 'Leuschke, Roob and Lemke'
                          line1:
                            type: string
                            example: '921 Kelvin Lights'
                          line2:
                            type: string
                            example: null
                          city:
                            type: string
                            example: 'North Alia'
                          state:
                            type: string
                            example: Virginia
                          postal_code:
                            type: string
                            example: '61626'
                          country:
                            type: string
                            example: 'United States'
                          is_default:
                            type: boolean
                            example: true
                          created_at:
                            type: string
                            example: '2024-10-21 21:57:18'
                          updated_at:
                            type: string
                            example: '2024-10-21 21:57:18'
                      created_at:
                        type: string
                        example: '2024-10-21 21:57:18'
                      updated_at:
                        type: string
                        example: '2024-10-21 21:57:18'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - Customers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'John Doe'
                tax_number:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: ABCD-1234
                tax_rate:
                  type: number
                  description: 'Must be between 0 and 100.'
                  example: 12.5
              required:
                - name
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the customer.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/customers/{customer_id}/emails':
    get:
      summary: 'List Customer Emails'
      operationId: listCustomerEmails
      description: ''
      parameters:
        -
          in: query
          name: search
          description: 'Search for customer emails by name or address'
          example: john.doe@example.com
          required: false
          schema:
            type: string
            description: 'Search for customer emails by name or address'
            example: john.doe@example.com
        -
          in: query
          name: per_page
          description: 'Number of results per page (Min 25, Max 100)'
          example: 25
          required: false
          schema:
            type: integer
            description: 'Number of results per page (Min 25, Max 100)'
            example: 25
        -
          in: query
          name: page
          description: 'Page number'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page number'
            example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      name: 'Fernando Hayes'
                      address: qreilly@example.org
                      is_default: true
                      created_at: '2024-10-21 21:57:18'
                      updated_at: '2024-10-21 21:57:18'
                    -
                      id: 1
                      name: 'Tyson Wyman'
                      address: millie.rippin@example.org
                      is_default: true
                      created_at: '2024-10-21 21:57:18'
                      updated_at: '2024-10-21 21:57:18'
                  links:
                    first: '/?page=1'
                    last: null
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: 1
                    path: /
                    per_page: 25
                    to: 2
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        name: 'Fernando Hayes'
                        address: qreilly@example.org
                        is_default: true
                        created_at: '2024-10-21 21:57:18'
                        updated_at: '2024-10-21 21:57:18'
                      -
                        id: 1
                        name: 'Tyson Wyman'
                        address: millie.rippin@example.org
                        is_default: true
                        created_at: '2024-10-21 21:57:18'
                        updated_at: '2024-10-21 21:57:18'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: 'Fernando Hayes'
                        address:
                          type: string
                          example: qreilly@example.org
                        is_default:
                          type: boolean
                          example: true
                        created_at:
                          type: string
                          example: '2024-10-21 21:57:18'
                        updated_at:
                          type: string
                          example: '2024-10-21 21:57:18'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: '/?page=1'
                      last:
                        type: string
                        example: null
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      path:
                        type: string
                        example: /
                      per_page:
                        type: integer
                        example: 25
                      to:
                        type: integer
                        example: 2
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Emails'
    post:
      summary: 'Create Customer Email'
      operationId: createCustomerEmail
      description: ''
      parameters: []
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: 'Vada Hamill'
                    address: meaghan.schuster@example.org
                    is_default: true
                    created_at: '2024-10-21 21:57:18'
                    updated_at: '2024-10-21 21:57:18'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'Vada Hamill'
                      address:
                        type: string
                        example: meaghan.schuster@example.org
                      is_default:
                        type: boolean
                        example: true
                      created_at:
                        type: string
                        example: '2024-10-21 21:57:18'
                      updated_at:
                        type: string
                        example: '2024-10-21 21:57:18'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Emails'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'John Doe'
                address:
                  type: string
                  description: 'Must be a valid email address. Must be at least 3 characters. Must not be greater than 256 characters.'
                  example: john.doe@example.com
                is_default:
                  type: boolean
                  description: ''
                  example: true
              required:
                - name
                - address
    parameters:
      -
        in: path
        name: customer_id
        description: 'The ID of the customer.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/customers/{customer_id}/emails/{id}':
    get:
      summary: 'Get Customer Email'
      operationId: getCustomerEmail
      description: ''
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: 'Dr. Autumn Kohler II'
                    address: kelsie.anderson@example.net
                    is_default: true
                    created_at: '2024-10-21 21:57:18'
                    updated_at: '2024-10-21 21:57:18'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'Dr. Autumn Kohler II'
                      address:
                        type: string
                        example: kelsie.anderson@example.net
                      is_default:
                        type: boolean
                        example: true
                      created_at:
                        type: string
                        example: '2024-10-21 21:57:18'
                      updated_at:
                        type: string
                        example: '2024-10-21 21:57:18'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Emails'
    put:
      summary: 'Update Customer Email'
      operationId: updateCustomerEmail
      description: ''
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: 'Abbey Sanford'
                    address: trudie80@example.net
                    is_default: true
                    created_at: '2024-10-21 21:57:18'
                    updated_at: '2024-10-21 21:57:18'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'Abbey Sanford'
                      address:
                        type: string
                        example: trudie80@example.net
                      is_default:
                        type: boolean
                        example: true
                      created_at:
                        type: string
                        example: '2024-10-21 21:57:18'
                      updated_at:
                        type: string
                        example: '2024-10-21 21:57:18'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Emails'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'John Doe'
                address:
                  type: string
                  description: 'Must be a valid email address. Must be at least 3 characters. Must not be greater than 256 characters.'
                  example: john.doe@example.com
                is_default:
                  type: boolean
                  description: ''
                  example: true
              required:
                - name
                - address
    parameters:
      -
        in: path
        name: customer_id
        description: 'The ID of the customer.'
        example: 1
        required: true
        schema:
          type: integer
      -
        in: path
        name: id
        description: 'The ID of the email.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/customers/{customer_id}/phones':
    get:
      summary: 'List Customer Phones'
      operationId: listCustomerPhones
      description: ''
      parameters:
        -
          in: query
          name: type
          description: ''
          example: Mobile
          required: false
          schema:
            type: string
            description: ''
            example: Mobile
            enum:
              - Home
              - Office
              - Mobile
        -
          in: query
          name: search
          description: 'Search for customer phones by name or number'
          example: '0123456789'
          required: false
          schema:
            type: string
            description: 'Search for customer phones by name or number'
            example: '0123456789'
        -
          in: query
          name: per_page
          description: 'Number of results per page (Min 25, Max 100)'
          example: 25
          required: false
          schema:
            type: integer
            description: 'Number of results per page (Min 25, Max 100)'
            example: 25
        -
          in: query
          name: page
          description: 'Page number'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page number'
            example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      type: Mobile
                      name: 'Aric Bashirian'
                      number: '+1 (810) 277-2497'
                      is_default: true
                      created_at: '2024-10-21 21:57:18'
                      updated_at: '2024-10-21 21:57:18'
                    -
                      id: 1
                      type: Office
                      name: 'Antonette Rogahn'
                      number: '+16623417767'
                      is_default: true
                      created_at: '2024-10-21 21:57:18'
                      updated_at: '2024-10-21 21:57:18'
                  links:
                    first: '/?page=1'
                    last: null
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: 1
                    path: /
                    per_page: 25
                    to: 2
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        type: Mobile
                        name: 'Aric Bashirian'
                        number: '+1 (810) 277-2497'
                        is_default: true
                        created_at: '2024-10-21 21:57:18'
                        updated_at: '2024-10-21 21:57:18'
                      -
                        id: 1
                        type: Office
                        name: 'Antonette Rogahn'
                        number: '+16623417767'
                        is_default: true
                        created_at: '2024-10-21 21:57:18'
                        updated_at: '2024-10-21 21:57:18'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        type:
                          type: string
                          example: Mobile
                        name:
                          type: string
                          example: 'Aric Bashirian'
                        number:
                          type: string
                          example: '+1 (810) 277-2497'
                        is_default:
                          type: boolean
                          example: true
                        created_at:
                          type: string
                          example: '2024-10-21 21:57:18'
                        updated_at:
                          type: string
                          example: '2024-10-21 21:57:18'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: '/?page=1'
                      last:
                        type: string
                        example: null
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      path:
                        type: string
                        example: /
                      per_page:
                        type: integer
                        example: 25
                      to:
                        type: integer
                        example: 2
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Phones'
    post:
      summary: 'Create Customer Phone'
      operationId: createCustomerPhone
      description: ''
      parameters: []
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    type: Mobile
                    name: 'Della Prohaska'
                    number: 1-352-783-0893
                    is_default: true
                    created_at: '2024-10-21 21:57:18'
                    updated_at: '2024-10-21 21:57:18'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      type:
                        type: string
                        example: Mobile
                      name:
                        type: string
                        example: 'Della Prohaska'
                      number:
                        type: string
                        example: 1-352-783-0893
                      is_default:
                        type: boolean
                        example: true
                      created_at:
                        type: string
                        example: '2024-10-21 21:57:18'
                      updated_at:
                        type: string
                        example: '2024-10-21 21:57:18'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Phones'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: ''
                  example: Office
                  enum:
                    - Home
                    - Office
                    - Mobile
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'John Doe'
                number:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 32 characters.'
                  example: +1-956-745-2290
                is_default:
                  type: boolean
                  description: ''
                  example: false
              required:
                - type
                - name
                - number
    parameters:
      -
        in: path
        name: customer_id
        description: 'The ID of the customer.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/customers/{customer_id}/phones/{id}':
    get:
      summary: 'Get Customer Phone'
      operationId: getCustomerPhone
      description: ''
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    type: Home
                    name: 'Mr. Chadrick Bergstrom'
                    number: '+1 (515) 963-3388'
                    is_default: true
                    created_at: '2024-10-21 21:57:18'
                    updated_at: '2024-10-21 21:57:18'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      type:
                        type: string
                        example: Home
                      name:
                        type: string
                        example: 'Mr. Chadrick Bergstrom'
                      number:
                        type: string
                        example: '+1 (515) 963-3388'
                      is_default:
                        type: boolean
                        example: true
                      created_at:
                        type: string
                        example: '2024-10-21 21:57:18'
                      updated_at:
                        type: string
                        example: '2024-10-21 21:57:18'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Phones'
    put:
      summary: 'Update Customer Phone'
      operationId: updateCustomerPhone
      description: ''
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    type: Home
                    name: 'Mrs. Macie Blick'
                    number: 678-435-6592
                    is_default: true
                    created_at: '2024-10-21 21:57:18'
                    updated_at: '2024-10-21 21:57:18'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      type:
                        type: string
                        example: Home
                      name:
                        type: string
                        example: 'Mrs. Macie Blick'
                      number:
                        type: string
                        example: 678-435-6592
                      is_default:
                        type: boolean
                        example: true
                      created_at:
                        type: string
                        example: '2024-10-21 21:57:18'
                      updated_at:
                        type: string
                        example: '2024-10-21 21:57:18'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Phones'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: ''
                  example: Mobile
                  enum:
                    - Home
                    - Office
                    - Mobile
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'John Doe'
                number:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 32 characters.'
                  example: +1-956-745-2290
                is_default:
                  type: boolean
                  description: ''
                  example: true
              required:
                - type
                - name
                - number
    parameters:
      -
        in: path
        name: customer_id
        description: 'The ID of the customer.'
        example: 1
        required: true
        schema:
          type: integer
      -
        in: path
        name: id
        description: 'The ID of the phone.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/customers/{customer_id}/addresses':
    get:
      summary: 'List Customer Addresses'
      operationId: listCustomerAddresses
      description: ''
      parameters:
        -
          in: query
          name: type
          description: ''
          example: Billing
          required: false
          schema:
            type: string
            description: ''
            example: Billing
            enum:
              - Billing
              - Shipping
        -
          in: query
          name: search
          description: 'Search for customer addresses by name or any address fields'
          example: '25 Brookfield Road'
          required: false
          schema:
            type: string
            description: 'Search for customer addresses by name or any address fields'
            example: '25 Brookfield Road'
        -
          in: query
          name: per_page
          description: 'Number of results per page (Min 25, Max 100)'
          example: 25
          required: false
          schema:
            type: integer
            description: 'Number of results per page (Min 25, Max 100)'
            example: 25
        -
          in: query
          name: page
          description: 'Page number'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page number'
            example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      type: Shipping
                      name: 'Maggio, Pfannerstill and Gorczany'
                      line1: '36306 Payton Ports'
                      line2: null
                      city: Schimmelland
                      state: Arizona
                      postal_code: '81860'
                      country: 'United States'
                      is_default: true
                      created_at: '2024-10-21 21:57:18'
                      updated_at: '2024-10-21 21:57:18'
                    -
                      id: 1
                      type: Shipping
                      name: West-Spencer
                      line1: '442 Bergnaum Groves Suite 518'
                      line2: null
                      city: 'New Jeraldchester'
                      state: Washington
                      postal_code: '99237'
                      country: 'United States'
                      is_default: true
                      created_at: '2024-10-21 21:57:18'
                      updated_at: '2024-10-21 21:57:18'
                  links:
                    first: '/?page=1'
                    last: null
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: 1
                    path: /
                    per_page: 25
                    to: 2
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        type: Shipping
                        name: 'Maggio, Pfannerstill and Gorczany'
                        line1: '36306 Payton Ports'
                        line2: null
                        city: Schimmelland
                        state: Arizona
                        postal_code: '81860'
                        country: 'United States'
                        is_default: true
                        created_at: '2024-10-21 21:57:18'
                        updated_at: '2024-10-21 21:57:18'
                      -
                        id: 1
                        type: Shipping
                        name: West-Spencer
                        line1: '442 Bergnaum Groves Suite 518'
                        line2: null
                        city: 'New Jeraldchester'
                        state: Washington
                        postal_code: '99237'
                        country: 'United States'
                        is_default: true
                        created_at: '2024-10-21 21:57:18'
                        updated_at: '2024-10-21 21:57:18'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        type:
                          type: string
                          example: Shipping
                        name:
                          type: string
                          example: 'Maggio, Pfannerstill and Gorczany'
                        line1:
                          type: string
                          example: '36306 Payton Ports'
                        line2:
                          type: string
                          example: null
                        city:
                          type: string
                          example: Schimmelland
                        state:
                          type: string
                          example: Arizona
                        postal_code:
                          type: string
                          example: '81860'
                        country:
                          type: string
                          example: 'United States'
                        is_default:
                          type: boolean
                          example: true
                        created_at:
                          type: string
                          example: '2024-10-21 21:57:18'
                        updated_at:
                          type: string
                          example: '2024-10-21 21:57:18'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: '/?page=1'
                      last:
                        type: string
                        example: null
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      path:
                        type: string
                        example: /
                      per_page:
                        type: integer
                        example: 25
                      to:
                        type: integer
                        example: 2
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Addresses'
    post:
      summary: 'Create Customer Address'
      operationId: createCustomerAddress
      description: ''
      parameters: []
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    type: Shipping
                    name: Terry-Gutkowski
                    line1: '687 Genesis Rapids Apt. 608'
                    line2: null
                    city: Leathaland
                    state: 'North Dakota'
                    postal_code: '89712'
                    country: 'United States'
                    is_default: true
                    created_at: '2024-10-21 21:57:18'
                    updated_at: '2024-10-21 21:57:18'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      type:
                        type: string
                        example: Shipping
                      name:
                        type: string
                        example: Terry-Gutkowski
                      line1:
                        type: string
                        example: '687 Genesis Rapids Apt. 608'
                      line2:
                        type: string
                        example: null
                      city:
                        type: string
                        example: Leathaland
                      state:
                        type: string
                        example: 'North Dakota'
                      postal_code:
                        type: string
                        example: '89712'
                      country:
                        type: string
                        example: 'United States'
                      is_default:
                        type: boolean
                        example: true
                      created_at:
                        type: string
                        example: '2024-10-21 21:57:18'
                      updated_at:
                        type: string
                        example: '2024-10-21 21:57:18'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Addresses'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: ''
                  example: Shipping
                  enum:
                    - Billing
                    - Shipping
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'John Doe'
                line1:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: '2592 Jada Key'
                line2:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'Apartment 504'
                city:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'South Josh'
                state:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: Kentucky
                postal_code:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 62249-8453
                country:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'United States'
                is_default:
                  type: boolean
                  description: ''
                  example: true
              required:
                - type
                - name
                - line1
                - city
                - postal_code
                - country
    parameters:
      -
        in: path
        name: customer_id
        description: 'The ID of the customer.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/customers/{customer_id}/addresses/{id}':
    get:
      summary: 'Get Customer Address'
      operationId: getCustomerAddress
      description: ''
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    type: Shipping
                    name: 'Schinner LLC'
                    line1: '65852 Kub Way'
                    line2: null
                    city: Billietown
                    state: Montana
                    postal_code: '66409'
                    country: 'United States'
                    is_default: true
                    created_at: '2024-10-21 21:57:18'
                    updated_at: '2024-10-21 21:57:18'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      type:
                        type: string
                        example: Shipping
                      name:
                        type: string
                        example: 'Schinner LLC'
                      line1:
                        type: string
                        example: '65852 Kub Way'
                      line2:
                        type: string
                        example: null
                      city:
                        type: string
                        example: Billietown
                      state:
                        type: string
                        example: Montana
                      postal_code:
                        type: string
                        example: '66409'
                      country:
                        type: string
                        example: 'United States'
                      is_default:
                        type: boolean
                        example: true
                      created_at:
                        type: string
                        example: '2024-10-21 21:57:18'
                      updated_at:
                        type: string
                        example: '2024-10-21 21:57:18'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Addresses'
    put:
      summary: 'Update Customer Address'
      operationId: updateCustomerAddress
      description: ''
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    type: Billing
                    name: 'Christiansen Inc'
                    line1: '97155 Beier Inlet Suite 996'
                    line2: null
                    city: Greenholtstad
                    state: Alaska
                    postal_code: '30523'
                    country: 'United States'
                    is_default: true
                    created_at: '2024-10-21 21:57:18'
                    updated_at: '2024-10-21 21:57:18'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      type:
                        type: string
                        example: Billing
                      name:
                        type: string
                        example: 'Christiansen Inc'
                      line1:
                        type: string
                        example: '97155 Beier Inlet Suite 996'
                      line2:
                        type: string
                        example: null
                      city:
                        type: string
                        example: Greenholtstad
                      state:
                        type: string
                        example: Alaska
                      postal_code:
                        type: string
                        example: '30523'
                      country:
                        type: string
                        example: 'United States'
                      is_default:
                        type: boolean
                        example: true
                      created_at:
                        type: string
                        example: '2024-10-21 21:57:18'
                      updated_at:
                        type: string
                        example: '2024-10-21 21:57:18'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Addresses'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: ''
                  example: Shipping
                  enum:
                    - Billing
                    - Shipping
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'John Doe'
                line1:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: '2592 Jada Key'
                line2:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'Apartment 504'
                city:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'South Josh'
                state:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: Kentucky
                postal_code:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 62249-8453
                country:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'United States'
                is_default:
                  type: boolean
                  description: ''
                  example: true
              required:
                - type
                - name
                - line1
                - city
                - postal_code
                - country
    parameters:
      -
        in: path
        name: customer_id
        description: 'The ID of the customer.'
        example: 1
        required: true
        schema:
          type: integer
      -
        in: path
        name: id
        description: 'The ID of the address.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/customer-categories:
    get:
      summary: 'List Customer Categories'
      operationId: listCustomerCategories
      description: ''
      parameters:
        -
          in: query
          name: search
          description: 'Search for customer categories by name'
          example: Freelance
          required: false
          schema:
            type: string
            description: 'Search for customer categories by name'
            example: Freelance
        -
          in: query
          name: per_page
          description: 'Number of results per page (Min 25, Max 100)'
          example: 25
          required: false
          schema:
            type: integer
            description: 'Number of results per page (Min 25, Max 100)'
            example: 25
        -
          in: query
          name: page
          description: 'Page number'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page number'
            example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      name: Eveniet
                      created_at: '2024-10-21 21:57:18'
                      updated_at: '2024-10-21 21:57:18'
                    -
                      id: 1
                      name: Totam
                      created_at: '2024-10-21 21:57:18'
                      updated_at: '2024-10-21 21:57:18'
                  links:
                    first: '/?page=1'
                    last: null
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: 1
                    path: /
                    per_page: 25
                    to: 2
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        name: Eveniet
                        created_at: '2024-10-21 21:57:18'
                        updated_at: '2024-10-21 21:57:18'
                      -
                        id: 1
                        name: Totam
                        created_at: '2024-10-21 21:57:18'
                        updated_at: '2024-10-21 21:57:18'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: Eveniet
                        created_at:
                          type: string
                          example: '2024-10-21 21:57:18'
                        updated_at:
                          type: string
                          example: '2024-10-21 21:57:18'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: '/?page=1'
                      last:
                        type: string
                        example: null
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      path:
                        type: string
                        example: /
                      per_page:
                        type: integer
                        example: 25
                      to:
                        type: integer
                        example: 2
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Categories'
    post:
      summary: 'Create Customer Category'
      operationId: createCustomerCategory
      description: ''
      parameters: []
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: Consequatur
                    created_at: '2024-10-21 21:57:18'
                    updated_at: '2024-10-21 21:57:18'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: Consequatur
                      created_at:
                        type: string
                        example: '2024-10-21 21:57:18'
                      updated_at:
                        type: string
                        example: '2024-10-21 21:57:18'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Categories'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: Freelance
              required:
                - name
  '/api/v1/customer-categories/{id}':
    get:
      summary: 'Get Customer Category'
      operationId: getCustomerCategory
      description: ''
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: Asperiores
                    created_at: '2024-10-21 21:57:18'
                    updated_at: '2024-10-21 21:57:18'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: Asperiores
                      created_at:
                        type: string
                        example: '2024-10-21 21:57:18'
                      updated_at:
                        type: string
                        example: '2024-10-21 21:57:18'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Categories'
    put:
      summary: 'Update Customer Category'
      operationId: updateCustomerCategory
      description: ''
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: Sint
                    created_at: '2024-10-21 21:57:18'
                    updated_at: '2024-10-21 21:57:18'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: Sint
                      created_at:
                        type: string
                        example: '2024-10-21 21:57:18'
                      updated_at:
                        type: string
                        example: '2024-10-21 21:57:18'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Categories'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: Freelance
              required:
                - name
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the customer category.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/customer-categories-sync:
    put:
      summary: 'Sync Customer Categories'
      operationId: syncCustomerCategories
      description: ''
      parameters: []
      responses:
        204:
          description: 'Customer Categories Synced'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Customer Categories'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                customer_id:
                  type: integer
                  description: ''
                  example: 1
                category_ids:
                  type: array
                  description: ''
                  example:
                    - 18
                  items:
                    type: integer
              required:
                - customer_id
  /api/v1/products:
    get:
      summary: 'List Products'
      operationId: listProducts
      description: ''
      parameters:
        -
          in: query
          name: search
          description: 'Search for products by name or sku'
          example: 'Website Hosting'
          required: false
          schema:
            type: string
            description: 'Search for products by name or sku'
            example: 'Website Hosting'
        -
          in: query
          name: per_page
          description: 'Number of results per page (Min 25, Max 100)'
          example: 25
          required: false
          schema:
            type: integer
            description: 'Number of results per page (Min 25, Max 100)'
            example: 25
        -
          in: query
          name: page
          description: 'Page number'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page number'
            example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      name: 'Facilis Est Possimus'
                      sku: NPPLEGFZGTNRKUVZ
                      description: 'In ipsa consequatur rerum officiis consequatur. Exercitationem harum deleniti suscipit aut et voluptatem. Est commodi excepturi in amet tenetur asperiores.'
                      unit_type: kg
                      unit_price: 78.96
                      supplier: 'Dare Inc'
                      created_at: '2024-10-21 21:57:18'
                      updated_at: '2024-10-21 21:57:18'
                    -
                      id: 1
                      name: 'Enim Eum Tempora'
                      sku: ZBBCLFZZCM1SLR0V
                      description: 'Officiis facere labore quis. Voluptas velit est ut reiciendis sunt earum hic. Dolores omnis quaerat est eos voluptatem quam quos voluptate.'
                      unit_type: kg
                      unit_price: 43.12
                      supplier: 'Franecki, Cremin and Haley'
                      created_at: '2024-10-21 21:57:18'
                      updated_at: '2024-10-21 21:57:18'
                  links:
                    first: '/?page=1'
                    last: null
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: 1
                    path: /
                    per_page: 25
                    to: 2
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        name: 'Facilis Est Possimus'
                        sku: NPPLEGFZGTNRKUVZ
                        description: 'In ipsa consequatur rerum officiis consequatur. Exercitationem harum deleniti suscipit aut et voluptatem. Est commodi excepturi in amet tenetur asperiores.'
                        unit_type: kg
                        unit_price: 78.96
                        supplier: 'Dare Inc'
                        created_at: '2024-10-21 21:57:18'
                        updated_at: '2024-10-21 21:57:18'
                      -
                        id: 1
                        name: 'Enim Eum Tempora'
                        sku: ZBBCLFZZCM1SLR0V
                        description: 'Officiis facere labore quis. Voluptas velit est ut reiciendis sunt earum hic. Dolores omnis quaerat est eos voluptatem quam quos voluptate.'
                        unit_type: kg
                        unit_price: 43.12
                        supplier: 'Franecki, Cremin and Haley'
                        created_at: '2024-10-21 21:57:18'
                        updated_at: '2024-10-21 21:57:18'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: 'Facilis Est Possimus'
                        sku:
                          type: string
                          example: NPPLEGFZGTNRKUVZ
                        description:
                          type: string
                          example: 'In ipsa consequatur rerum officiis consequatur. Exercitationem harum deleniti suscipit aut et voluptatem. Est commodi excepturi in amet tenetur asperiores.'
                        unit_type:
                          type: string
                          example: kg
                        unit_price:
                          type: number
                          example: 78.96
                        supplier:
                          type: string
                          example: 'Dare Inc'
                        created_at:
                          type: string
                          example: '2024-10-21 21:57:18'
                        updated_at:
                          type: string
                          example: '2024-10-21 21:57:18'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: '/?page=1'
                      last:
                        type: string
                        example: null
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      path:
                        type: string
                        example: /
                      per_page:
                        type: integer
                        example: 25
                      to:
                        type: integer
                        example: 2
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - Products
    post:
      summary: 'Create Product'
      operationId: createProduct
      description: ''
      parameters: []
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: 'Dignissimos Sint Ad'
                    sku: UTGFDQF80U9SX6KO
                    description: 'Occaecati distinctio perspiciatis accusamus non tenetur inventore saepe. In provident aut sit ut et eos. In dignissimos eveniet voluptas sint.'
                    unit_type: cm
                    unit_price: 27.2
                    supplier: "O'Conner, Altenwerth and Lakin"
                    created_at: '2024-10-21 21:57:18'
                    updated_at: '2024-10-21 21:57:18'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'Dignissimos Sint Ad'
                      sku:
                        type: string
                        example: UTGFDQF80U9SX6KO
                      description:
                        type: string
                        example: 'Occaecati distinctio perspiciatis accusamus non tenetur inventore saepe. In provident aut sit ut et eos. In dignissimos eveniet voluptas sint.'
                      unit_type:
                        type: string
                        example: cm
                      unit_price:
                        type: number
                        example: 27.2
                      supplier:
                        type: string
                        example: "O'Conner, Altenwerth and Lakin"
                      created_at:
                        type: string
                        example: '2024-10-21 21:57:18'
                      updated_at:
                        type: string
                        example: '2024-10-21 21:57:18'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - Products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'Website Hosting'
                sku:
                  type: string
                  description: 'Must not be greater than 32 characters.'
                  example: WH-001
                description:
                  type: string
                  description: ''
                  example: 'Standard website hosting on shared server'
                unit_type:
                  type: string
                  description: 'Must not be greater than 16 characters.'
                  example: Each
                unit_price:
                  type: number
                  description: 'Must be at least 0.'
                  example: 12.99
                supplier:
                  type: string
                  description: 'Must not be greater than 64 characters.'
                  example: 'Drip Dropz Ltd'
              required:
                - name
                - unit_price
  '/api/v1/products/{id}':
    get:
      summary: 'Get Product'
      operationId: getProduct
      description: ''
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: 'Cupiditate Quis Expedita'
                    sku: UN0YZ4BP3Z5TYM2F
                    description: 'Voluptatem deleniti animi maiores velit. Sit a blanditiis consequatur blanditiis. Odit voluptas error in dolorum unde alias.'
                    unit_type: cm
                    unit_price: 81.35
                    supplier: Eichmann-Goldner
                    created_at: '2024-10-21 21:57:18'
                    updated_at: '2024-10-21 21:57:18'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'Cupiditate Quis Expedita'
                      sku:
                        type: string
                        example: UN0YZ4BP3Z5TYM2F
                      description:
                        type: string
                        example: 'Voluptatem deleniti animi maiores velit. Sit a blanditiis consequatur blanditiis. Odit voluptas error in dolorum unde alias.'
                      unit_type:
                        type: string
                        example: cm
                      unit_price:
                        type: number
                        example: 81.35
                      supplier:
                        type: string
                        example: Eichmann-Goldner
                      created_at:
                        type: string
                        example: '2024-10-21 21:57:18'
                      updated_at:
                        type: string
                        example: '2024-10-21 21:57:18'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - Products
    put:
      summary: 'Update Product'
      operationId: updateProduct
      description: ''
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: 'Corporis Repudiandae A'
                    sku: 7LNSDNZKEAIMMKN9
                    description: 'Repudiandae qui distinctio corporis praesentium. Nesciunt velit sint est. Vel ea recusandae iste provident.'
                    unit_type: each
                    unit_price: 52.71
                    supplier: Kihn-Langosh
                    created_at: '2024-10-21 21:57:18'
                    updated_at: '2024-10-21 21:57:18'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'Corporis Repudiandae A'
                      sku:
                        type: string
                        example: 7LNSDNZKEAIMMKN9
                      description:
                        type: string
                        example: 'Repudiandae qui distinctio corporis praesentium. Nesciunt velit sint est. Vel ea recusandae iste provident.'
                      unit_type:
                        type: string
                        example: each
                      unit_price:
                        type: number
                        example: 52.71
                      supplier:
                        type: string
                        example: Kihn-Langosh
                      created_at:
                        type: string
                        example: '2024-10-21 21:57:18'
                      updated_at:
                        type: string
                        example: '2024-10-21 21:57:18'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - Products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'Website Hosting'
                sku:
                  type: string
                  description: 'Must not be greater than 32 characters.'
                  example: WH-001
                description:
                  type: string
                  description: ''
                  example: 'Standard website hosting on shared server'
                unit_type:
                  type: string
                  description: 'Must not be greater than 16 characters.'
                  example: Each
                unit_price:
                  type: number
                  description: 'Must be at least 0.'
                  example: 12.99
                supplier:
                  type: string
                  description: 'Must not be greater than 64 characters.'
                  example: 'Drip Dropz Ltd'
              required:
                - name
                - unit_price
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the product.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/product-categories:
    get:
      summary: 'List Product Categories'
      operationId: listProductCategories
      description: ''
      parameters:
        -
          in: query
          name: search
          description: 'Search for product categories by name'
          example: Hosting
          required: false
          schema:
            type: string
            description: 'Search for product categories by name'
            example: Hosting
        -
          in: query
          name: per_page
          description: 'Number of results per page (Min 25, Max 100)'
          example: 25
          required: false
          schema:
            type: integer
            description: 'Number of results per page (Min 25, Max 100)'
            example: 25
        -
          in: query
          name: page
          description: 'Page number'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page number'
            example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      name: Deleniti
                      created_at: '2024-10-21 21:57:18'
                      updated_at: '2024-10-21 21:57:18'
                    -
                      id: 1
                      name: Dicta
                      created_at: '2024-10-21 21:57:18'
                      updated_at: '2024-10-21 21:57:18'
                  links:
                    first: '/?page=1'
                    last: null
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: 1
                    path: /
                    per_page: 25
                    to: 2
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        name: Deleniti
                        created_at: '2024-10-21 21:57:18'
                        updated_at: '2024-10-21 21:57:18'
                      -
                        id: 1
                        name: Dicta
                        created_at: '2024-10-21 21:57:18'
                        updated_at: '2024-10-21 21:57:18'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: Deleniti
                        created_at:
                          type: string
                          example: '2024-10-21 21:57:18'
                        updated_at:
                          type: string
                          example: '2024-10-21 21:57:18'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: '/?page=1'
                      last:
                        type: string
                        example: null
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      path:
                        type: string
                        example: /
                      per_page:
                        type: integer
                        example: 25
                      to:
                        type: integer
                        example: 2
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Product Categories'
    post:
      summary: 'Create Product Category'
      operationId: createProductCategory
      description: ''
      parameters: []
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: Distinctio
                    created_at: '2024-10-21 21:57:18'
                    updated_at: '2024-10-21 21:57:18'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: Distinctio
                      created_at:
                        type: string
                        example: '2024-10-21 21:57:18'
                      updated_at:
                        type: string
                        example: '2024-10-21 21:57:18'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Product Categories'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: Hosting
              required:
                - name
  '/api/v1/product-categories/{id}':
    get:
      summary: 'Get Product Category'
      operationId: getProductCategory
      description: ''
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: Et
                    created_at: '2024-10-21 21:57:18'
                    updated_at: '2024-10-21 21:57:18'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: Et
                      created_at:
                        type: string
                        example: '2024-10-21 21:57:18'
                      updated_at:
                        type: string
                        example: '2024-10-21 21:57:18'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Product Categories'
    put:
      summary: 'Update Product Category'
      operationId: updateProductCategory
      description: ''
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: Quo
                    created_at: '2024-10-21 21:57:18'
                    updated_at: '2024-10-21 21:57:18'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: Quo
                      created_at:
                        type: string
                        example: '2024-10-21 21:57:18'
                      updated_at:
                        type: string
                        example: '2024-10-21 21:57:18'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Product Categories'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: Hosting
              required:
                - name
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the product category.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/product-categories-sync:
    put:
      summary: 'Sync Customer Categories'
      operationId: syncCustomerCategories
      description: ''
      parameters: []
      responses:
        204:
          description: 'Customer Categories Synced'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - 'Product Categories'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product_id:
                  type: integer
                  description: ''
                  example: 1
                category_ids:
                  type: array
                  description: ''
                  example:
                    - 8
                  items:
                    type: integer
              required:
                - product_id
  /api/v1/services:
    get:
      summary: 'List Services'
      operationId: listServices
      description: ''
      parameters:
        -
          in: query
          name: search
          description: 'Search for services by name'
          example: 'Software Development'
          required: false
          schema:
            type: string
            description: 'Search for services by name'
            example: 'Software Development'
        -
          in: query
          name: per_page
          description: 'Number of results per page (Min 25, Max 100)'
          example: 25
          required: false
          schema:
            type: integer
            description: 'Number of results per page (Min 25, Max 100)'
            example: 25
        -
          in: query
          name: page
          description: 'Page number'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page number'
            example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      name: 'Qui Repellat Perferendis'
                      description: 'Dignissimos deserunt minus excepturi libero. Praesentium nihil quis enim quo necessitatibus soluta. Magni suscipit et omnis autem.'
                      unit_price: 28.05
                      supplier: 'Langworth PLC'
                      created_at: '2024-10-21 21:57:18'
                      updated_at: '2024-10-21 21:57:18'
                    -
                      id: 1
                      name: 'Voluptatibus Animi Molestiae'
                      description: 'Architecto accusantium voluptate expedita eius a asperiores mollitia sunt. Similique nihil nostrum quam magnam sint velit ratione. Est necessitatibus voluptate tempora dolor.'
                      unit_price: 57.99
                      supplier: 'Will, Legros and Upton'
                      created_at: '2024-10-21 21:57:18'
                      updated_at: '2024-10-21 21:57:18'
                  links:
                    first: '/?page=1'
                    last: null
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: 1
                    path: /
                    per_page: 25
                    to: 2
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        name: 'Qui Repellat Perferendis'
                        description: 'Dignissimos deserunt minus excepturi libero. Praesentium nihil quis enim quo necessitatibus soluta. Magni suscipit et omnis autem.'
                        unit_price: 28.05
                        supplier: 'Langworth PLC'
                        created_at: '2024-10-21 21:57:18'
                        updated_at: '2024-10-21 21:57:18'
                      -
                        id: 1
                        name: 'Voluptatibus Animi Molestiae'
                        description: 'Architecto accusantium voluptate expedita eius a asperiores mollitia sunt. Similique nihil nostrum quam magnam sint velit ratione. Est necessitatibus voluptate tempora dolor.'
                        unit_price: 57.99
                        supplier: 'Will, Legros and Upton'
                        created_at: '2024-10-21 21:57:18'
                        updated_at: '2024-10-21 21:57:18'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: 'Qui Repellat Perferendis'
                        description:
                          type: string
                          example: 'Dignissimos deserunt minus excepturi libero. Praesentium nihil quis enim quo necessitatibus soluta. Magni suscipit et omnis autem.'
                        unit_price:
                          type: number
                          example: 28.05
                        supplier:
                          type: string
                          example: 'Langworth PLC'
                        created_at:
                          type: string
                          example: '2024-10-21 21:57:18'
                        updated_at:
                          type: string
                          example: '2024-10-21 21:57:18'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: '/?page=1'
                      last:
                        type: string
                        example: null
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      path:
                        type: string
                        example: /
                      per_page:
                        type: integer
                        example: 25
                      to:
                        type: integer
                        example: 2
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - Services
    post:
      summary: 'Create Service'
      operationId: createService
      description: ''
      parameters: []
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: 'Alias Optio Est'
                    description: 'Mollitia debitis vel asperiores sequi tempore. Facilis quis qui enim tempore qui. Ut non eum ipsa incidunt eveniet corrupti et.'
                    unit_price: 61.73
                    supplier: 'Goodwin, Heidenreich and Graham'
                    created_at: '2024-10-21 21:57:18'
                    updated_at: '2024-10-21 21:57:18'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'Alias Optio Est'
                      description:
                        type: string
                        example: 'Mollitia debitis vel asperiores sequi tempore. Facilis quis qui enim tempore qui. Ut non eum ipsa incidunt eveniet corrupti et.'
                      unit_price:
                        type: number
                        example: 61.73
                      supplier:
                        type: string
                        example: 'Goodwin, Heidenreich and Graham'
                      created_at:
                        type: string
                        example: '2024-10-21 21:57:18'
                      updated_at:
                        type: string
                        example: '2024-10-21 21:57:18'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - Services
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'Software Development'
                description:
                  type: string
                  description: ''
                  example: 'Rate for software development'
                unit_price:
                  type: number
                  description: 'Must be at least 0.'
                  example: 40.5
                supplier:
                  type: string
                  description: 'Must not be greater than 64 characters.'
                  example: 'Cardano Mercury Ltd'
              required:
                - name
                - unit_price
  '/api/v1/services/{id}':
    get:
      summary: 'Get Service'
      operationId: getService
      description: ''
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: 'Voluptate Soluta In'
                    description: 'Harum sit delectus officia pariatur. Praesentium aperiam qui dolore aut perspiciatis ex. Esse numquam eum accusamus enim at corporis ad.'
                    unit_price: 25.62
                    supplier: Oberbrunner-Bayer
                    created_at: '2024-10-21 21:57:18'
                    updated_at: '2024-10-21 21:57:18'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'Voluptate Soluta In'
                      description:
                        type: string
                        example: 'Harum sit delectus officia pariatur. Praesentium aperiam qui dolore aut perspiciatis ex. Esse numquam eum accusamus enim at corporis ad.'
                      unit_price:
                        type: number
                        example: 25.62
                      supplier:
                        type: string
                        example: Oberbrunner-Bayer
                      created_at:
                        type: string
                        example: '2024-10-21 21:57:18'
                      updated_at:
                        type: string
                        example: '2024-10-21 21:57:18'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - Services
    put:
      summary: 'Update Service'
      operationId: updateService
      description: ''
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: 'Omnis Labore Soluta'
                    description: 'Eum commodi autem temporibus voluptates officia. Suscipit velit eos sed numquam. Magni possimus cumque illum quia quasi ab eius.'
                    unit_price: 29.65
                    supplier: Boehm-Lehner
                    created_at: '2024-10-21 21:57:18'
                    updated_at: '2024-10-21 21:57:18'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'Omnis Labore Soluta'
                      description:
                        type: string
                        example: 'Eum commodi autem temporibus voluptates officia. Suscipit velit eos sed numquam. Magni possimus cumque illum quia quasi ab eius.'
                      unit_price:
                        type: number
                        example: 29.65
                      supplier:
                        type: string
                        example: Boehm-Lehner
                      created_at:
                        type: string
                        example: '2024-10-21 21:57:18'
                      updated_at:
                        type: string
                        example: '2024-10-21 21:57:18'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Not Found'
                    type: object
                    example:
                      message: 'Route or Record Not found'
                    properties:
                      message:
                        type: string
                        example: 'Route or Record Not found'
                  -
                    description: 'Bad Request'
                    type: object
                    example:
                      message: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
                    properties:
                      message:
                        type: string
                        example: 'The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH'
        422:
          description: 'Validation Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Failed'
                  fields:
                    field_name:
                      - 'The field name is required.'
                    another_field:
                      - 'The another field must not be greater than 64 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation Failed'
                  fields:
                    type: object
                    properties:
                      field_name:
                        type: array
                        example:
                          - 'The field name is required.'
                        items:
                          type: string
                      another_field:
                        type: array
                        example:
                          - 'The another field must not be greater than 64 characters.'
                        items:
                          type: string
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Internal Server Error'
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
      tags:
        - Services
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
                  example: 'Software Development'
                description:
                  type: string
                  description: ''
                  example: 'Rate for software development'
                unit_price:
                  type: number
                  description: 'Must be at least 0.'
                  example: 40.5
                supplier:
                  type: string
                  description: 'Must not be greater than 64 characters.'
                  example: 'Cardano Mercury Ltd'
              required:
                - name
                - unit_price
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the service.'
        example: 1
        required: true
        schema:
          type: integer
tags:
  -
    name: Customers
    description: 'Customer Management API'
  -
    name: 'Customer Emails'
    description: 'Customer Email Management API'
  -
    name: 'Customer Phones'
    description: 'Customer Phone Management API'
  -
    name: 'Customer Addresses'
    description: 'Customer Address Management API'
  -
    name: 'Customer Categories'
    description: 'Customer Category Management API'
  -
    name: Products
    description: 'Product Management API'
  -
    name: 'Product Categories'
    description: 'Product Category Management API'
  -
    name: Services
    description: 'Service Management API'
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: 'You can generate your token by logging in and clicking your name, and then <a href="/user/api-tokens"><b>API Tokens</b></a>.'
security:
  -
    default: []
