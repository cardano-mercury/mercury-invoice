name: 'Customer Addresses'
description: 'Customer Address Management API'
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/v1/customers/{customer_id}/addresses'
    metadata:
      groupName: 'Customer Addresses'
      groupDescription: 'Customer Address Management API'
      subgroup: ''
      subgroupDescription: ''
      title: 'List Customer Addresses'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      customer_id:
        name: customer_id
        description: 'The ID of the customer.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      customer_id: 1
    queryParameters:
      type:
        name: type
        description: ''
        required: false
        example: Billing
        type: string
        enumValues:
          - Billing
          - Shipping
        exampleWasSpecified: false
        custom: []
      search:
        name: search
        description: 'Search for customer addresses by name or any address fields'
        required: false
        example: '25 Brookfield Road'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      per_page:
        name: per_page
        description: 'Number of results per page (Min 25, Max 100)'
        required: false
        example: 25
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      page:
        name: page
        description: 'Page number'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanQueryParameters:
      type: Billing
      search: '25 Brookfield Road'
      per_page: 25
      page: 1
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":1,"type":"Shipping","name":"Maggio, Pfannerstill and Gorczany","line1":"36306 Payton Ports","line2":null,"city":"Schimmelland","state":"Arizona","postal_code":"81860","country":"United States","is_default":true,"created_at":"2024-10-21 21:57:18","updated_at":"2024-10-21 21:57:18"},{"id":1,"type":"Shipping","name":"West-Spencer","line1":"442 Bergnaum Groves Suite 518","line2":null,"city":"New Jeraldchester","state":"Washington","postal_code":"99237","country":"United States","is_default":true,"created_at":"2024-10-21 21:57:18","updated_at":"2024-10-21 21:57:18"}],"links":{"first":"\/?page=1","last":null,"prev":null,"next":null},"meta":{"current_page":1,"from":1,"path":"\/","per_page":25,"to":2}}'
        headers: []
        description: OK
        custom: []
      -
        status: 401
        content: |
          {
              "message": "Unauthorized"
          }
        headers: []
        description: Unauthorized
        custom: []
      -
        status: 404
        content: |
          {
              "message": "Route or Record Not found"
          }
        headers: []
        description: 'Not Found'
        custom: []
      -
        status: 404
        content: |
          {
              "message": "The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH"
          }
        headers: []
        description: 'Bad Request'
        custom: []
      -
        status: 500
        content: |
          {
              "message": "Internal Server Error"
          }
        headers: []
        description: 'Internal Server Error'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer eZhvdkVD6cfaa1856gPbE34'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/customers/{customer_id}/addresses'
    metadata:
      groupName: 'Customer Addresses'
      groupDescription: 'Customer Address Management API'
      subgroup: ''
      subgroupDescription: ''
      title: 'Create Customer Address'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      customer_id:
        name: customer_id
        description: 'The ID of the customer.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      customer_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      type:
        name: type
        description: ''
        required: true
        example: Shipping
        type: string
        enumValues:
          - Billing
          - Shipping
        exampleWasSpecified: false
        custom: []
      name:
        name: name
        description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
        required: true
        example: 'John Doe'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      line1:
        name: line1
        description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
        required: true
        example: '2592 Jada Key'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      line2:
        name: line2
        description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
        required: false
        example: 'Apartment 504'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      city:
        name: city
        description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
        required: true
        example: 'South Josh'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      state:
        name: state
        description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
        required: false
        example: Kentucky
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      postal_code:
        name: postal_code
        description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
        required: true
        example: 62249-8453
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      country:
        name: country
        description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
        required: true
        example: 'United States'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      is_default:
        name: is_default
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      type: Shipping
      name: 'John Doe'
      line1: '2592 Jada Key'
      line2: 'Apartment 504'
      city: 'South Josh'
      state: Kentucky
      postal_code: 62249-8453
      country: 'United States'
      is_default: true
    fileParameters: []
    responses:
      -
        status: 201
        content: '{"data":{"id":1,"type":"Shipping","name":"Terry-Gutkowski","line1":"687 Genesis Rapids Apt. 608","line2":null,"city":"Leathaland","state":"North Dakota","postal_code":"89712","country":"United States","is_default":true,"created_at":"2024-10-21 21:57:18","updated_at":"2024-10-21 21:57:18"}}'
        headers: []
        description: Created
        custom: []
      -
        status: 401
        content: |
          {
              "message": "Unauthorized"
          }
        headers: []
        description: Unauthorized
        custom: []
      -
        status: 404
        content: |
          {
              "message": "Route or Record Not found"
          }
        headers: []
        description: 'Not Found'
        custom: []
      -
        status: 404
        content: |
          {
              "message": "The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH"
          }
        headers: []
        description: 'Bad Request'
        custom: []
      -
        status: 422
        content: |
          {
              "message": "Validation Failed",
              "fields": {
                  "field_name": [
                      "The field name is required."
                  ],
                  "another_field": [
                      "The another field must not be greater than 64 characters."
                  ]
              }
          }
        headers: []
        description: 'Validation Failed'
        custom: []
      -
        status: 500
        content: |
          {
              "message": "Internal Server Error"
          }
        headers: []
        description: 'Internal Server Error'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6b6ckedg8EaP4ZV315fvahD'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/customers/{customer_id}/addresses/{id}'
    metadata:
      groupName: 'Customer Addresses'
      groupDescription: 'Customer Address Management API'
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Customer Address'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      customer_id:
        name: customer_id
        description: 'The ID of the customer.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      id:
        name: id
        description: 'The ID of the address.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      customer_id: 1
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":1,"type":"Shipping","name":"Schinner LLC","line1":"65852 Kub Way","line2":null,"city":"Billietown","state":"Montana","postal_code":"66409","country":"United States","is_default":true,"created_at":"2024-10-21 21:57:18","updated_at":"2024-10-21 21:57:18"}}'
        headers: []
        description: OK
        custom: []
      -
        status: 401
        content: |
          {
              "message": "Unauthorized"
          }
        headers: []
        description: Unauthorized
        custom: []
      -
        status: 404
        content: |
          {
              "message": "Route or Record Not found"
          }
        headers: []
        description: 'Not Found'
        custom: []
      -
        status: 404
        content: |
          {
              "message": "The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH"
          }
        headers: []
        description: 'Bad Request'
        custom: []
      -
        status: 500
        content: |
          {
              "message": "Internal Server Error"
          }
        headers: []
        description: 'Internal Server Error'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Ehec648V5Dda3f6vgPk1aZb'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/customers/{customer_id}/addresses/{id}'
    metadata:
      groupName: 'Customer Addresses'
      groupDescription: 'Customer Address Management API'
      subgroup: ''
      subgroupDescription: ''
      title: 'Update Customer Address'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      customer_id:
        name: customer_id
        description: 'The ID of the customer.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      id:
        name: id
        description: 'The ID of the address.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      customer_id: 1
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      type:
        name: type
        description: ''
        required: true
        example: Shipping
        type: string
        enumValues:
          - Billing
          - Shipping
        exampleWasSpecified: false
        custom: []
      name:
        name: name
        description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
        required: true
        example: 'John Doe'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      line1:
        name: line1
        description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
        required: true
        example: '2592 Jada Key'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      line2:
        name: line2
        description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
        required: false
        example: 'Apartment 504'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      city:
        name: city
        description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
        required: true
        example: 'South Josh'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      state:
        name: state
        description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
        required: false
        example: Kentucky
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      postal_code:
        name: postal_code
        description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
        required: true
        example: 62249-8453
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      country:
        name: country
        description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
        required: true
        example: 'United States'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      is_default:
        name: is_default
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      type: Shipping
      name: 'John Doe'
      line1: '2592 Jada Key'
      line2: 'Apartment 504'
      city: 'South Josh'
      state: Kentucky
      postal_code: 62249-8453
      country: 'United States'
      is_default: true
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":1,"type":"Billing","name":"Christiansen Inc","line1":"97155 Beier Inlet Suite 996","line2":null,"city":"Greenholtstad","state":"Alaska","postal_code":"30523","country":"United States","is_default":true,"created_at":"2024-10-21 21:57:18","updated_at":"2024-10-21 21:57:18"}}'
        headers: []
        description: OK
        custom: []
      -
        status: 401
        content: |
          {
              "message": "Unauthorized"
          }
        headers: []
        description: Unauthorized
        custom: []
      -
        status: 404
        content: |
          {
              "message": "Route or Record Not found"
          }
        headers: []
        description: 'Not Found'
        custom: []
      -
        status: 404
        content: |
          {
              "message": "The POST method is not supported for route api/v1/customers/1/phones/16. Supported methods: GET, HEAD, PUT, PATCH"
          }
        headers: []
        description: 'Bad Request'
        custom: []
      -
        status: 422
        content: |
          {
              "message": "Validation Failed",
              "fields": {
                  "field_name": [
                      "The field name is required."
                  ],
                  "another_field": [
                      "The another field must not be greater than 64 characters."
                  ]
              }
          }
        headers: []
        description: 'Validation Failed'
        custom: []
      -
        status: 500
        content: |
          {
              "message": "Internal Server Error"
          }
        headers: []
        description: 'Internal Server Error'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer k5ZaDfVg1P8d46bv6e3haEc'
    controller: null
    method: null
    route: null
    custom: []
