## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Customer Emails'
description: 'Customer Email Management API'
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/v1/customers/{customer_id}/emails'
    metadata:
      groupName: 'Customer Emails'
      groupDescription: 'Customer Email Management API'
      subgroup: ''
      subgroupDescription: ''
      title: 'List Customer Emails'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      customer_id:
        name: customer_id
        description: 'The ID of the customer.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      customer_id: 1
    queryParameters:
      search:
        name: search
        description: 'Search for customer emails by name or address'
        required: false
        example: john.doe@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      per_page:
        name: per_page
        description: 'Number of results per page (Min 25, Max 100)'
        required: false
        example: 25
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      page:
        name: page
        description: 'Page number'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanQueryParameters:
      search: john.doe@example.com
      per_page: 25
      page: 1
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"customer_email_id":1,"name":"Jodie McClure","address":"ortiz.bryana@example.net","is_default":true,"created_at":"2024-10-16 01:33:07","updated_at":"2024-10-16 01:33:07"},{"customer_email_id":1,"name":"Carrie Schmidt","address":"fdubuque@example.net","is_default":true,"created_at":"2024-10-16 01:33:07","updated_at":"2024-10-16 01:33:07"}],"links":{"first":"\/?page=1","last":null,"prev":null,"next":null},"meta":{"current_page":1,"from":1,"path":"\/","per_page":25,"to":2}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 65Va34veDhEg8kfPZadc16b'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/customers/{customer_id}/emails'
    metadata:
      groupName: 'Customer Emails'
      groupDescription: 'Customer Email Management API'
      subgroup: ''
      subgroupDescription: ''
      title: 'Create Customer Email'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      customer_id:
        name: customer_id
        description: 'The ID of the customer.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      customer_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
        required: true
        example: 'John Doe'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      address:
        name: address
        description: 'Must be a valid email address. Must be at least 3 characters. Must not be greater than 256 characters.'
        required: true
        example: john.doe@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      is_default:
        name: is_default
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name: 'John Doe'
      address: john.doe@example.com
      is_default: true
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Dbg1PEf63864Zvaca5ehdVk'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/customers/{customer_id}/emails/{id}'
    metadata:
      groupName: 'Customer Emails'
      groupDescription: 'Customer Email Management API'
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Customer Email'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      customer_id:
        name: customer_id
        description: 'The ID of the customer.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      id:
        name: id
        description: 'The ID of the email.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      customer_id: 1
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthorized"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 1V5caDPdafZg8eb643k6hvE'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/customers/{customer_id}/emails/{id}'
    metadata:
      groupName: 'Customer Emails'
      groupDescription: 'Customer Email Management API'
      subgroup: ''
      subgroupDescription: ''
      title: 'Update Customer Email'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      customer_id:
        name: customer_id
        description: 'The ID of the customer.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      id:
        name: id
        description: 'The ID of the email.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      customer_id: 1
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must be at least 3 characters. Must not be greater than 64 characters.'
        required: true
        example: 'John Doe'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      address:
        name: address
        description: 'Must be a valid email address. Must be at least 3 characters. Must not be greater than 256 characters.'
        required: true
        example: john.doe@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      is_default:
        name: is_default
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name: 'John Doe'
      address: john.doe@example.com
      is_default: false
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer b6dfgD1a4kPcv5eh63VZEa8'
    controller: null
    method: null
    route: null
    custom: []
